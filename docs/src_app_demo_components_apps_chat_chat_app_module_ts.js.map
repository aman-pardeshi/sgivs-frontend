{"version":3,"file":"src_app_demo_components_apps_chat_chat_app_module_ts.js","mappings":"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","sources":["./src/app/demo/components/apps/chat/chat-box/chat-box.component.ts","./src/app/demo/components/apps/chat/chat-box/chat-box.component.html","./src/app/demo/components/apps/chat/chat-sidebar/chat-sidebar.component.ts","./src/app/demo/components/apps/chat/chat-sidebar/chat-sidebar.component.html","./src/app/demo/components/apps/chat/chat.app-routing.module.ts","./src/app/demo/components/apps/chat/chat.app.component.ts","./src/app/demo/components/apps/chat/chat.app.component.html","./src/app/demo/components/apps/chat/chat.app.module.ts","./src/app/demo/components/apps/chat/service/chat.service.ts","./src/app/demo/components/apps/chat/user-card/user-card.component.ts","./src/app/demo/components/apps/chat/user-card/user-card.component.html","./node_modules/primeng/fesm2022/primeng-avatar.mjs"],"sourcesContent":["import { Component, OnInit, Input, ChangeDetectionStrategy } from '@angular/core';\nimport { Message } from 'src/app/demo/api/message';\nimport { User } from 'src/app/demo/api/user';\nimport { ChatService } from '../service/chat.service';\n\n@Component({\n    selector: 'app-chat-box',\n    templateUrl: './chat-box.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ChatBoxComponent implements OnInit {\n\n    defaultUserId: number = 123;\n\n    message!: Message;\n\n    textContent: string = '';\n\n    uploadedFiles: any[] = [];\n\n    emojis = [\n        '😀', '😃', '😄', '😁', '😆', '😅', '😂', '🤣', '😇', '😉', '😊', '🙂', '🙃', '😋', '😌', '😍', '🥰', '😘', '😗', '😙', '😚', '🤪', '😜', '😝', '😛',\n        '🤑', '😎', '🤓', '🧐', '🤠', '🥳', '🤗', '🤡', '😏', '😶', '😐', '😑', '😒', '🙄', '🤨', '🤔', '🤫', '🤭', '🤥', '😳', '😞', '😟', '😠', '😡', '🤬', '😔',\n        '😟', '😠', '😡', '🤬', '😔', '😕', '🙁', '😬', '🥺', '😣', '😖', '😫', '😩', '🥱', '😤', '😮', '😱', '😨', '😰', '😯', '😦', '😧', '😢', '😥', '😪', '🤤'\n    ];\n\n    @Input() user!: User;\n\n    constructor(private chatService: ChatService) { }\n\n    setMessage() {\n        if (this.user) {\n            let filteredMessages = this.user.messages.filter(m => m.ownerId !== this.defaultUserId);\n            this.message = filteredMessages[filteredMessages.length - 1];\n        }\n    }\n\n    ngOnInit(): void {\n        this.setMessage();\n    }\n\n    sendMessage() {\n        if (this.textContent == '' || this.textContent === ' ') {\n            return;\n        }\n        else {\n            let message = {\n                text: this.textContent,\n                ownerId: 123,\n                createdAt: new Date().getTime(),\n            }\n\n            this.chatService.sendMessage(message)\n            this.textContent = '';\n        }\n    }\n\n    onEmojiSelect(emoji: string) {\n        this.textContent += emoji;\n    }\n\n    parseDate(timestamp: number) {\n        return new Date(timestamp).toTimeString().split(':').slice(0, 2).join(':');\n    }\n}\n","<div class=\"flex flex-column h-full\">\n    <div class=\"flex align-items-center border-bottom-1 surface-border p-3 lg:p-6\">\n        <div class=\"relative flex align-items-center mr-3\">\n            <img src=\"assets/demo/images/avatar/{{user.image}}\" alt=\"user.name\" class=\"w-4rem h-4rem border-circle shadow-4\">\n            <span class=\"w-1rem h-1rem border-circle border-2 surface-border absolute bottom-0 right-0\" [ngClass]=\"{'bg-green-400': user.status === 'active', 'bg-red-400': user.status === 'busy', 'bg-yellow-400': user.status === 'away'}\"></span>\n        </div>\n        <div class=\"mr-2\">\n            <span class=\"text-900 font-semibold block\">{{user.name}}</span>\n            <span class=\"text-700\">Last active 1 hour ago</span>\n        </div>\n        <div class=\"flex align-items-center ml-auto\">\n            <button pButton pRipple type=\"button\" icon=\"pi pi-phone\" class=\"p-button-rounded p-button-outlined p-button-secondary mr-3\"></button>\n            <button pButton pRipple type=\"button\" icon=\"pi pi-ellipsis-v\" class=\"p-button-rounded p-button-outlined p-button-secondary\"></button>\n        </div>\n    </div>\n    <div class=\"p-3 md:px-4 lg:px-6 lg:py-4 mt-2 overflow-y-auto\" style=\"max-height: 53vh;\" #chatWindow [scrollTop]=\"chatWindow.scrollHeight\">\n        <div *ngFor=\"let message of user.messages\">\n            <div *ngIf=\"message.ownerId !== 123\" class=\"grid grid-nogutter mb-4\">\n                <div class=\"mr-3 mt-1\">\n                    <img src=\"assets/demo/images/avatar/{{user.image}}\" alt=\"user.name\" class=\"w-3rem h-3rem border-circle shadow-4\">\n                </div>\n                <div class=\"col mt-3\">\n                    <p class=\"text-900 font-semibold mb-3\">{{user.name}}</p>\n                    <span class=\"text-700 inline-block font-medium border-1 surface-border p-3 white-space-normal border-round\" style=\"word-break: break-word; max-width:80%;\">{{message.text}}</span>\n                    <p class=\"text-700 mt-3\">{{parseDate(message.createdAt)}}<i class=\"pi pi-check ml-2 text-green-400\"></i></p>\n                </div>\n            </div>\n\n            <div *ngIf=\"message.ownerId === defaultUserId\" class=\"grid grid-nogutter mb-4\">\n                <div class=\"col mt-3 text-right\">\n                    <span class=\"inline-block text-left font-medium border-1 surface-border bg-primary-100 text-primary-900 p-3 white-space-normal border-round\" style=\"word-break: break-word; max-width:80%;\">{{message.text}}</span>\n                    <p class=\"text-700 mt-3\">{{parseDate(message.createdAt)}} <i class=\"pi pi-check ml-2 text-green-400\"></i></p>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"p-3 md:p-4 lg:p-6 flex flex-column sm:flex-row align-items-center mt-auto border-top-1 surface-border gap-3\">\n        <input id=\"message\" type=\"text\" pInputText placeholder=\"Type a message\" class=\"flex-1 w-full sm:w-auto border-round\" [(ngModel)]=\"textContent\" (keydown.enter)=\"sendMessage()\"/>\n        <div class=\"flex w-full sm:w-auto gap-3\">\n            <button pRipple class=\"p-button p-button-secondary w-full sm:w-auto justify-content-center text-xl\" (click)=\"op.toggle($event)\">😀</button>\n            <button pButton pRipple label=\"Send\" icon=\"pi pi-send\" class=\"w-full sm:w-auto\" (click)=\"sendMessage()\"></button>\n        </div>\n    </div>\n</div>\n\n<p-overlayPanel #op styleClass=\"w-full sm:w-30rem\">\n    <ng-template pTemplate>\n        <button *ngFor=\"let emoji of emojis;\" pButton pRipple (click)=\"op.hide(); onEmojiSelect(emoji)\" type=\"button\" [label]=\"emoji\" class=\"p-2 p-button-text text-2xl\"></button>\n    </ng-template>\n</p-overlayPanel>","import { Component, OnInit } from '@angular/core';\nimport { User } from 'src/app/demo/api/user';\nimport { ChatService } from '../service/chat.service';\n\n@Component({\n    selector: 'app-chat-sidebar',\n    templateUrl: './chat-sidebar.component.html'\n})\nexport class ChatSidebarComponent implements OnInit {\n\n    searchValue: string = '';\n\n    users: User[] = [];\n\n    filteredUsers: User[] = [];\n\n    constructor(private chatService: ChatService) { }\n\n    ngOnInit(): void {\n        this.chatService.getChatData().then(data => {\n            this.users = data;\n            this.filteredUsers = this.users;\n        });\n    }\n\n    filter() {\n        let filtered: User[] = [];\n        for (let i = 0; i < this.users.length; i++) {\n            let user = this.users[i];\n            if (user.name.toLowerCase().indexOf(this.searchValue.toLowerCase()) == 0) {\n                filtered.push(user)\n            }\n        }\n\n        this.filteredUsers = [...filtered];\n    }\n\n}\n","<div class=\"flex flex-column align-items-center border-bottom-1 surface-border p-6\">\n    <img src=\"assets/demo/images/avatar/circle/avatar-f-1@2x.png\" class=\"w-6rem h-6rem border-circle shadow-4\" alt=\"Asiya Javayant\">\n    <span class=\"text-900 text-xl font-semibold mt-4\">Asiya Javayant</span>\n</div>\n<div class=\"w-full flex row-gap-4 flex-column surface-border p-4\">\n    <span class=\"p-input-icon-left w-full\">\n        <i class=\"pi pi-search\"></i>\n        <input id=\"search\" type=\"text\" pInputText placeholder=\"Search\" class=\"w-full\" [(ngModel)]=\"searchValue\" (input)=\"filter()\"/>\n    </span>\n    <div class=\"flex flex-row gap-4 md:flex-column overflow-auto\">\n        <app-user-card *ngFor=\"let user of filteredUsers\" [user]=\"user\"></app-user-card>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { ChatAppComponent } from './chat.app.component';\n\n@NgModule({\n\timports: [RouterModule.forChild([\n\t\t{ path: '', component: ChatAppComponent }\n\t])],\n\texports: [RouterModule]\n})\nexport class ChatAppRoutingModule { }\n","import { Component, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { User } from 'src/app/demo/api/user';\nimport { ChatService } from './service/chat.service';\n\n@Component({\n    templateUrl: './chat.app.component.html'\n})\nexport class ChatAppComponent implements OnDestroy {\n\n    subscription: Subscription;\n\n    activeUser!: User;\n    \n    constructor(private chatService: ChatService) { \n        this.subscription = this.chatService.activeUser$.subscribe(data => this.activeUser = data);\n    }\n\n    ngOnDestroy() {\n        this.subscription.unsubscribe();\n    }\n}\n","<div class=\"flex flex-column md:flex-row gap-5\" style=\"min-height: 81vh\">\n    <div class=\"md:w-25rem card p-0\">\n        <app-chat-sidebar></app-chat-sidebar>\n    </div>\n    <div class=\"flex-1 card p-0\">\n        <app-chat-box [user]=\"activeUser\"></app-chat-box>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ChatAppRoutingModule } from './chat.app-routing.module';\nimport { ChatAppComponent } from './chat.app.component';\nimport { ChatSidebarComponent } from './chat-sidebar/chat-sidebar.component';\nimport { AvatarModule } from 'primeng/avatar';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { ButtonModule } from 'primeng/button';\nimport { OverlayPanelModule } from 'primeng/overlaypanel';\nimport { BadgeModule } from 'primeng/badge';\nimport { UserCardComponent } from './user-card/user-card.component';\nimport { ChatBoxComponent } from './chat-box/chat-box.component';\nimport { ChatService } from './service/chat.service';\nimport { RippleModule } from 'primeng/ripple';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ChatAppRoutingModule,\n        AvatarModule,\n        InputTextModule,\n        ButtonModule,\n        BadgeModule,\n        OverlayPanelModule,\n        RippleModule\n    ],\n    declarations: [\n        ChatSidebarComponent,\n        ChatAppComponent,\n        UserCardComponent,\n        ChatBoxComponent\n    ],\n    providers: [\n        ChatService\n    ]\n})\nexport class ChatAppModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { Message } from 'src/app/demo/api/message';\nimport { User } from 'src/app/demo/api/user';\n\n@Injectable()\nexport class ChatService {\n\n    _activeUser: User = {\n        \"id\": 1,\n        \"name\": \"Ioni Bowcher\",\n        \"image\": \"ionibowcher.png\",\n        \"status\": \"active\",\n        \"messages\": [\n            {\n                \"text\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit\",\n                \"ownerId\": 1,\n                \"createdAt\": 1652646338240\n            },\n            {\n                \"text\": \"Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua\",\n                \"ownerId\": 1,\n                \"createdAt\": 1652646368718\n            },\n            {\n                \"text\": \"Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua\",\n                \"ownerId\": 123,\n                \"createdAt\": 1652646368718\n            },\n        ],\n        \"lastSeen\": \"2d\"\n    }\n\n    private activeUser = new BehaviorSubject<User>(this._activeUser);\n\n    activeUser$ = this.activeUser.asObservable();\n\n    constructor(private http: HttpClient) { }\n\n    getChatData() {\n        return this.http.get<any>('assets/demo/data/chat.json')\n            .toPromise()\n            .then(res => res.data as any[])\n            .then(data => data);\n    }\n\n    changeActiveChat(user: User) {\n        this._activeUser = user;\n        this.activeUser.next(user);\n    }\n\n    sendMessage(message: Message) {\n        this._activeUser.messages.push(message);\n        this.activeUser.next(this._activeUser);\n    }\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Message } from 'src/app/demo/api/message';\nimport { User } from 'src/app/demo/api/user';\nimport { ChatService } from '../service/chat.service';\n\n@Component({\n    selector: 'app-user-card',\n    templateUrl: './user-card.component.html'\n})\nexport class UserCardComponent implements OnInit {\n\n    @Input() user!: User;\n\n    lastMessage!: Message;\n\n    constructor(private chatService: ChatService) { }\n\n    ngOnInit(): void {\n        let filtered = this.user.messages.filter(m => m.ownerId !== 123)\n        this.lastMessage = filtered[filtered.length - 1];\n    }\n\n    changeView(user: User) {\n        this.chatService.changeActiveChat(user);\n    }\n}\n","<div class=\"flex flex-nowrap justify-content-between align-items-center border-1 surface-border border-round p-3 cursor-pointer select-none\n    hover:surface-hover transition-colors transition-duration-150\" \n    (keydown.enter)=\"changeView(user)\" (click)=\"changeView(user)\" tabindex=\"0\">\n    <div class=\"flex align-items-center\">\n        <div class=\"relative md:mr-3\">\n            <img src=\"assets/demo/images/avatar/{{user.image}}\" alt=\"user\" class=\"w-3rem h-3rem border-circle shadow-4\">\n            <span class=\"w-1rem h-1rem border-circle border-2 surface-border absolute\" [ngClass]=\"{'bg-green-400': user.status === 'active', 'bg-red-400': user.status === 'busy', 'bg-yellow-400': 'away'}\" style=\"bottom: 2px; right: 2px\"></span>\n        </div>\n        <div class=\"flex-column hidden md:flex\">\n            <span class=\"text-900 font-semibold block\">{{user.name}}</span>\n            <span class=\"block text-600 text-overflow-ellipsis overflow-hidden white-space-nowrap w-10rem text-sm\">{{lastMessage.text}}</span>\n        </div>\n    </div>\n    <span class=\"text-700 font-semibold ml-auto hidden md:inline\">{{user.lastSeen}}</span>\n</div>","import * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Output, NgModule } from '@angular/core';\n\n/**\n * Avatar represents people using icons, labels and images.\n * @group Components\n */\nclass Avatar {\n    /**\n     * Defines the text to display.\n     * @group Props\n     */\n    label;\n    /**\n     * Defines the icon to display.\n     * @group Props\n     */\n    icon;\n    /**\n     * Defines the image to display.\n     * @group Props\n     */\n    image;\n    /**\n     * Size of the element.\n     * @group Props\n     */\n    size = 'normal';\n    /**\n     * Shape of the element.\n     * @group Props\n     */\n    shape = 'square';\n    /**\n     * Inline style of the element.\n     * @group Props\n     */\n    style;\n    /**\n     * Class of the element.\n     * @group Props\n     */\n    styleClass;\n    /**\n     * Establishes a string value that labels the component.\n     * @group Props\n     */\n    ariaLabel;\n    /**\n     * Establishes relationships between the component and label(s) where its value should be one or more element IDs.\n     * @group Props\n     */\n    ariaLabelledBy;\n    /**\n     * This event is triggered if an error occurs while loading an image file.\n     * @param {Event} event - Browser event.\n     * @group Emits\n     */\n    onImageError = new EventEmitter();\n    containerClass() {\n        return {\n            'p-avatar p-component': true,\n            'p-avatar-image': this.image != null,\n            'p-avatar-circle': this.shape === 'circle',\n            'p-avatar-lg': this.size === 'large',\n            'p-avatar-xl': this.size === 'xlarge'\n        };\n    }\n    imageError(event) {\n        this.onImageError.emit(event);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.5\", ngImport: i0, type: Avatar, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.0.5\", type: Avatar, selector: \"p-avatar\", inputs: { label: \"label\", icon: \"icon\", image: \"image\", size: \"size\", shape: \"shape\", style: \"style\", styleClass: \"styleClass\", ariaLabel: \"ariaLabel\", ariaLabelledBy: \"ariaLabelledBy\" }, outputs: { onImageError: \"onImageError\" }, host: { classAttribute: \"p-element\" }, ngImport: i0, template: `\n        <div [ngClass]=\"containerClass()\" [class]=\"styleClass\" [ngStyle]=\"style\" [attr.aria-labelledby]=\"ariaLabelledBy\" [attr.aria-label]=\"ariaLabel\" [attr.data-pc-name]=\"'avatar'\">\n            <ng-content></ng-content>\n            <span class=\"p-avatar-text\" *ngIf=\"label; else iconTemplate\">{{ label }}</span>\n            <ng-template #iconTemplate><span [class]=\"icon\" [ngClass]=\"'p-avatar-icon'\" *ngIf=\"icon; else imageTemplate\"></span></ng-template>\n            <ng-template #imageTemplate><img [src]=\"image\" *ngIf=\"image\" (error)=\"imageError($event)\" [attr.aria-label]=\"ariaLabel\" /></ng-template>\n        </div>\n    `, isInline: true, styles: [\"@layer primeng{.p-avatar{display:inline-flex;align-items:center;justify-content:center;width:2rem;height:2rem;font-size:1rem}.p-avatar.p-avatar-image{background-color:transparent}.p-avatar.p-avatar-circle{border-radius:50%;overflow:hidden}.p-avatar .p-avatar-icon{font-size:1rem}.p-avatar img{width:100%;height:100%}}\\n\"], dependencies: [{ kind: \"directive\", type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.5\", ngImport: i0, type: Avatar, decorators: [{\n            type: Component,\n            args: [{ selector: 'p-avatar', template: `\n        <div [ngClass]=\"containerClass()\" [class]=\"styleClass\" [ngStyle]=\"style\" [attr.aria-labelledby]=\"ariaLabelledBy\" [attr.aria-label]=\"ariaLabel\" [attr.data-pc-name]=\"'avatar'\">\n            <ng-content></ng-content>\n            <span class=\"p-avatar-text\" *ngIf=\"label; else iconTemplate\">{{ label }}</span>\n            <ng-template #iconTemplate><span [class]=\"icon\" [ngClass]=\"'p-avatar-icon'\" *ngIf=\"icon; else imageTemplate\"></span></ng-template>\n            <ng-template #imageTemplate><img [src]=\"image\" *ngIf=\"image\" (error)=\"imageError($event)\" [attr.aria-label]=\"ariaLabel\" /></ng-template>\n        </div>\n    `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, host: {\n                        class: 'p-element'\n                    }, styles: [\"@layer primeng{.p-avatar{display:inline-flex;align-items:center;justify-content:center;width:2rem;height:2rem;font-size:1rem}.p-avatar.p-avatar-image{background-color:transparent}.p-avatar.p-avatar-circle{border-radius:50%;overflow:hidden}.p-avatar .p-avatar-icon{font-size:1rem}.p-avatar img{width:100%;height:100%}}\\n\"] }]\n        }], propDecorators: { label: [{\n                type: Input\n            }], icon: [{\n                type: Input\n            }], image: [{\n                type: Input\n            }], size: [{\n                type: Input\n            }], shape: [{\n                type: Input\n            }], style: [{\n                type: Input\n            }], styleClass: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input\n            }], ariaLabelledBy: [{\n                type: Input\n            }], onImageError: [{\n                type: Output\n            }] } });\nclass AvatarModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.5\", ngImport: i0, type: AvatarModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.0.5\", ngImport: i0, type: AvatarModule, declarations: [Avatar], imports: [CommonModule], exports: [Avatar] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.0.5\", ngImport: i0, type: AvatarModule, imports: [CommonModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.5\", ngImport: i0, type: AvatarModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    exports: [Avatar],\n                    declarations: [Avatar]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Avatar, AvatarModule };\n"],"names":["i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵtext","ɵɵadvance","ɵɵpropertyInterpolate1","ctx_r5","user","image","ɵɵsanitizeUrl","ɵɵtextInterpolate","name","message_r4","text","parseDate","createdAt","ɵɵtextInterpolate1","ctx_r6","ɵɵtemplate","ChatBoxComponent_div_15_div_1_Template","ChatBoxComponent_div_15_div_2_Template","ɵɵproperty","ownerId","ctx_r1","defaultUserId","ɵɵlistener","ChatBoxComponent_ng_template_24_button_0_Template_button_click_0_listener","restoredCtx","ɵɵrestoreView","_r12","emoji_r10","$implicit","ctx_r11","ɵɵnextContext","_r2","ɵɵreference","hide","ɵɵresetView","onEmojiSelect","ChatBoxComponent_ng_template_24_button_0_Template","ctx_r3","emojis","ChatBoxComponent","constructor","chatService","textContent","uploadedFiles","setMessage","filteredMessages","messages","filter","m","message","length","ngOnInit","sendMessage","Date","getTime","emoji","timestamp","toTimeString","split","slice","join","_","ɵɵdirectiveInject","i1","ChatService","_2","selectors","inputs","decls","vars","consts","template","ChatBoxComponent_Template","rf","ctx","ChatBoxComponent_div_15_Template","ChatBoxComponent_Template_input_ngModelChange_17_listener","$event","ChatBoxComponent_Template_input_keydown_enter_17_listener","ChatBoxComponent_Template_button_click_19_listener","_r13","toggle","ChatBoxComponent_Template_button_click_21_listener","ChatBoxComponent_ng_template_24_Template","ɵɵpureFunction3","_c0","status","_r0","scrollHeight","user_r1","ChatSidebarComponent","searchValue","users","filteredUsers","getChatData","then","data","filtered","i","toLowerCase","indexOf","push","ChatSidebarComponent_Template","ChatSidebarComponent_Template_input_ngModelChange_7_listener","ChatSidebarComponent_Template_input_input_7_listener","ChatSidebarComponent_app_user_card_9_Template","RouterModule","ChatAppComponent","ChatAppRoutingModule","_3","forChild","path","component","imports","exports","subscription","activeUser$","subscribe","activeUser","ngOnDestroy","unsubscribe","ChatAppComponent_Template","CommonModule","FormsModule","AvatarModule","InputTextModule","ButtonModule","OverlayPanelModule","BadgeModule","UserCardComponent","RippleModule","ChatAppModule","declarations","BehaviorSubject","http","_activeUser","asObservable","get","toPromise","res","changeActiveChat","next","ɵɵinject","HttpClient","factory","ɵfac","lastMessage","changeView","UserCardComponent_Template","UserCardComponent_Template_div_keydown_enter_0_listener","UserCardComponent_Template_div_click_0_listener","ɵɵpureFunction2","lastSeen","EventEmitter","Component","ChangeDetectionStrategy","ViewEncapsulation","Input","Output","NgModule","Avatar_span_2_Template","ctx_r0","label","Avatar_ng_template_3_span_0_Template","ɵɵclassMap","icon","Avatar_ng_template_3_Template","_r4","Avatar_ng_template_5_img_0_Template","_r8","ɵɵgetCurrentView","Avatar_ng_template_5_img_0_Template_img_error_0_listener","ctx_r7","imageError","ɵɵattribute","ariaLabel","Avatar_ng_template_5_Template","Avatar","size","shape","style","styleClass","ariaLabelledBy","onImageError","containerClass","event","emit","Avatar_Factory","t","ɵcmp","ɵɵdefineComponent","type","hostAttrs","outputs","ngContentSelectors","Avatar_Template","ɵɵprojectionDef","ɵɵprojection","ɵɵtemplateRefExtractor","dependencies","NgClass","NgIf","NgStyle","styles","encapsulation","changeDetection","ngDevMode","ɵsetClassMetadata","args","selector","OnPush","None","host","class","AvatarModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector"],"sourceRoot":"webpack:///","x_google_ignoreList":[11]}