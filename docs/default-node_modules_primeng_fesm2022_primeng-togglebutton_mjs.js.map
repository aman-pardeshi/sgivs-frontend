{"version":3,"file":"default-node_modules_primeng_fesm2022_primeng-togglebutton_mjs.js","mappings":"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","sources":["./node_modules/primeng/fesm2022/primeng-togglebutton.mjs"],"sourcesContent":["import * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { forwardRef, EventEmitter, Component, ChangeDetectionStrategy, Input, Output, ContentChildren, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as i2 from 'primeng/ripple';\nimport { RippleModule } from 'primeng/ripple';\nimport { PrimeTemplate, SharedModule } from 'primeng/api';\n\nconst TOGGLEBUTTON_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => ToggleButton),\n    multi: true\n};\n/**\n * ToggleButton is used to select a boolean value using a button.\n * @group Components\n */\nclass ToggleButton {\n    cd;\n    /**\n     * Label for the on state.\n     * @group Props\n     */\n    onLabel;\n    /**\n     * Label for the off state.\n     * @group Props\n     */\n    offLabel;\n    /**\n     * Icon for the on state.\n     * @group Props\n     */\n    onIcon;\n    /**\n     * Icon for the off state.\n     * @group Props\n     */\n    offIcon;\n    /**\n     * Defines a string that labels the input for accessibility.\n     * @group Props\n     */\n    ariaLabel;\n    /**\n     * Establishes relationships between the component and label(s) where its value should be one or more element IDs.\n     * @group Props\n     */\n    ariaLabelledBy;\n    /**\n     * When present, it specifies that the element should be disabled.\n     * @group Props\n     */\n    disabled;\n    /**\n     * Inline style of the element.\n     * @group Props\n     */\n    style;\n    /**\n     * Style class of the element.\n     * @group Props\n     */\n    styleClass;\n    /**\n     * Identifier of the focus input to match a label defined for the component.\n     * @group Props\n     */\n    inputId;\n    /**\n     * Index of the element in tabbing order.\n     * @group Props\n     */\n    tabindex;\n    /**\n     * Position of the icon.\n     * @group Props\n     */\n    iconPos = 'left';\n    /**\n     * Callback to invoke on value change.\n     * @param {ToggleButtonChangeEvent} event - Custom change event.\n     * @group Emits\n     */\n    onChange = new EventEmitter();\n    templates;\n    iconTemplate;\n    checked = false;\n    onModelChange = () => { };\n    onModelTouched = () => { };\n    constructor(cd) {\n        this.cd = cd;\n    }\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch (item.getType()) {\n                case 'icon':\n                    this.iconTemplate = item.template;\n                    break;\n                default:\n                    this.iconTemplate = item.template;\n                    break;\n            }\n        });\n    }\n    toggle(event) {\n        if (!this.disabled) {\n            this.checked = !this.checked;\n            this.onModelChange(this.checked);\n            this.onModelTouched();\n            this.onChange.emit({\n                originalEvent: event,\n                checked: this.checked\n            });\n            this.cd.markForCheck();\n        }\n    }\n    onKeyDown(event) {\n        switch (event.code) {\n            case 'Enter':\n                this.toggle(event);\n                event.preventDefault();\n                break;\n            case 'Space':\n                this.toggle(event);\n                event.preventDefault();\n                break;\n        }\n    }\n    onBlur() {\n        this.onModelTouched();\n    }\n    writeValue(value) {\n        this.checked = value;\n        this.cd.markForCheck();\n    }\n    registerOnChange(fn) {\n        this.onModelChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onModelTouched = fn;\n    }\n    setDisabledState(val) {\n        this.disabled = val;\n        this.cd.markForCheck();\n    }\n    get hasOnLabel() {\n        return (this.onLabel && this.onLabel.length > 0);\n    }\n    get hasOffLabel() {\n        return (this.onLabel && this.onLabel.length > 0);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.5\", ngImport: i0, type: ToggleButton, deps: [{ token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"17.0.5\", type: ToggleButton, selector: \"p-toggleButton\", inputs: { onLabel: \"onLabel\", offLabel: \"offLabel\", onIcon: \"onIcon\", offIcon: \"offIcon\", ariaLabel: \"ariaLabel\", ariaLabelledBy: \"ariaLabelledBy\", disabled: \"disabled\", style: \"style\", styleClass: \"styleClass\", inputId: \"inputId\", tabindex: \"tabindex\", iconPos: \"iconPos\" }, outputs: { onChange: \"onChange\" }, host: { classAttribute: \"p-element\" }, providers: [TOGGLEBUTTON_VALUE_ACCESSOR], queries: [{ propertyName: \"templates\", predicate: PrimeTemplate }], ngImport: i0, template: `\n        <div\n            [ngClass]=\"{ 'p-button p-togglebutton p-component': true, 'p-button-icon-only': onIcon && offIcon && !hasOnLabel && !hasOffLabel, 'p-highlight': checked, 'p-disabled': disabled }\"\n            [ngStyle]=\"style\"\n            [class]=\"styleClass\"\n            (click)=\"toggle($event)\"\n            (keydown)=\"onKeyDown($event)\"\n            [attr.tabindex]=\"disabled ? null : '0'\"\n            role=\"switch\"\n            [attr.aria-checked]=\"checked\"\n            [attr.aria-labelledby]=\"ariaLabelledBy\"\n            [attr.aria-label]=\"ariaLabel\"\n            pRipple\n            [attr.data-pc-name]=\"'togglebutton'\"\n            [attr.data-pc-section]=\"'root'\"\n        >\n            @if(!iconTemplate) {\n            <span\n                *ngIf=\"onIcon || offIcon\"\n                [class]=\"checked ? this.onIcon : this.offIcon\"\n                [ngClass]=\"{ 'p-button-icon': true, 'p-button-icon-left': iconPos === 'left', 'p-button-icon-right': iconPos === 'right' }\"\n                [attr.data-pc-section]=\"'icon'\"\n            ></span>\n            } @else {\n            <ng-container *ngTemplateOutlet=\"iconTemplate; context: { $implicit: checked }\"></ng-container>\n            }\n            <span class=\"p-button-label\" *ngIf=\"onLabel || offLabel\" [attr.data-pc-section]=\"'label'\">{{ checked ? (hasOnLabel ? onLabel : '') : hasOffLabel ? offLabel : '' }}</span>\n        </div>\n    `, isInline: true, styles: [\"@layer primeng{.p-button{margin:0;display:inline-flex;cursor:pointer;-webkit-user-select:none;user-select:none;align-items:center;vertical-align:bottom;text-align:center;overflow:hidden;position:relative}.p-button-label{flex:1 1 auto}.p-button-icon-right{order:1}.p-button:disabled{cursor:default;pointer-events:none}.p-button-icon-only{justify-content:center}.p-button-icon-only:after{content:\\\"p\\\";visibility:hidden;clip:rect(0 0 0 0);width:0}.p-button-vertical{flex-direction:column}.p-button-icon-bottom{order:2}.p-buttonset .p-button{margin:0}.p-buttonset .p-button:not(:last-child){border-right:0 none}.p-buttonset .p-button:not(:first-of-type):not(:last-of-type){border-radius:0}.p-buttonset .p-button:first-of-type{border-top-right-radius:0;border-bottom-right-radius:0}.p-buttonset .p-button:last-of-type{border-top-left-radius:0;border-bottom-left-radius:0}.p-buttonset .p-button:focus{position:relative;z-index:1}p-button[iconpos=right] spinnericon{order:1}}\\n\"], dependencies: [{ kind: \"directive\", type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i1.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { kind: \"directive\", type: i2.Ripple, selector: \"[pRipple]\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.5\", ngImport: i0, type: ToggleButton, decorators: [{\n            type: Component,\n            args: [{ selector: 'p-toggleButton', template: `\n        <div\n            [ngClass]=\"{ 'p-button p-togglebutton p-component': true, 'p-button-icon-only': onIcon && offIcon && !hasOnLabel && !hasOffLabel, 'p-highlight': checked, 'p-disabled': disabled }\"\n            [ngStyle]=\"style\"\n            [class]=\"styleClass\"\n            (click)=\"toggle($event)\"\n            (keydown)=\"onKeyDown($event)\"\n            [attr.tabindex]=\"disabled ? null : '0'\"\n            role=\"switch\"\n            [attr.aria-checked]=\"checked\"\n            [attr.aria-labelledby]=\"ariaLabelledBy\"\n            [attr.aria-label]=\"ariaLabel\"\n            pRipple\n            [attr.data-pc-name]=\"'togglebutton'\"\n            [attr.data-pc-section]=\"'root'\"\n        >\n            @if(!iconTemplate) {\n            <span\n                *ngIf=\"onIcon || offIcon\"\n                [class]=\"checked ? this.onIcon : this.offIcon\"\n                [ngClass]=\"{ 'p-button-icon': true, 'p-button-icon-left': iconPos === 'left', 'p-button-icon-right': iconPos === 'right' }\"\n                [attr.data-pc-section]=\"'icon'\"\n            ></span>\n            } @else {\n            <ng-container *ngTemplateOutlet=\"iconTemplate; context: { $implicit: checked }\"></ng-container>\n            }\n            <span class=\"p-button-label\" *ngIf=\"onLabel || offLabel\" [attr.data-pc-section]=\"'label'\">{{ checked ? (hasOnLabel ? onLabel : '') : hasOffLabel ? offLabel : '' }}</span>\n        </div>\n    `, providers: [TOGGLEBUTTON_VALUE_ACCESSOR], changeDetection: ChangeDetectionStrategy.OnPush, host: {\n                        class: 'p-element'\n                    }, styles: [\"@layer primeng{.p-button{margin:0;display:inline-flex;cursor:pointer;-webkit-user-select:none;user-select:none;align-items:center;vertical-align:bottom;text-align:center;overflow:hidden;position:relative}.p-button-label{flex:1 1 auto}.p-button-icon-right{order:1}.p-button:disabled{cursor:default;pointer-events:none}.p-button-icon-only{justify-content:center}.p-button-icon-only:after{content:\\\"p\\\";visibility:hidden;clip:rect(0 0 0 0);width:0}.p-button-vertical{flex-direction:column}.p-button-icon-bottom{order:2}.p-buttonset .p-button{margin:0}.p-buttonset .p-button:not(:last-child){border-right:0 none}.p-buttonset .p-button:not(:first-of-type):not(:last-of-type){border-radius:0}.p-buttonset .p-button:first-of-type{border-top-right-radius:0;border-bottom-right-radius:0}.p-buttonset .p-button:last-of-type{border-top-left-radius:0;border-bottom-left-radius:0}.p-buttonset .p-button:focus{position:relative;z-index:1}p-button[iconpos=right] spinnericon{order:1}}\\n\"] }]\n        }], ctorParameters: () => [{ type: i0.ChangeDetectorRef }], propDecorators: { onLabel: [{\n                type: Input\n            }], offLabel: [{\n                type: Input\n            }], onIcon: [{\n                type: Input\n            }], offIcon: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input\n            }], ariaLabelledBy: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], style: [{\n                type: Input\n            }], styleClass: [{\n                type: Input\n            }], inputId: [{\n                type: Input\n            }], tabindex: [{\n                type: Input\n            }], iconPos: [{\n                type: Input\n            }], onChange: [{\n                type: Output\n            }], templates: [{\n                type: ContentChildren,\n                args: [PrimeTemplate]\n            }] } });\nclass ToggleButtonModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.5\", ngImport: i0, type: ToggleButtonModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.0.5\", ngImport: i0, type: ToggleButtonModule, declarations: [ToggleButton], imports: [CommonModule, RippleModule, SharedModule], exports: [ToggleButton, SharedModule] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.0.5\", ngImport: i0, type: ToggleButtonModule, imports: [CommonModule, RippleModule, SharedModule, SharedModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.5\", ngImport: i0, type: ToggleButtonModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, RippleModule, SharedModule],\n                    exports: [ToggleButton, SharedModule],\n                    declarations: [ToggleButton]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TOGGLEBUTTON_VALUE_ACCESSOR, ToggleButton, ToggleButtonModule };\n"],"names":["i1","CommonModule","i0","forwardRef","EventEmitter","Component","ChangeDetectionStrategy","Input","Output","ContentChildren","NgModule","NG_VALUE_ACCESSOR","i2","RippleModule","PrimeTemplate","SharedModule","_c0","a1","a2","ToggleButton_Conditional_1_span_0_Template","rf","ctx","ɵɵelement","ctx_r3","ɵɵnextContext","ɵɵclassMap","checked","onIcon","offIcon","ɵɵproperty","ɵɵpureFunction2","iconPos","ɵɵattribute","ToggleButton_Conditional_1_Template","ɵɵtemplate","ctx_r0","ToggleButton_Conditional_2_ng_container_0_Template","ɵɵelementContainer","_c1","a0","$implicit","ToggleButton_Conditional_2_Template","ctx_r1","iconTemplate","ɵɵpureFunction1","ToggleButton_span_3_Template","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ctx_r2","ɵɵadvance","ɵɵtextInterpolate","hasOnLabel","onLabel","hasOffLabel","offLabel","_c2","a3","TOGGLEBUTTON_VALUE_ACCESSOR","provide","useExisting","ToggleButton","multi","cd","ariaLabel","ariaLabelledBy","disabled","style","styleClass","inputId","tabindex","onChange","templates","onModelChange","onModelTouched","constructor","ngAfterContentInit","forEach","item","getType","template","toggle","event","emit","originalEvent","markForCheck","onKeyDown","code","preventDefault","onBlur","writeValue","value","registerOnChange","fn","registerOnTouched","setDisabledState","val","length","ɵfac","ToggleButton_Factory","t","ɵɵdirectiveInject","ChangeDetectorRef","ɵcmp","ɵɵdefineComponent","type","selectors","contentQueries","ToggleButton_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","hostAttrs","inputs","outputs","features","ɵɵProvidersFeature","decls","vars","consts","ToggleButton_Template","ɵɵlistener","ToggleButton_Template_div_click_0_listener","$event","ToggleButton_Template_div_keydown_0_listener","ɵɵpureFunction3","ɵɵconditional","dependencies","NgClass","NgIf","NgTemplateOutlet","NgStyle","Ripple","styles","changeDetection","ngDevMode","ɵsetClassMetadata","args","selector","providers","OnPush","host","class","ToggleButtonModule","ToggleButtonModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","exports","declarations"],"sourceRoot":"webpack:///","x_google_ignoreList":[0]}