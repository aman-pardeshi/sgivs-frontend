{"version":3,"file":"default-node_modules_angular_cdk_fesm2022_drag-drop_mjs.js","mappings":"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","sources":["./node_modules/rxjs/dist/esm/internal/ReplaySubject.js","./node_modules/rxjs/dist/esm/internal/observable/fromEvent.js","./node_modules/rxjs/dist/esm/internal/operators/audit.js","./node_modules/rxjs/dist/esm/internal/operators/auditTime.js","./node_modules/rxjs/dist/esm/internal/operators/debounceTime.js","./node_modules/rxjs/dist/esm/internal/operators/pairwise.js","./node_modules/rxjs/dist/esm/internal/operators/shareReplay.js","./node_modules/rxjs/dist/esm/internal/operators/skip.js","./node_modules/rxjs/dist/esm/internal/scheduler/AnimationFrameAction.js","./node_modules/rxjs/dist/esm/internal/scheduler/AnimationFrameScheduler.js","./node_modules/rxjs/dist/esm/internal/scheduler/AsapAction.js","./node_modules/rxjs/dist/esm/internal/scheduler/AsapScheduler.js","./node_modules/rxjs/dist/esm/internal/scheduler/animationFrame.js","./node_modules/rxjs/dist/esm/internal/scheduler/animationFrameProvider.js","./node_modules/rxjs/dist/esm/internal/scheduler/asap.js","./node_modules/rxjs/dist/esm/internal/scheduler/immediateProvider.js","./node_modules/rxjs/dist/esm/internal/util/Immediate.js","./node_modules/@angular/cdk/fesm2022/a11y.mjs","./node_modules/@angular/cdk/fesm2022/bidi.mjs","./node_modules/@angular/cdk/fesm2022/coercion.mjs","./node_modules/@angular/cdk/fesm2022/collections.mjs","./node_modules/@angular/cdk/fesm2022/drag-drop.mjs","./node_modules/@angular/cdk/fesm2022/keycodes.mjs","./node_modules/@angular/cdk/fesm2022/layout.mjs","./node_modules/@angular/cdk/fesm2022/observers.mjs","./node_modules/@angular/cdk/fesm2022/platform.mjs","./node_modules/@angular/cdk/fesm2022/scrolling.mjs"],"sourcesContent":["import { Subject } from './Subject';\nimport { dateTimestampProvider } from './scheduler/dateTimestampProvider';\nexport class ReplaySubject extends Subject {\n    constructor(_bufferSize = Infinity, _windowTime = Infinity, _timestampProvider = dateTimestampProvider) {\n        super();\n        this._bufferSize = _bufferSize;\n        this._windowTime = _windowTime;\n        this._timestampProvider = _timestampProvider;\n        this._buffer = [];\n        this._infiniteTimeWindow = true;\n        this._infiniteTimeWindow = _windowTime === Infinity;\n        this._bufferSize = Math.max(1, _bufferSize);\n        this._windowTime = Math.max(1, _windowTime);\n    }\n    next(value) {\n        const { isStopped, _buffer, _infiniteTimeWindow, _timestampProvider, _windowTime } = this;\n        if (!isStopped) {\n            _buffer.push(value);\n            !_infiniteTimeWindow && _buffer.push(_timestampProvider.now() + _windowTime);\n        }\n        this._trimBuffer();\n        super.next(value);\n    }\n    _subscribe(subscriber) {\n        this._throwIfClosed();\n        this._trimBuffer();\n        const subscription = this._innerSubscribe(subscriber);\n        const { _infiniteTimeWindow, _buffer } = this;\n        const copy = _buffer.slice();\n        for (let i = 0; i < copy.length && !subscriber.closed; i += _infiniteTimeWindow ? 1 : 2) {\n            subscriber.next(copy[i]);\n        }\n        this._checkFinalizedStatuses(subscriber);\n        return subscription;\n    }\n    _trimBuffer() {\n        const { _bufferSize, _timestampProvider, _buffer, _infiniteTimeWindow } = this;\n        const adjustedBufferSize = (_infiniteTimeWindow ? 1 : 2) * _bufferSize;\n        _bufferSize < Infinity && adjustedBufferSize < _buffer.length && _buffer.splice(0, _buffer.length - adjustedBufferSize);\n        if (!_infiniteTimeWindow) {\n            const now = _timestampProvider.now();\n            let last = 0;\n            for (let i = 1; i < _buffer.length && _buffer[i] <= now; i += 2) {\n                last = i;\n            }\n            last && _buffer.splice(0, last + 1);\n        }\n    }\n}\n","import { innerFrom } from '../observable/innerFrom';\nimport { Observable } from '../Observable';\nimport { mergeMap } from '../operators/mergeMap';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isFunction } from '../util/isFunction';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nconst nodeEventEmitterMethods = ['addListener', 'removeListener'];\nconst eventTargetMethods = ['addEventListener', 'removeEventListener'];\nconst jqueryMethods = ['on', 'off'];\nexport function fromEvent(target, eventName, options, resultSelector) {\n    if (isFunction(options)) {\n        resultSelector = options;\n        options = undefined;\n    }\n    if (resultSelector) {\n        return fromEvent(target, eventName, options).pipe(mapOneOrManyArgs(resultSelector));\n    }\n    const [add, remove] = isEventTarget(target)\n        ? eventTargetMethods.map((methodName) => (handler) => target[methodName](eventName, handler, options))\n        :\n            isNodeStyleEventEmitter(target)\n                ? nodeEventEmitterMethods.map(toCommonHandlerRegistry(target, eventName))\n                : isJQueryStyleEventEmitter(target)\n                    ? jqueryMethods.map(toCommonHandlerRegistry(target, eventName))\n                    : [];\n    if (!add) {\n        if (isArrayLike(target)) {\n            return mergeMap((subTarget) => fromEvent(subTarget, eventName, options))(innerFrom(target));\n        }\n    }\n    if (!add) {\n        throw new TypeError('Invalid event target');\n    }\n    return new Observable((subscriber) => {\n        const handler = (...args) => subscriber.next(1 < args.length ? args : args[0]);\n        add(handler);\n        return () => remove(handler);\n    });\n}\nfunction toCommonHandlerRegistry(target, eventName) {\n    return (methodName) => (handler) => target[methodName](eventName, handler);\n}\nfunction isNodeStyleEventEmitter(target) {\n    return isFunction(target.addListener) && isFunction(target.removeListener);\n}\nfunction isJQueryStyleEventEmitter(target) {\n    return isFunction(target.on) && isFunction(target.off);\n}\nfunction isEventTarget(target) {\n    return isFunction(target.addEventListener) && isFunction(target.removeEventListener);\n}\n","import { operate } from '../util/lift';\nimport { innerFrom } from '../observable/innerFrom';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function audit(durationSelector) {\n    return operate((source, subscriber) => {\n        let hasValue = false;\n        let lastValue = null;\n        let durationSubscriber = null;\n        let isComplete = false;\n        const endDuration = () => {\n            durationSubscriber === null || durationSubscriber === void 0 ? void 0 : durationSubscriber.unsubscribe();\n            durationSubscriber = null;\n            if (hasValue) {\n                hasValue = false;\n                const value = lastValue;\n                lastValue = null;\n                subscriber.next(value);\n            }\n            isComplete && subscriber.complete();\n        };\n        const cleanupDuration = () => {\n            durationSubscriber = null;\n            isComplete && subscriber.complete();\n        };\n        source.subscribe(createOperatorSubscriber(subscriber, (value) => {\n            hasValue = true;\n            lastValue = value;\n            if (!durationSubscriber) {\n                innerFrom(durationSelector(value)).subscribe((durationSubscriber = createOperatorSubscriber(subscriber, endDuration, cleanupDuration)));\n            }\n        }, () => {\n            isComplete = true;\n            (!hasValue || !durationSubscriber || durationSubscriber.closed) && subscriber.complete();\n        }));\n    });\n}\n","import { asyncScheduler } from '../scheduler/async';\nimport { audit } from './audit';\nimport { timer } from '../observable/timer';\nexport function auditTime(duration, scheduler = asyncScheduler) {\n    return audit(() => timer(duration, scheduler));\n}\n","import { asyncScheduler } from '../scheduler/async';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function debounceTime(dueTime, scheduler = asyncScheduler) {\n    return operate((source, subscriber) => {\n        let activeTask = null;\n        let lastValue = null;\n        let lastTime = null;\n        const emit = () => {\n            if (activeTask) {\n                activeTask.unsubscribe();\n                activeTask = null;\n                const value = lastValue;\n                lastValue = null;\n                subscriber.next(value);\n            }\n        };\n        function emitWhenIdle() {\n            const targetTime = lastTime + dueTime;\n            const now = scheduler.now();\n            if (now < targetTime) {\n                activeTask = this.schedule(undefined, targetTime - now);\n                subscriber.add(activeTask);\n                return;\n            }\n            emit();\n        }\n        source.subscribe(createOperatorSubscriber(subscriber, (value) => {\n            lastValue = value;\n            lastTime = scheduler.now();\n            if (!activeTask) {\n                activeTask = scheduler.schedule(emitWhenIdle, dueTime);\n                subscriber.add(activeTask);\n            }\n        }, () => {\n            emit();\n            subscriber.complete();\n        }, undefined, () => {\n            lastValue = activeTask = null;\n        }));\n    });\n}\n","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function pairwise() {\n    return operate((source, subscriber) => {\n        let prev;\n        let hasPrev = false;\n        source.subscribe(createOperatorSubscriber(subscriber, (value) => {\n            const p = prev;\n            prev = value;\n            hasPrev && subscriber.next([p, value]);\n            hasPrev = true;\n        }));\n    });\n}\n","import { ReplaySubject } from '../ReplaySubject';\nimport { share } from './share';\nexport function shareReplay(configOrBufferSize, windowTime, scheduler) {\n    let bufferSize;\n    let refCount = false;\n    if (configOrBufferSize && typeof configOrBufferSize === 'object') {\n        ({ bufferSize = Infinity, windowTime = Infinity, refCount = false, scheduler } = configOrBufferSize);\n    }\n    else {\n        bufferSize = (configOrBufferSize !== null && configOrBufferSize !== void 0 ? configOrBufferSize : Infinity);\n    }\n    return share({\n        connector: () => new ReplaySubject(bufferSize, windowTime, scheduler),\n        resetOnError: true,\n        resetOnComplete: false,\n        resetOnRefCountZero: refCount,\n    });\n}\n","import { filter } from './filter';\nexport function skip(count) {\n    return filter((_, index) => count <= index);\n}\n","import { AsyncAction } from './AsyncAction';\nimport { animationFrameProvider } from './animationFrameProvider';\nexport class AnimationFrameAction extends AsyncAction {\n    constructor(scheduler, work) {\n        super(scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n    }\n    requestAsyncId(scheduler, id, delay = 0) {\n        if (delay !== null && delay > 0) {\n            return super.requestAsyncId(scheduler, id, delay);\n        }\n        scheduler.actions.push(this);\n        return scheduler._scheduled || (scheduler._scheduled = animationFrameProvider.requestAnimationFrame(() => scheduler.flush(undefined)));\n    }\n    recycleAsyncId(scheduler, id, delay = 0) {\n        var _a;\n        if (delay != null ? delay > 0 : this.delay > 0) {\n            return super.recycleAsyncId(scheduler, id, delay);\n        }\n        const { actions } = scheduler;\n        if (id != null && ((_a = actions[actions.length - 1]) === null || _a === void 0 ? void 0 : _a.id) !== id) {\n            animationFrameProvider.cancelAnimationFrame(id);\n            scheduler._scheduled = undefined;\n        }\n        return undefined;\n    }\n}\n","import { AsyncScheduler } from './AsyncScheduler';\nexport class AnimationFrameScheduler extends AsyncScheduler {\n    flush(action) {\n        this._active = true;\n        const flushId = this._scheduled;\n        this._scheduled = undefined;\n        const { actions } = this;\n        let error;\n        action = action || actions.shift();\n        do {\n            if ((error = action.execute(action.state, action.delay))) {\n                break;\n            }\n        } while ((action = actions[0]) && action.id === flushId && actions.shift());\n        this._active = false;\n        if (error) {\n            while ((action = actions[0]) && action.id === flushId && actions.shift()) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { immediateProvider } from './immediateProvider';\nexport class AsapAction extends AsyncAction {\n    constructor(scheduler, work) {\n        super(scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n    }\n    requestAsyncId(scheduler, id, delay = 0) {\n        if (delay !== null && delay > 0) {\n            return super.requestAsyncId(scheduler, id, delay);\n        }\n        scheduler.actions.push(this);\n        return scheduler._scheduled || (scheduler._scheduled = immediateProvider.setImmediate(scheduler.flush.bind(scheduler, undefined)));\n    }\n    recycleAsyncId(scheduler, id, delay = 0) {\n        var _a;\n        if (delay != null ? delay > 0 : this.delay > 0) {\n            return super.recycleAsyncId(scheduler, id, delay);\n        }\n        const { actions } = scheduler;\n        if (id != null && ((_a = actions[actions.length - 1]) === null || _a === void 0 ? void 0 : _a.id) !== id) {\n            immediateProvider.clearImmediate(id);\n            if (scheduler._scheduled === id) {\n                scheduler._scheduled = undefined;\n            }\n        }\n        return undefined;\n    }\n}\n","import { AsyncScheduler } from './AsyncScheduler';\nexport class AsapScheduler extends AsyncScheduler {\n    flush(action) {\n        this._active = true;\n        const flushId = this._scheduled;\n        this._scheduled = undefined;\n        const { actions } = this;\n        let error;\n        action = action || actions.shift();\n        do {\n            if ((error = action.execute(action.state, action.delay))) {\n                break;\n            }\n        } while ((action = actions[0]) && action.id === flushId && actions.shift());\n        this._active = false;\n        if (error) {\n            while ((action = actions[0]) && action.id === flushId && actions.shift()) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    }\n}\n","import { AnimationFrameAction } from './AnimationFrameAction';\nimport { AnimationFrameScheduler } from './AnimationFrameScheduler';\nexport const animationFrameScheduler = new AnimationFrameScheduler(AnimationFrameAction);\nexport const animationFrame = animationFrameScheduler;\n","import { Subscription } from '../Subscription';\nexport const animationFrameProvider = {\n    schedule(callback) {\n        let request = requestAnimationFrame;\n        let cancel = cancelAnimationFrame;\n        const { delegate } = animationFrameProvider;\n        if (delegate) {\n            request = delegate.requestAnimationFrame;\n            cancel = delegate.cancelAnimationFrame;\n        }\n        const handle = request((timestamp) => {\n            cancel = undefined;\n            callback(timestamp);\n        });\n        return new Subscription(() => cancel === null || cancel === void 0 ? void 0 : cancel(handle));\n    },\n    requestAnimationFrame(...args) {\n        const { delegate } = animationFrameProvider;\n        return ((delegate === null || delegate === void 0 ? void 0 : delegate.requestAnimationFrame) || requestAnimationFrame)(...args);\n    },\n    cancelAnimationFrame(...args) {\n        const { delegate } = animationFrameProvider;\n        return ((delegate === null || delegate === void 0 ? void 0 : delegate.cancelAnimationFrame) || cancelAnimationFrame)(...args);\n    },\n    delegate: undefined,\n};\n","import { AsapAction } from './AsapAction';\nimport { AsapScheduler } from './AsapScheduler';\nexport const asapScheduler = new AsapScheduler(AsapAction);\nexport const asap = asapScheduler;\n","import { Immediate } from '../util/Immediate';\nconst { setImmediate, clearImmediate } = Immediate;\nexport const immediateProvider = {\n    setImmediate(...args) {\n        const { delegate } = immediateProvider;\n        return ((delegate === null || delegate === void 0 ? void 0 : delegate.setImmediate) || setImmediate)(...args);\n    },\n    clearImmediate(handle) {\n        const { delegate } = immediateProvider;\n        return ((delegate === null || delegate === void 0 ? void 0 : delegate.clearImmediate) || clearImmediate)(handle);\n    },\n    delegate: undefined,\n};\n","let nextHandle = 1;\nlet resolved;\nconst activeHandles = {};\nfunction findAndClearHandle(handle) {\n    if (handle in activeHandles) {\n        delete activeHandles[handle];\n        return true;\n    }\n    return false;\n}\nexport const Immediate = {\n    setImmediate(cb) {\n        const handle = nextHandle++;\n        activeHandles[handle] = true;\n        if (!resolved) {\n            resolved = Promise.resolve();\n        }\n        resolved.then(() => findAndClearHandle(handle) && cb());\n        return handle;\n    },\n    clearImmediate(handle) {\n        findAndClearHandle(handle);\n    },\n};\nexport const TestTools = {\n    pending() {\n        return Object.keys(activeHandles).length;\n    }\n};\n","import { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { inject, APP_ID, Injectable, Inject, QueryList, booleanAttribute, Directive, Input, InjectionToken, Optional, EventEmitter, Output, NgModule } from '@angular/core';\nimport * as i1 from '@angular/cdk/platform';\nimport { _getFocusedElementPierceShadowDom, normalizePassiveListenerOptions, _getEventTarget, _getShadowRoot } from '@angular/cdk/platform';\nimport { Subject, Subscription, BehaviorSubject, of } from 'rxjs';\nimport { hasModifierKey, A, Z, ZERO, NINE, PAGE_DOWN, PAGE_UP, END, HOME, LEFT_ARROW, RIGHT_ARROW, UP_ARROW, DOWN_ARROW, TAB, ALT, CONTROL, MAC_META, META, SHIFT } from '@angular/cdk/keycodes';\nimport { tap, debounceTime, filter, map, take, skip, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport * as i1$1 from '@angular/cdk/observers';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { coerceElement } from '@angular/cdk/coercion';\nimport { BreakpointObserver } from '@angular/cdk/layout';\n\n/** IDs are delimited by an empty space, as per the spec. */\nconst ID_DELIMITER = ' ';\n/**\n * Adds the given ID to the specified ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n */\nfunction addAriaReferencedId(el, attr, id) {\n    const ids = getAriaReferenceIds(el, attr);\n    if (ids.some(existingId => existingId.trim() == id.trim())) {\n        return;\n    }\n    ids.push(id.trim());\n    el.setAttribute(attr, ids.join(ID_DELIMITER));\n}\n/**\n * Removes the given ID from the specified ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n */\nfunction removeAriaReferencedId(el, attr, id) {\n    const ids = getAriaReferenceIds(el, attr);\n    const filteredIds = ids.filter(val => val != id.trim());\n    if (filteredIds.length) {\n        el.setAttribute(attr, filteredIds.join(ID_DELIMITER));\n    }\n    else {\n        el.removeAttribute(attr);\n    }\n}\n/**\n * Gets the list of IDs referenced by the given ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n */\nfunction getAriaReferenceIds(el, attr) {\n    // Get string array of all individual ids (whitespace delimited) in the attribute value\n    return (el.getAttribute(attr) || '').match(/\\S+/g) || [];\n}\n\n/**\n * ID used for the body container where all messages are appended.\n * @deprecated No longer being used. To be removed.\n * @breaking-change 14.0.0\n */\nconst MESSAGES_CONTAINER_ID = 'cdk-describedby-message-container';\n/**\n * ID prefix used for each created message element.\n * @deprecated To be turned into a private variable.\n * @breaking-change 14.0.0\n */\nconst CDK_DESCRIBEDBY_ID_PREFIX = 'cdk-describedby-message';\n/**\n * Attribute given to each host element that is described by a message element.\n * @deprecated To be turned into a private variable.\n * @breaking-change 14.0.0\n */\nconst CDK_DESCRIBEDBY_HOST_ATTRIBUTE = 'cdk-describedby-host';\n/** Global incremental identifier for each registered message element. */\nlet nextId = 0;\n/**\n * Utility that creates visually hidden elements with a message content. Useful for elements that\n * want to use aria-describedby to further describe themselves without adding additional visual\n * content.\n */\nclass AriaDescriber {\n    constructor(_document, \n    /**\n     * @deprecated To be turned into a required parameter.\n     * @breaking-change 14.0.0\n     */\n    _platform) {\n        this._platform = _platform;\n        /** Map of all registered message elements that have been placed into the document. */\n        this._messageRegistry = new Map();\n        /** Container for all registered messages. */\n        this._messagesContainer = null;\n        /** Unique ID for the service. */\n        this._id = `${nextId++}`;\n        this._document = _document;\n        this._id = inject(APP_ID) + '-' + nextId++;\n    }\n    describe(hostElement, message, role) {\n        if (!this._canBeDescribed(hostElement, message)) {\n            return;\n        }\n        const key = getKey(message, role);\n        if (typeof message !== 'string') {\n            // We need to ensure that the element has an ID.\n            setMessageId(message, this._id);\n            this._messageRegistry.set(key, { messageElement: message, referenceCount: 0 });\n        }\n        else if (!this._messageRegistry.has(key)) {\n            this._createMessageElement(message, role);\n        }\n        if (!this._isElementDescribedByMessage(hostElement, key)) {\n            this._addMessageReference(hostElement, key);\n        }\n    }\n    removeDescription(hostElement, message, role) {\n        if (!message || !this._isElementNode(hostElement)) {\n            return;\n        }\n        const key = getKey(message, role);\n        if (this._isElementDescribedByMessage(hostElement, key)) {\n            this._removeMessageReference(hostElement, key);\n        }\n        // If the message is a string, it means that it's one that we created for the\n        // consumer so we can remove it safely, otherwise we should leave it in place.\n        if (typeof message === 'string') {\n            const registeredMessage = this._messageRegistry.get(key);\n            if (registeredMessage && registeredMessage.referenceCount === 0) {\n                this._deleteMessageElement(key);\n            }\n        }\n        if (this._messagesContainer?.childNodes.length === 0) {\n            this._messagesContainer.remove();\n            this._messagesContainer = null;\n        }\n    }\n    /** Unregisters all created message elements and removes the message container. */\n    ngOnDestroy() {\n        const describedElements = this._document.querySelectorAll(`[${CDK_DESCRIBEDBY_HOST_ATTRIBUTE}=\"${this._id}\"]`);\n        for (let i = 0; i < describedElements.length; i++) {\n            this._removeCdkDescribedByReferenceIds(describedElements[i]);\n            describedElements[i].removeAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE);\n        }\n        this._messagesContainer?.remove();\n        this._messagesContainer = null;\n        this._messageRegistry.clear();\n    }\n    /**\n     * Creates a new element in the visually hidden message container element with the message\n     * as its content and adds it to the message registry.\n     */\n    _createMessageElement(message, role) {\n        const messageElement = this._document.createElement('div');\n        setMessageId(messageElement, this._id);\n        messageElement.textContent = message;\n        if (role) {\n            messageElement.setAttribute('role', role);\n        }\n        this._createMessagesContainer();\n        this._messagesContainer.appendChild(messageElement);\n        this._messageRegistry.set(getKey(message, role), { messageElement, referenceCount: 0 });\n    }\n    /** Deletes the message element from the global messages container. */\n    _deleteMessageElement(key) {\n        this._messageRegistry.get(key)?.messageElement?.remove();\n        this._messageRegistry.delete(key);\n    }\n    /** Creates the global container for all aria-describedby messages. */\n    _createMessagesContainer() {\n        if (this._messagesContainer) {\n            return;\n        }\n        const containerClassName = 'cdk-describedby-message-container';\n        const serverContainers = this._document.querySelectorAll(`.${containerClassName}[platform=\"server\"]`);\n        for (let i = 0; i < serverContainers.length; i++) {\n            // When going from the server to the client, we may end up in a situation where there's\n            // already a container on the page, but we don't have a reference to it. Clear the\n            // old container so we don't get duplicates. Doing this, instead of emptying the previous\n            // container, should be slightly faster.\n            serverContainers[i].remove();\n        }\n        const messagesContainer = this._document.createElement('div');\n        // We add `visibility: hidden` in order to prevent text in this container from\n        // being searchable by the browser's Ctrl + F functionality.\n        // Screen-readers will still read the description for elements with aria-describedby even\n        // when the description element is not visible.\n        messagesContainer.style.visibility = 'hidden';\n        // Even though we use `visibility: hidden`, we still apply `cdk-visually-hidden` so that\n        // the description element doesn't impact page layout.\n        messagesContainer.classList.add(containerClassName);\n        messagesContainer.classList.add('cdk-visually-hidden');\n        // @breaking-change 14.0.0 Remove null check for `_platform`.\n        if (this._platform && !this._platform.isBrowser) {\n            messagesContainer.setAttribute('platform', 'server');\n        }\n        this._document.body.appendChild(messagesContainer);\n        this._messagesContainer = messagesContainer;\n    }\n    /** Removes all cdk-describedby messages that are hosted through the element. */\n    _removeCdkDescribedByReferenceIds(element) {\n        // Remove all aria-describedby reference IDs that are prefixed by CDK_DESCRIBEDBY_ID_PREFIX\n        const originalReferenceIds = getAriaReferenceIds(element, 'aria-describedby').filter(id => id.indexOf(CDK_DESCRIBEDBY_ID_PREFIX) != 0);\n        element.setAttribute('aria-describedby', originalReferenceIds.join(' '));\n    }\n    /**\n     * Adds a message reference to the element using aria-describedby and increments the registered\n     * message's reference count.\n     */\n    _addMessageReference(element, key) {\n        const registeredMessage = this._messageRegistry.get(key);\n        // Add the aria-describedby reference and set the\n        // describedby_host attribute to mark the element.\n        addAriaReferencedId(element, 'aria-describedby', registeredMessage.messageElement.id);\n        element.setAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE, this._id);\n        registeredMessage.referenceCount++;\n    }\n    /**\n     * Removes a message reference from the element using aria-describedby\n     * and decrements the registered message's reference count.\n     */\n    _removeMessageReference(element, key) {\n        const registeredMessage = this._messageRegistry.get(key);\n        registeredMessage.referenceCount--;\n        removeAriaReferencedId(element, 'aria-describedby', registeredMessage.messageElement.id);\n        element.removeAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE);\n    }\n    /** Returns true if the element has been described by the provided message ID. */\n    _isElementDescribedByMessage(element, key) {\n        const referenceIds = getAriaReferenceIds(element, 'aria-describedby');\n        const registeredMessage = this._messageRegistry.get(key);\n        const messageId = registeredMessage && registeredMessage.messageElement.id;\n        return !!messageId && referenceIds.indexOf(messageId) != -1;\n    }\n    /** Determines whether a message can be described on a particular element. */\n    _canBeDescribed(element, message) {\n        if (!this._isElementNode(element)) {\n            return false;\n        }\n        if (message && typeof message === 'object') {\n            // We'd have to make some assumptions about the description element's text, if the consumer\n            // passed in an element. Assume that if an element is passed in, the consumer has verified\n            // that it can be used as a description.\n            return true;\n        }\n        const trimmedMessage = message == null ? '' : `${message}`.trim();\n        const ariaLabel = element.getAttribute('aria-label');\n        // We shouldn't set descriptions if they're exactly the same as the `aria-label` of the\n        // element, because screen readers will end up reading out the same text twice in a row.\n        return trimmedMessage ? !ariaLabel || ariaLabel.trim() !== trimmedMessage : false;\n    }\n    /** Checks whether a node is an Element node. */\n    _isElementNode(element) {\n        return element.nodeType === this._document.ELEMENT_NODE;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: AriaDescriber, deps: [{ token: DOCUMENT }, { token: i1.Platform }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: AriaDescriber, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: AriaDescriber, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i1.Platform }] });\n/** Gets a key that can be used to look messages up in the registry. */\nfunction getKey(message, role) {\n    return typeof message === 'string' ? `${role || ''}/${message}` : message;\n}\n/** Assigns a unique ID to an element, if it doesn't have one already. */\nfunction setMessageId(element, serviceId) {\n    if (!element.id) {\n        element.id = `${CDK_DESCRIBEDBY_ID_PREFIX}-${serviceId}-${nextId++}`;\n    }\n}\n\n/**\n * This class manages keyboard events for selectable lists. If you pass it a query list\n * of items, it will set the active item correctly when arrow events occur.\n */\nclass ListKeyManager {\n    constructor(_items) {\n        this._items = _items;\n        this._activeItemIndex = -1;\n        this._activeItem = null;\n        this._wrap = false;\n        this._letterKeyStream = new Subject();\n        this._typeaheadSubscription = Subscription.EMPTY;\n        this._vertical = true;\n        this._allowedModifierKeys = [];\n        this._homeAndEnd = false;\n        this._pageUpAndDown = { enabled: false, delta: 10 };\n        /**\n         * Predicate function that can be used to check whether an item should be skipped\n         * by the key manager. By default, disabled items are skipped.\n         */\n        this._skipPredicateFn = (item) => item.disabled;\n        // Buffer for the letters that the user has pressed when the typeahead option is turned on.\n        this._pressedLetters = [];\n        /**\n         * Stream that emits any time the TAB key is pressed, so components can react\n         * when focus is shifted off of the list.\n         */\n        this.tabOut = new Subject();\n        /** Stream that emits whenever the active item of the list manager changes. */\n        this.change = new Subject();\n        // We allow for the items to be an array because, in some cases, the consumer may\n        // not have access to a QueryList of the items they want to manage (e.g. when the\n        // items aren't being collected via `ViewChildren` or `ContentChildren`).\n        if (_items instanceof QueryList) {\n            this._itemChangesSubscription = _items.changes.subscribe((newItems) => {\n                if (this._activeItem) {\n                    const itemArray = newItems.toArray();\n                    const newIndex = itemArray.indexOf(this._activeItem);\n                    if (newIndex > -1 && newIndex !== this._activeItemIndex) {\n                        this._activeItemIndex = newIndex;\n                    }\n                }\n            });\n        }\n    }\n    /**\n     * Sets the predicate function that determines which items should be skipped by the\n     * list key manager.\n     * @param predicate Function that determines whether the given item should be skipped.\n     */\n    skipPredicate(predicate) {\n        this._skipPredicateFn = predicate;\n        return this;\n    }\n    /**\n     * Configures wrapping mode, which determines whether the active item will wrap to\n     * the other end of list when there are no more items in the given direction.\n     * @param shouldWrap Whether the list should wrap when reaching the end.\n     */\n    withWrap(shouldWrap = true) {\n        this._wrap = shouldWrap;\n        return this;\n    }\n    /**\n     * Configures whether the key manager should be able to move the selection vertically.\n     * @param enabled Whether vertical selection should be enabled.\n     */\n    withVerticalOrientation(enabled = true) {\n        this._vertical = enabled;\n        return this;\n    }\n    /**\n     * Configures the key manager to move the selection horizontally.\n     * Passing in `null` will disable horizontal movement.\n     * @param direction Direction in which the selection can be moved.\n     */\n    withHorizontalOrientation(direction) {\n        this._horizontal = direction;\n        return this;\n    }\n    /**\n     * Modifier keys which are allowed to be held down and whose default actions will be prevented\n     * as the user is pressing the arrow keys. Defaults to not allowing any modifier keys.\n     */\n    withAllowedModifierKeys(keys) {\n        this._allowedModifierKeys = keys;\n        return this;\n    }\n    /**\n     * Turns on typeahead mode which allows users to set the active item by typing.\n     * @param debounceInterval Time to wait after the last keystroke before setting the active item.\n     */\n    withTypeAhead(debounceInterval = 200) {\n        if ((typeof ngDevMode === 'undefined' || ngDevMode) &&\n            this._items.length &&\n            this._items.some(item => typeof item.getLabel !== 'function')) {\n            throw Error('ListKeyManager items in typeahead mode must implement the `getLabel` method.');\n        }\n        this._typeaheadSubscription.unsubscribe();\n        // Debounce the presses of non-navigational keys, collect the ones that correspond to letters\n        // and convert those letters back into a string. Afterwards find the first item that starts\n        // with that string and select it.\n        this._typeaheadSubscription = this._letterKeyStream\n            .pipe(tap(letter => this._pressedLetters.push(letter)), debounceTime(debounceInterval), filter(() => this._pressedLetters.length > 0), map(() => this._pressedLetters.join('')))\n            .subscribe(inputString => {\n            const items = this._getItemsArray();\n            // Start at 1 because we want to start searching at the item immediately\n            // following the current active item.\n            for (let i = 1; i < items.length + 1; i++) {\n                const index = (this._activeItemIndex + i) % items.length;\n                const item = items[index];\n                if (!this._skipPredicateFn(item) &&\n                    item.getLabel().toUpperCase().trim().indexOf(inputString) === 0) {\n                    this.setActiveItem(index);\n                    break;\n                }\n            }\n            this._pressedLetters = [];\n        });\n        return this;\n    }\n    /** Cancels the current typeahead sequence. */\n    cancelTypeahead() {\n        this._pressedLetters = [];\n        return this;\n    }\n    /**\n     * Configures the key manager to activate the first and last items\n     * respectively when the Home or End key is pressed.\n     * @param enabled Whether pressing the Home or End key activates the first/last item.\n     */\n    withHomeAndEnd(enabled = true) {\n        this._homeAndEnd = enabled;\n        return this;\n    }\n    /**\n     * Configures the key manager to activate every 10th, configured or first/last element in up/down direction\n     * respectively when the Page-Up or Page-Down key is pressed.\n     * @param enabled Whether pressing the Page-Up or Page-Down key activates the first/last item.\n     * @param delta Whether pressing the Home or End key activates the first/last item.\n     */\n    withPageUpDown(enabled = true, delta = 10) {\n        this._pageUpAndDown = { enabled, delta };\n        return this;\n    }\n    setActiveItem(item) {\n        const previousActiveItem = this._activeItem;\n        this.updateActiveItem(item);\n        if (this._activeItem !== previousActiveItem) {\n            this.change.next(this._activeItemIndex);\n        }\n    }\n    /**\n     * Sets the active item depending on the key event passed in.\n     * @param event Keyboard event to be used for determining which element should be active.\n     */\n    onKeydown(event) {\n        const keyCode = event.keyCode;\n        const modifiers = ['altKey', 'ctrlKey', 'metaKey', 'shiftKey'];\n        const isModifierAllowed = modifiers.every(modifier => {\n            return !event[modifier] || this._allowedModifierKeys.indexOf(modifier) > -1;\n        });\n        switch (keyCode) {\n            case TAB:\n                this.tabOut.next();\n                return;\n            case DOWN_ARROW:\n                if (this._vertical && isModifierAllowed) {\n                    this.setNextItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case UP_ARROW:\n                if (this._vertical && isModifierAllowed) {\n                    this.setPreviousItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case RIGHT_ARROW:\n                if (this._horizontal && isModifierAllowed) {\n                    this._horizontal === 'rtl' ? this.setPreviousItemActive() : this.setNextItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case LEFT_ARROW:\n                if (this._horizontal && isModifierAllowed) {\n                    this._horizontal === 'rtl' ? this.setNextItemActive() : this.setPreviousItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case HOME:\n                if (this._homeAndEnd && isModifierAllowed) {\n                    this.setFirstItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case END:\n                if (this._homeAndEnd && isModifierAllowed) {\n                    this.setLastItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case PAGE_UP:\n                if (this._pageUpAndDown.enabled && isModifierAllowed) {\n                    const targetIndex = this._activeItemIndex - this._pageUpAndDown.delta;\n                    this._setActiveItemByIndex(targetIndex > 0 ? targetIndex : 0, 1);\n                    break;\n                }\n                else {\n                    return;\n                }\n            case PAGE_DOWN:\n                if (this._pageUpAndDown.enabled && isModifierAllowed) {\n                    const targetIndex = this._activeItemIndex + this._pageUpAndDown.delta;\n                    const itemsLength = this._getItemsArray().length;\n                    this._setActiveItemByIndex(targetIndex < itemsLength ? targetIndex : itemsLength - 1, -1);\n                    break;\n                }\n                else {\n                    return;\n                }\n            default:\n                if (isModifierAllowed || hasModifierKey(event, 'shiftKey')) {\n                    // Attempt to use the `event.key` which also maps it to the user's keyboard language,\n                    // otherwise fall back to resolving alphanumeric characters via the keyCode.\n                    if (event.key && event.key.length === 1) {\n                        this._letterKeyStream.next(event.key.toLocaleUpperCase());\n                    }\n                    else if ((keyCode >= A && keyCode <= Z) || (keyCode >= ZERO && keyCode <= NINE)) {\n                        this._letterKeyStream.next(String.fromCharCode(keyCode));\n                    }\n                }\n                // Note that we return here, in order to avoid preventing\n                // the default action of non-navigational keys.\n                return;\n        }\n        this._pressedLetters = [];\n        event.preventDefault();\n    }\n    /** Index of the currently active item. */\n    get activeItemIndex() {\n        return this._activeItemIndex;\n    }\n    /** The active item. */\n    get activeItem() {\n        return this._activeItem;\n    }\n    /** Gets whether the user is currently typing into the manager using the typeahead feature. */\n    isTyping() {\n        return this._pressedLetters.length > 0;\n    }\n    /** Sets the active item to the first enabled item in the list. */\n    setFirstItemActive() {\n        this._setActiveItemByIndex(0, 1);\n    }\n    /** Sets the active item to the last enabled item in the list. */\n    setLastItemActive() {\n        this._setActiveItemByIndex(this._items.length - 1, -1);\n    }\n    /** Sets the active item to the next enabled item in the list. */\n    setNextItemActive() {\n        this._activeItemIndex < 0 ? this.setFirstItemActive() : this._setActiveItemByDelta(1);\n    }\n    /** Sets the active item to a previous enabled item in the list. */\n    setPreviousItemActive() {\n        this._activeItemIndex < 0 && this._wrap\n            ? this.setLastItemActive()\n            : this._setActiveItemByDelta(-1);\n    }\n    updateActiveItem(item) {\n        const itemArray = this._getItemsArray();\n        const index = typeof item === 'number' ? item : itemArray.indexOf(item);\n        const activeItem = itemArray[index];\n        // Explicitly check for `null` and `undefined` because other falsy values are valid.\n        this._activeItem = activeItem == null ? null : activeItem;\n        this._activeItemIndex = index;\n    }\n    /** Cleans up the key manager. */\n    destroy() {\n        this._typeaheadSubscription.unsubscribe();\n        this._itemChangesSubscription?.unsubscribe();\n        this._letterKeyStream.complete();\n        this.tabOut.complete();\n        this.change.complete();\n        this._pressedLetters = [];\n    }\n    /**\n     * This method sets the active item, given a list of items and the delta between the\n     * currently active item and the new active item. It will calculate differently\n     * depending on whether wrap mode is turned on.\n     */\n    _setActiveItemByDelta(delta) {\n        this._wrap ? this._setActiveInWrapMode(delta) : this._setActiveInDefaultMode(delta);\n    }\n    /**\n     * Sets the active item properly given \"wrap\" mode. In other words, it will continue to move\n     * down the list until it finds an item that is not disabled, and it will wrap if it\n     * encounters either end of the list.\n     */\n    _setActiveInWrapMode(delta) {\n        const items = this._getItemsArray();\n        for (let i = 1; i <= items.length; i++) {\n            const index = (this._activeItemIndex + delta * i + items.length) % items.length;\n            const item = items[index];\n            if (!this._skipPredicateFn(item)) {\n                this.setActiveItem(index);\n                return;\n            }\n        }\n    }\n    /**\n     * Sets the active item properly given the default mode. In other words, it will\n     * continue to move down the list until it finds an item that is not disabled. If\n     * it encounters either end of the list, it will stop and not wrap.\n     */\n    _setActiveInDefaultMode(delta) {\n        this._setActiveItemByIndex(this._activeItemIndex + delta, delta);\n    }\n    /**\n     * Sets the active item to the first enabled item starting at the index specified. If the\n     * item is disabled, it will move in the fallbackDelta direction until it either\n     * finds an enabled item or encounters the end of the list.\n     */\n    _setActiveItemByIndex(index, fallbackDelta) {\n        const items = this._getItemsArray();\n        if (!items[index]) {\n            return;\n        }\n        while (this._skipPredicateFn(items[index])) {\n            index += fallbackDelta;\n            if (!items[index]) {\n                return;\n            }\n        }\n        this.setActiveItem(index);\n    }\n    /** Returns the items as an array. */\n    _getItemsArray() {\n        return this._items instanceof QueryList ? this._items.toArray() : this._items;\n    }\n}\n\nclass ActiveDescendantKeyManager extends ListKeyManager {\n    setActiveItem(index) {\n        if (this.activeItem) {\n            this.activeItem.setInactiveStyles();\n        }\n        super.setActiveItem(index);\n        if (this.activeItem) {\n            this.activeItem.setActiveStyles();\n        }\n    }\n}\n\nclass FocusKeyManager extends ListKeyManager {\n    constructor() {\n        super(...arguments);\n        this._origin = 'program';\n    }\n    /**\n     * Sets the focus origin that will be passed in to the items for any subsequent `focus` calls.\n     * @param origin Focus origin to be used when focusing items.\n     */\n    setFocusOrigin(origin) {\n        this._origin = origin;\n        return this;\n    }\n    setActiveItem(item) {\n        super.setActiveItem(item);\n        if (this.activeItem) {\n            this.activeItem.focus(this._origin);\n        }\n    }\n}\n\n/**\n * Configuration for the isFocusable method.\n */\nclass IsFocusableConfig {\n    constructor() {\n        /**\n         * Whether to count an element as focusable even if it is not currently visible.\n         */\n        this.ignoreVisibility = false;\n    }\n}\n// The InteractivityChecker leans heavily on the ally.js accessibility utilities.\n// Methods like `isTabbable` are only covering specific edge-cases for the browsers which are\n// supported.\n/**\n * Utility for checking the interactivity of an element, such as whether it is focusable or\n * tabbable.\n */\nclass InteractivityChecker {\n    constructor(_platform) {\n        this._platform = _platform;\n    }\n    /**\n     * Gets whether an element is disabled.\n     *\n     * @param element Element to be checked.\n     * @returns Whether the element is disabled.\n     */\n    isDisabled(element) {\n        // This does not capture some cases, such as a non-form control with a disabled attribute or\n        // a form control inside of a disabled form, but should capture the most common cases.\n        return element.hasAttribute('disabled');\n    }\n    /**\n     * Gets whether an element is visible for the purposes of interactivity.\n     *\n     * This will capture states like `display: none` and `visibility: hidden`, but not things like\n     * being clipped by an `overflow: hidden` parent or being outside the viewport.\n     *\n     * @returns Whether the element is visible.\n     */\n    isVisible(element) {\n        return hasGeometry(element) && getComputedStyle(element).visibility === 'visible';\n    }\n    /**\n     * Gets whether an element can be reached via Tab key.\n     * Assumes that the element has already been checked with isFocusable.\n     *\n     * @param element Element to be checked.\n     * @returns Whether the element is tabbable.\n     */\n    isTabbable(element) {\n        // Nothing is tabbable on the server 😎\n        if (!this._platform.isBrowser) {\n            return false;\n        }\n        const frameElement = getFrameElement(getWindow(element));\n        if (frameElement) {\n            // Frame elements inherit their tabindex onto all child elements.\n            if (getTabIndexValue(frameElement) === -1) {\n                return false;\n            }\n            // Browsers disable tabbing to an element inside of an invisible frame.\n            if (!this.isVisible(frameElement)) {\n                return false;\n            }\n        }\n        let nodeName = element.nodeName.toLowerCase();\n        let tabIndexValue = getTabIndexValue(element);\n        if (element.hasAttribute('contenteditable')) {\n            return tabIndexValue !== -1;\n        }\n        if (nodeName === 'iframe' || nodeName === 'object') {\n            // The frame or object's content may be tabbable depending on the content, but it's\n            // not possibly to reliably detect the content of the frames. We always consider such\n            // elements as non-tabbable.\n            return false;\n        }\n        // In iOS, the browser only considers some specific elements as tabbable.\n        if (this._platform.WEBKIT && this._platform.IOS && !isPotentiallyTabbableIOS(element)) {\n            return false;\n        }\n        if (nodeName === 'audio') {\n            // Audio elements without controls enabled are never tabbable, regardless\n            // of the tabindex attribute explicitly being set.\n            if (!element.hasAttribute('controls')) {\n                return false;\n            }\n            // Audio elements with controls are by default tabbable unless the\n            // tabindex attribute is set to `-1` explicitly.\n            return tabIndexValue !== -1;\n        }\n        if (nodeName === 'video') {\n            // For all video elements, if the tabindex attribute is set to `-1`, the video\n            // is not tabbable. Note: We cannot rely on the default `HTMLElement.tabIndex`\n            // property as that one is set to `-1` in Chrome, Edge and Safari v13.1. The\n            // tabindex attribute is the source of truth here.\n            if (tabIndexValue === -1) {\n                return false;\n            }\n            // If the tabindex is explicitly set, and not `-1` (as per check before), the\n            // video element is always tabbable (regardless of whether it has controls or not).\n            if (tabIndexValue !== null) {\n                return true;\n            }\n            // Otherwise (when no explicit tabindex is set), a video is only tabbable if it\n            // has controls enabled. Firefox is special as videos are always tabbable regardless\n            // of whether there are controls or not.\n            return this._platform.FIREFOX || element.hasAttribute('controls');\n        }\n        return element.tabIndex >= 0;\n    }\n    /**\n     * Gets whether an element can be focused by the user.\n     *\n     * @param element Element to be checked.\n     * @param config The config object with options to customize this method's behavior\n     * @returns Whether the element is focusable.\n     */\n    isFocusable(element, config) {\n        // Perform checks in order of left to most expensive.\n        // Again, naive approach that does not capture many edge cases and browser quirks.\n        return (isPotentiallyFocusable(element) &&\n            !this.isDisabled(element) &&\n            (config?.ignoreVisibility || this.isVisible(element)));\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: InteractivityChecker, deps: [{ token: i1.Platform }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: InteractivityChecker, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: InteractivityChecker, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: i1.Platform }] });\n/**\n * Returns the frame element from a window object. Since browsers like MS Edge throw errors if\n * the frameElement property is being accessed from a different host address, this property\n * should be accessed carefully.\n */\nfunction getFrameElement(window) {\n    try {\n        return window.frameElement;\n    }\n    catch {\n        return null;\n    }\n}\n/** Checks whether the specified element has any geometry / rectangles. */\nfunction hasGeometry(element) {\n    // Use logic from jQuery to check for an invisible element.\n    // See https://github.com/jquery/jquery/blob/master/src/css/hiddenVisibleSelectors.js#L12\n    return !!(element.offsetWidth ||\n        element.offsetHeight ||\n        (typeof element.getClientRects === 'function' && element.getClientRects().length));\n}\n/** Gets whether an element's  */\nfunction isNativeFormElement(element) {\n    let nodeName = element.nodeName.toLowerCase();\n    return (nodeName === 'input' ||\n        nodeName === 'select' ||\n        nodeName === 'button' ||\n        nodeName === 'textarea');\n}\n/** Gets whether an element is an `<input type=\"hidden\">`. */\nfunction isHiddenInput(element) {\n    return isInputElement(element) && element.type == 'hidden';\n}\n/** Gets whether an element is an anchor that has an href attribute. */\nfunction isAnchorWithHref(element) {\n    return isAnchorElement(element) && element.hasAttribute('href');\n}\n/** Gets whether an element is an input element. */\nfunction isInputElement(element) {\n    return element.nodeName.toLowerCase() == 'input';\n}\n/** Gets whether an element is an anchor element. */\nfunction isAnchorElement(element) {\n    return element.nodeName.toLowerCase() == 'a';\n}\n/** Gets whether an element has a valid tabindex. */\nfunction hasValidTabIndex(element) {\n    if (!element.hasAttribute('tabindex') || element.tabIndex === undefined) {\n        return false;\n    }\n    let tabIndex = element.getAttribute('tabindex');\n    return !!(tabIndex && !isNaN(parseInt(tabIndex, 10)));\n}\n/**\n * Returns the parsed tabindex from the element attributes instead of returning the\n * evaluated tabindex from the browsers defaults.\n */\nfunction getTabIndexValue(element) {\n    if (!hasValidTabIndex(element)) {\n        return null;\n    }\n    // See browser issue in Gecko https://bugzilla.mozilla.org/show_bug.cgi?id=1128054\n    const tabIndex = parseInt(element.getAttribute('tabindex') || '', 10);\n    return isNaN(tabIndex) ? -1 : tabIndex;\n}\n/** Checks whether the specified element is potentially tabbable on iOS */\nfunction isPotentiallyTabbableIOS(element) {\n    let nodeName = element.nodeName.toLowerCase();\n    let inputType = nodeName === 'input' && element.type;\n    return (inputType === 'text' ||\n        inputType === 'password' ||\n        nodeName === 'select' ||\n        nodeName === 'textarea');\n}\n/**\n * Gets whether an element is potentially focusable without taking current visible/disabled state\n * into account.\n */\nfunction isPotentiallyFocusable(element) {\n    // Inputs are potentially focusable *unless* they're type=\"hidden\".\n    if (isHiddenInput(element)) {\n        return false;\n    }\n    return (isNativeFormElement(element) ||\n        isAnchorWithHref(element) ||\n        element.hasAttribute('contenteditable') ||\n        hasValidTabIndex(element));\n}\n/** Gets the parent window of a DOM node with regards of being inside of an iframe. */\nfunction getWindow(node) {\n    // ownerDocument is null if `node` itself *is* a document.\n    return (node.ownerDocument && node.ownerDocument.defaultView) || window;\n}\n\n/**\n * Class that allows for trapping focus within a DOM element.\n *\n * This class currently uses a relatively simple approach to focus trapping.\n * It assumes that the tab order is the same as DOM order, which is not necessarily true.\n * Things like `tabIndex > 0`, flex `order`, and shadow roots can cause the two to be misaligned.\n *\n * @deprecated Use `ConfigurableFocusTrap` instead.\n * @breaking-change 11.0.0\n */\nclass FocusTrap {\n    /** Whether the focus trap is active. */\n    get enabled() {\n        return this._enabled;\n    }\n    set enabled(value) {\n        this._enabled = value;\n        if (this._startAnchor && this._endAnchor) {\n            this._toggleAnchorTabIndex(value, this._startAnchor);\n            this._toggleAnchorTabIndex(value, this._endAnchor);\n        }\n    }\n    constructor(_element, _checker, _ngZone, _document, deferAnchors = false) {\n        this._element = _element;\n        this._checker = _checker;\n        this._ngZone = _ngZone;\n        this._document = _document;\n        this._hasAttached = false;\n        // Event listeners for the anchors. Need to be regular functions so that we can unbind them later.\n        this.startAnchorListener = () => this.focusLastTabbableElement();\n        this.endAnchorListener = () => this.focusFirstTabbableElement();\n        this._enabled = true;\n        if (!deferAnchors) {\n            this.attachAnchors();\n        }\n    }\n    /** Destroys the focus trap by cleaning up the anchors. */\n    destroy() {\n        const startAnchor = this._startAnchor;\n        const endAnchor = this._endAnchor;\n        if (startAnchor) {\n            startAnchor.removeEventListener('focus', this.startAnchorListener);\n            startAnchor.remove();\n        }\n        if (endAnchor) {\n            endAnchor.removeEventListener('focus', this.endAnchorListener);\n            endAnchor.remove();\n        }\n        this._startAnchor = this._endAnchor = null;\n        this._hasAttached = false;\n    }\n    /**\n     * Inserts the anchors into the DOM. This is usually done automatically\n     * in the constructor, but can be deferred for cases like directives with `*ngIf`.\n     * @returns Whether the focus trap managed to attach successfully. This may not be the case\n     * if the target element isn't currently in the DOM.\n     */\n    attachAnchors() {\n        // If we're not on the browser, there can be no focus to trap.\n        if (this._hasAttached) {\n            return true;\n        }\n        this._ngZone.runOutsideAngular(() => {\n            if (!this._startAnchor) {\n                this._startAnchor = this._createAnchor();\n                this._startAnchor.addEventListener('focus', this.startAnchorListener);\n            }\n            if (!this._endAnchor) {\n                this._endAnchor = this._createAnchor();\n                this._endAnchor.addEventListener('focus', this.endAnchorListener);\n            }\n        });\n        if (this._element.parentNode) {\n            this._element.parentNode.insertBefore(this._startAnchor, this._element);\n            this._element.parentNode.insertBefore(this._endAnchor, this._element.nextSibling);\n            this._hasAttached = true;\n        }\n        return this._hasAttached;\n    }\n    /**\n     * Waits for the zone to stabilize, then focuses the first tabbable element.\n     * @returns Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfully.\n     */\n    focusInitialElementWhenReady(options) {\n        return new Promise(resolve => {\n            this._executeOnStable(() => resolve(this.focusInitialElement(options)));\n        });\n    }\n    /**\n     * Waits for the zone to stabilize, then focuses\n     * the first tabbable element within the focus trap region.\n     * @returns Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfully.\n     */\n    focusFirstTabbableElementWhenReady(options) {\n        return new Promise(resolve => {\n            this._executeOnStable(() => resolve(this.focusFirstTabbableElement(options)));\n        });\n    }\n    /**\n     * Waits for the zone to stabilize, then focuses\n     * the last tabbable element within the focus trap region.\n     * @returns Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfully.\n     */\n    focusLastTabbableElementWhenReady(options) {\n        return new Promise(resolve => {\n            this._executeOnStable(() => resolve(this.focusLastTabbableElement(options)));\n        });\n    }\n    /**\n     * Get the specified boundary element of the trapped region.\n     * @param bound The boundary to get (start or end of trapped region).\n     * @returns The boundary element.\n     */\n    _getRegionBoundary(bound) {\n        // Contains the deprecated version of selector, for temporary backwards comparability.\n        const markers = this._element.querySelectorAll(`[cdk-focus-region-${bound}], ` + `[cdkFocusRegion${bound}], ` + `[cdk-focus-${bound}]`);\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            for (let i = 0; i < markers.length; i++) {\n                // @breaking-change 8.0.0\n                if (markers[i].hasAttribute(`cdk-focus-${bound}`)) {\n                    console.warn(`Found use of deprecated attribute 'cdk-focus-${bound}', ` +\n                        `use 'cdkFocusRegion${bound}' instead. The deprecated ` +\n                        `attribute will be removed in 8.0.0.`, markers[i]);\n                }\n                else if (markers[i].hasAttribute(`cdk-focus-region-${bound}`)) {\n                    console.warn(`Found use of deprecated attribute 'cdk-focus-region-${bound}', ` +\n                        `use 'cdkFocusRegion${bound}' instead. The deprecated attribute ` +\n                        `will be removed in 8.0.0.`, markers[i]);\n                }\n            }\n        }\n        if (bound == 'start') {\n            return markers.length ? markers[0] : this._getFirstTabbableElement(this._element);\n        }\n        return markers.length\n            ? markers[markers.length - 1]\n            : this._getLastTabbableElement(this._element);\n    }\n    /**\n     * Focuses the element that should be focused when the focus trap is initialized.\n     * @returns Whether focus was moved successfully.\n     */\n    focusInitialElement(options) {\n        // Contains the deprecated version of selector, for temporary backwards comparability.\n        const redirectToElement = this._element.querySelector(`[cdk-focus-initial], ` + `[cdkFocusInitial]`);\n        if (redirectToElement) {\n            // @breaking-change 8.0.0\n            if ((typeof ngDevMode === 'undefined' || ngDevMode) &&\n                redirectToElement.hasAttribute(`cdk-focus-initial`)) {\n                console.warn(`Found use of deprecated attribute 'cdk-focus-initial', ` +\n                    `use 'cdkFocusInitial' instead. The deprecated attribute ` +\n                    `will be removed in 8.0.0`, redirectToElement);\n            }\n            // Warn the consumer if the element they've pointed to\n            // isn't focusable, when not in production mode.\n            if ((typeof ngDevMode === 'undefined' || ngDevMode) &&\n                !this._checker.isFocusable(redirectToElement)) {\n                console.warn(`Element matching '[cdkFocusInitial]' is not focusable.`, redirectToElement);\n            }\n            if (!this._checker.isFocusable(redirectToElement)) {\n                const focusableChild = this._getFirstTabbableElement(redirectToElement);\n                focusableChild?.focus(options);\n                return !!focusableChild;\n            }\n            redirectToElement.focus(options);\n            return true;\n        }\n        return this.focusFirstTabbableElement(options);\n    }\n    /**\n     * Focuses the first tabbable element within the focus trap region.\n     * @returns Whether focus was moved successfully.\n     */\n    focusFirstTabbableElement(options) {\n        const redirectToElement = this._getRegionBoundary('start');\n        if (redirectToElement) {\n            redirectToElement.focus(options);\n        }\n        return !!redirectToElement;\n    }\n    /**\n     * Focuses the last tabbable element within the focus trap region.\n     * @returns Whether focus was moved successfully.\n     */\n    focusLastTabbableElement(options) {\n        const redirectToElement = this._getRegionBoundary('end');\n        if (redirectToElement) {\n            redirectToElement.focus(options);\n        }\n        return !!redirectToElement;\n    }\n    /**\n     * Checks whether the focus trap has successfully been attached.\n     */\n    hasAttached() {\n        return this._hasAttached;\n    }\n    /** Get the first tabbable element from a DOM subtree (inclusive). */\n    _getFirstTabbableElement(root) {\n        if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n            return root;\n        }\n        const children = root.children;\n        for (let i = 0; i < children.length; i++) {\n            const tabbableChild = children[i].nodeType === this._document.ELEMENT_NODE\n                ? this._getFirstTabbableElement(children[i])\n                : null;\n            if (tabbableChild) {\n                return tabbableChild;\n            }\n        }\n        return null;\n    }\n    /** Get the last tabbable element from a DOM subtree (inclusive). */\n    _getLastTabbableElement(root) {\n        if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n            return root;\n        }\n        // Iterate in reverse DOM order.\n        const children = root.children;\n        for (let i = children.length - 1; i >= 0; i--) {\n            const tabbableChild = children[i].nodeType === this._document.ELEMENT_NODE\n                ? this._getLastTabbableElement(children[i])\n                : null;\n            if (tabbableChild) {\n                return tabbableChild;\n            }\n        }\n        return null;\n    }\n    /** Creates an anchor element. */\n    _createAnchor() {\n        const anchor = this._document.createElement('div');\n        this._toggleAnchorTabIndex(this._enabled, anchor);\n        anchor.classList.add('cdk-visually-hidden');\n        anchor.classList.add('cdk-focus-trap-anchor');\n        anchor.setAttribute('aria-hidden', 'true');\n        return anchor;\n    }\n    /**\n     * Toggles the `tabindex` of an anchor, based on the enabled state of the focus trap.\n     * @param isEnabled Whether the focus trap is enabled.\n     * @param anchor Anchor on which to toggle the tabindex.\n     */\n    _toggleAnchorTabIndex(isEnabled, anchor) {\n        // Remove the tabindex completely, rather than setting it to -1, because if the\n        // element has a tabindex, the user might still hit it when navigating with the arrow keys.\n        isEnabled ? anchor.setAttribute('tabindex', '0') : anchor.removeAttribute('tabindex');\n    }\n    /**\n     * Toggles the`tabindex` of both anchors to either trap Tab focus or allow it to escape.\n     * @param enabled: Whether the anchors should trap Tab.\n     */\n    toggleAnchors(enabled) {\n        if (this._startAnchor && this._endAnchor) {\n            this._toggleAnchorTabIndex(enabled, this._startAnchor);\n            this._toggleAnchorTabIndex(enabled, this._endAnchor);\n        }\n    }\n    /** Executes a function when the zone is stable. */\n    _executeOnStable(fn) {\n        if (this._ngZone.isStable) {\n            fn();\n        }\n        else {\n            this._ngZone.onStable.pipe(take(1)).subscribe(fn);\n        }\n    }\n}\n/**\n * Factory that allows easy instantiation of focus traps.\n * @deprecated Use `ConfigurableFocusTrapFactory` instead.\n * @breaking-change 11.0.0\n */\nclass FocusTrapFactory {\n    constructor(_checker, _ngZone, _document) {\n        this._checker = _checker;\n        this._ngZone = _ngZone;\n        this._document = _document;\n    }\n    /**\n     * Creates a focus-trapped region around the given element.\n     * @param element The element around which focus will be trapped.\n     * @param deferCaptureElements Defers the creation of focus-capturing elements to be done\n     *     manually by the user.\n     * @returns The created focus trap instance.\n     */\n    create(element, deferCaptureElements = false) {\n        return new FocusTrap(element, this._checker, this._ngZone, this._document, deferCaptureElements);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: FocusTrapFactory, deps: [{ token: InteractivityChecker }, { token: i0.NgZone }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: FocusTrapFactory, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: FocusTrapFactory, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: InteractivityChecker }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }] });\n/** Directive for trapping focus within a region. */\nclass CdkTrapFocus {\n    /** Whether the focus trap is active. */\n    get enabled() {\n        return this.focusTrap.enabled;\n    }\n    set enabled(value) {\n        this.focusTrap.enabled = value;\n    }\n    constructor(_elementRef, _focusTrapFactory, \n    /**\n     * @deprecated No longer being used. To be removed.\n     * @breaking-change 13.0.0\n     */\n    _document) {\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        /** Previously focused element to restore focus to upon destroy when using autoCapture. */\n        this._previouslyFocusedElement = null;\n        this.focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement, true);\n    }\n    ngOnDestroy() {\n        this.focusTrap.destroy();\n        // If we stored a previously focused element when using autoCapture, return focus to that\n        // element now that the trapped region is being destroyed.\n        if (this._previouslyFocusedElement) {\n            this._previouslyFocusedElement.focus();\n            this._previouslyFocusedElement = null;\n        }\n    }\n    ngAfterContentInit() {\n        this.focusTrap.attachAnchors();\n        if (this.autoCapture) {\n            this._captureFocus();\n        }\n    }\n    ngDoCheck() {\n        if (!this.focusTrap.hasAttached()) {\n            this.focusTrap.attachAnchors();\n        }\n    }\n    ngOnChanges(changes) {\n        const autoCaptureChange = changes['autoCapture'];\n        if (autoCaptureChange &&\n            !autoCaptureChange.firstChange &&\n            this.autoCapture &&\n            this.focusTrap.hasAttached()) {\n            this._captureFocus();\n        }\n    }\n    _captureFocus() {\n        this._previouslyFocusedElement = _getFocusedElementPierceShadowDom();\n        this.focusTrap.focusInitialElementWhenReady();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: CdkTrapFocus, deps: [{ token: i0.ElementRef }, { token: FocusTrapFactory }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"17.0.4\", type: CdkTrapFocus, selector: \"[cdkTrapFocus]\", inputs: { enabled: [\"cdkTrapFocus\", \"enabled\", booleanAttribute], autoCapture: [\"cdkTrapFocusAutoCapture\", \"autoCapture\", booleanAttribute] }, exportAs: [\"cdkTrapFocus\"], usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: CdkTrapFocus, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkTrapFocus]',\n                    exportAs: 'cdkTrapFocus',\n                }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: FocusTrapFactory }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }], propDecorators: { enabled: [{\n                type: Input,\n                args: [{ alias: 'cdkTrapFocus', transform: booleanAttribute }]\n            }], autoCapture: [{\n                type: Input,\n                args: [{ alias: 'cdkTrapFocusAutoCapture', transform: booleanAttribute }]\n            }] } });\n\n/**\n * Class that allows for trapping focus within a DOM element.\n *\n * This class uses a strategy pattern that determines how it traps focus.\n * See FocusTrapInertStrategy.\n */\nclass ConfigurableFocusTrap extends FocusTrap {\n    /** Whether the FocusTrap is enabled. */\n    get enabled() {\n        return this._enabled;\n    }\n    set enabled(value) {\n        this._enabled = value;\n        if (this._enabled) {\n            this._focusTrapManager.register(this);\n        }\n        else {\n            this._focusTrapManager.deregister(this);\n        }\n    }\n    constructor(_element, _checker, _ngZone, _document, _focusTrapManager, _inertStrategy, config) {\n        super(_element, _checker, _ngZone, _document, config.defer);\n        this._focusTrapManager = _focusTrapManager;\n        this._inertStrategy = _inertStrategy;\n        this._focusTrapManager.register(this);\n    }\n    /** Notifies the FocusTrapManager that this FocusTrap will be destroyed. */\n    destroy() {\n        this._focusTrapManager.deregister(this);\n        super.destroy();\n    }\n    /** @docs-private Implemented as part of ManagedFocusTrap. */\n    _enable() {\n        this._inertStrategy.preventFocus(this);\n        this.toggleAnchors(true);\n    }\n    /** @docs-private Implemented as part of ManagedFocusTrap. */\n    _disable() {\n        this._inertStrategy.allowFocus(this);\n        this.toggleAnchors(false);\n    }\n}\n\n/** The injection token used to specify the inert strategy. */\nconst FOCUS_TRAP_INERT_STRATEGY = new InjectionToken('FOCUS_TRAP_INERT_STRATEGY');\n\n/**\n * Lightweight FocusTrapInertStrategy that adds a document focus event\n * listener to redirect focus back inside the FocusTrap.\n */\nclass EventListenerFocusTrapInertStrategy {\n    constructor() {\n        /** Focus event handler. */\n        this._listener = null;\n    }\n    /** Adds a document event listener that keeps focus inside the FocusTrap. */\n    preventFocus(focusTrap) {\n        // Ensure there's only one listener per document\n        if (this._listener) {\n            focusTrap._document.removeEventListener('focus', this._listener, true);\n        }\n        this._listener = (e) => this._trapFocus(focusTrap, e);\n        focusTrap._ngZone.runOutsideAngular(() => {\n            focusTrap._document.addEventListener('focus', this._listener, true);\n        });\n    }\n    /** Removes the event listener added in preventFocus. */\n    allowFocus(focusTrap) {\n        if (!this._listener) {\n            return;\n        }\n        focusTrap._document.removeEventListener('focus', this._listener, true);\n        this._listener = null;\n    }\n    /**\n     * Refocuses the first element in the FocusTrap if the focus event target was outside\n     * the FocusTrap.\n     *\n     * This is an event listener callback. The event listener is added in runOutsideAngular,\n     * so all this code runs outside Angular as well.\n     */\n    _trapFocus(focusTrap, event) {\n        const target = event.target;\n        const focusTrapRoot = focusTrap._element;\n        // Don't refocus if target was in an overlay, because the overlay might be associated\n        // with an element inside the FocusTrap, ex. mat-select.\n        if (target && !focusTrapRoot.contains(target) && !target.closest?.('div.cdk-overlay-pane')) {\n            // Some legacy FocusTrap usages have logic that focuses some element on the page\n            // just before FocusTrap is destroyed. For backwards compatibility, wait\n            // to be sure FocusTrap is still enabled before refocusing.\n            setTimeout(() => {\n                // Check whether focus wasn't put back into the focus trap while the timeout was pending.\n                if (focusTrap.enabled && !focusTrapRoot.contains(focusTrap._document.activeElement)) {\n                    focusTrap.focusFirstTabbableElement();\n                }\n            });\n        }\n    }\n}\n\n/** Injectable that ensures only the most recently enabled FocusTrap is active. */\nclass FocusTrapManager {\n    constructor() {\n        // A stack of the FocusTraps on the page. Only the FocusTrap at the\n        // top of the stack is active.\n        this._focusTrapStack = [];\n    }\n    /**\n     * Disables the FocusTrap at the top of the stack, and then pushes\n     * the new FocusTrap onto the stack.\n     */\n    register(focusTrap) {\n        // Dedupe focusTraps that register multiple times.\n        this._focusTrapStack = this._focusTrapStack.filter(ft => ft !== focusTrap);\n        let stack = this._focusTrapStack;\n        if (stack.length) {\n            stack[stack.length - 1]._disable();\n        }\n        stack.push(focusTrap);\n        focusTrap._enable();\n    }\n    /**\n     * Removes the FocusTrap from the stack, and activates the\n     * FocusTrap that is the new top of the stack.\n     */\n    deregister(focusTrap) {\n        focusTrap._disable();\n        const stack = this._focusTrapStack;\n        const i = stack.indexOf(focusTrap);\n        if (i !== -1) {\n            stack.splice(i, 1);\n            if (stack.length) {\n                stack[stack.length - 1]._enable();\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: FocusTrapManager, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: FocusTrapManager, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: FocusTrapManager, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\n/** Factory that allows easy instantiation of configurable focus traps. */\nclass ConfigurableFocusTrapFactory {\n    constructor(_checker, _ngZone, _focusTrapManager, _document, _inertStrategy) {\n        this._checker = _checker;\n        this._ngZone = _ngZone;\n        this._focusTrapManager = _focusTrapManager;\n        this._document = _document;\n        // TODO split up the strategies into different modules, similar to DateAdapter.\n        this._inertStrategy = _inertStrategy || new EventListenerFocusTrapInertStrategy();\n    }\n    create(element, config = { defer: false }) {\n        let configObject;\n        if (typeof config === 'boolean') {\n            configObject = { defer: config };\n        }\n        else {\n            configObject = config;\n        }\n        return new ConfigurableFocusTrap(element, this._checker, this._ngZone, this._document, this._focusTrapManager, this._inertStrategy, configObject);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: ConfigurableFocusTrapFactory, deps: [{ token: InteractivityChecker }, { token: i0.NgZone }, { token: FocusTrapManager }, { token: DOCUMENT }, { token: FOCUS_TRAP_INERT_STRATEGY, optional: true }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: ConfigurableFocusTrapFactory, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: ConfigurableFocusTrapFactory, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: InteractivityChecker }, { type: i0.NgZone }, { type: FocusTrapManager }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [FOCUS_TRAP_INERT_STRATEGY]\n                }] }] });\n\n/** Gets whether an event could be a faked `mousedown` event dispatched by a screen reader. */\nfunction isFakeMousedownFromScreenReader(event) {\n    // Some screen readers will dispatch a fake `mousedown` event when pressing enter or space on\n    // a clickable element. We can distinguish these events when `event.buttons` is zero, or\n    // `event.detail` is zero depending on the browser:\n    // - `event.buttons` works on Firefox, but fails on Chrome.\n    // - `detail` works on Chrome, but fails on Firefox.\n    return event.buttons === 0 || event.detail === 0;\n}\n/** Gets whether an event could be a faked `touchstart` event dispatched by a screen reader. */\nfunction isFakeTouchstartFromScreenReader(event) {\n    const touch = (event.touches && event.touches[0]) || (event.changedTouches && event.changedTouches[0]);\n    // A fake `touchstart` can be distinguished from a real one by looking at the `identifier`\n    // which is typically >= 0 on a real device versus -1 from a screen reader. Just to be safe,\n    // we can also look at `radiusX` and `radiusY`. This behavior was observed against a Windows 10\n    // device with a touch screen running NVDA v2020.4 and Firefox 85 or Chrome 88.\n    return (!!touch &&\n        touch.identifier === -1 &&\n        (touch.radiusX == null || touch.radiusX === 1) &&\n        (touch.radiusY == null || touch.radiusY === 1));\n}\n\n/**\n * Injectable options for the InputModalityDetector. These are shallowly merged with the default\n * options.\n */\nconst INPUT_MODALITY_DETECTOR_OPTIONS = new InjectionToken('cdk-input-modality-detector-options');\n/**\n * Default options for the InputModalityDetector.\n *\n * Modifier keys are ignored by default (i.e. when pressed won't cause the service to detect\n * keyboard input modality) for two reasons:\n *\n * 1. Modifier keys are commonly used with mouse to perform actions such as 'right click' or 'open\n *    in new tab', and are thus less representative of actual keyboard interaction.\n * 2. VoiceOver triggers some keyboard events when linearly navigating with Control + Option (but\n *    confusingly not with Caps Lock). Thus, to have parity with other screen readers, we ignore\n *    these keys so as to not update the input modality.\n *\n * Note that we do not by default ignore the right Meta key on Safari because it has the same key\n * code as the ContextMenu key on other browsers. When we switch to using event.key, we can\n * distinguish between the two.\n */\nconst INPUT_MODALITY_DETECTOR_DEFAULT_OPTIONS = {\n    ignoreKeys: [ALT, CONTROL, MAC_META, META, SHIFT],\n};\n/**\n * The amount of time needed to pass after a touchstart event in order for a subsequent mousedown\n * event to be attributed as mouse and not touch.\n *\n * This is the value used by AngularJS Material. Through trial and error (on iPhone 6S) they found\n * that a value of around 650ms seems appropriate.\n */\nconst TOUCH_BUFFER_MS = 650;\n/**\n * Event listener options that enable capturing and also mark the listener as passive if the browser\n * supports it.\n */\nconst modalityEventListenerOptions = normalizePassiveListenerOptions({\n    passive: true,\n    capture: true,\n});\n/**\n * Service that detects the user's input modality.\n *\n * This service does not update the input modality when a user navigates with a screen reader\n * (e.g. linear navigation with VoiceOver, object navigation / browse mode with NVDA, virtual PC\n * cursor mode with JAWS). This is in part due to technical limitations (i.e. keyboard events do not\n * fire as expected in these modes) but is also arguably the correct behavior. Navigating with a\n * screen reader is akin to visually scanning a page, and should not be interpreted as actual user\n * input interaction.\n *\n * When a user is not navigating but *interacting* with a screen reader, this service attempts to\n * update the input modality to keyboard, but in general this service's behavior is largely\n * undefined.\n */\nclass InputModalityDetector {\n    /** The most recently detected input modality. */\n    get mostRecentModality() {\n        return this._modality.value;\n    }\n    constructor(_platform, ngZone, document, options) {\n        this._platform = _platform;\n        /**\n         * The most recently detected input modality event target. Is null if no input modality has been\n         * detected or if the associated event target is null for some unknown reason.\n         */\n        this._mostRecentTarget = null;\n        /** The underlying BehaviorSubject that emits whenever an input modality is detected. */\n        this._modality = new BehaviorSubject(null);\n        /**\n         * The timestamp of the last touch input modality. Used to determine whether mousedown events\n         * should be attributed to mouse or touch.\n         */\n        this._lastTouchMs = 0;\n        /**\n         * Handles keydown events. Must be an arrow function in order to preserve the context when it gets\n         * bound.\n         */\n        this._onKeydown = (event) => {\n            // If this is one of the keys we should ignore, then ignore it and don't update the input\n            // modality to keyboard.\n            if (this._options?.ignoreKeys?.some(keyCode => keyCode === event.keyCode)) {\n                return;\n            }\n            this._modality.next('keyboard');\n            this._mostRecentTarget = _getEventTarget(event);\n        };\n        /**\n         * Handles mousedown events. Must be an arrow function in order to preserve the context when it\n         * gets bound.\n         */\n        this._onMousedown = (event) => {\n            // Touches trigger both touch and mouse events, so we need to distinguish between mouse events\n            // that were triggered via mouse vs touch. To do so, check if the mouse event occurs closely\n            // after the previous touch event.\n            if (Date.now() - this._lastTouchMs < TOUCH_BUFFER_MS) {\n                return;\n            }\n            // Fake mousedown events are fired by some screen readers when controls are activated by the\n            // screen reader. Attribute them to keyboard input modality.\n            this._modality.next(isFakeMousedownFromScreenReader(event) ? 'keyboard' : 'mouse');\n            this._mostRecentTarget = _getEventTarget(event);\n        };\n        /**\n         * Handles touchstart events. Must be an arrow function in order to preserve the context when it\n         * gets bound.\n         */\n        this._onTouchstart = (event) => {\n            // Same scenario as mentioned in _onMousedown, but on touch screen devices, fake touchstart\n            // events are fired. Again, attribute to keyboard input modality.\n            if (isFakeTouchstartFromScreenReader(event)) {\n                this._modality.next('keyboard');\n                return;\n            }\n            // Store the timestamp of this touch event, as it's used to distinguish between mouse events\n            // triggered via mouse vs touch.\n            this._lastTouchMs = Date.now();\n            this._modality.next('touch');\n            this._mostRecentTarget = _getEventTarget(event);\n        };\n        this._options = {\n            ...INPUT_MODALITY_DETECTOR_DEFAULT_OPTIONS,\n            ...options,\n        };\n        // Skip the first emission as it's null.\n        this.modalityDetected = this._modality.pipe(skip(1));\n        this.modalityChanged = this.modalityDetected.pipe(distinctUntilChanged());\n        // If we're not in a browser, this service should do nothing, as there's no relevant input\n        // modality to detect.\n        if (_platform.isBrowser) {\n            ngZone.runOutsideAngular(() => {\n                document.addEventListener('keydown', this._onKeydown, modalityEventListenerOptions);\n                document.addEventListener('mousedown', this._onMousedown, modalityEventListenerOptions);\n                document.addEventListener('touchstart', this._onTouchstart, modalityEventListenerOptions);\n            });\n        }\n    }\n    ngOnDestroy() {\n        this._modality.complete();\n        if (this._platform.isBrowser) {\n            document.removeEventListener('keydown', this._onKeydown, modalityEventListenerOptions);\n            document.removeEventListener('mousedown', this._onMousedown, modalityEventListenerOptions);\n            document.removeEventListener('touchstart', this._onTouchstart, modalityEventListenerOptions);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: InputModalityDetector, deps: [{ token: i1.Platform }, { token: i0.NgZone }, { token: DOCUMENT }, { token: INPUT_MODALITY_DETECTOR_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: InputModalityDetector, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: InputModalityDetector, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: i1.Platform }, { type: i0.NgZone }, { type: Document, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [INPUT_MODALITY_DETECTOR_OPTIONS]\n                }] }] });\n\nconst LIVE_ANNOUNCER_ELEMENT_TOKEN = new InjectionToken('liveAnnouncerElement', {\n    providedIn: 'root',\n    factory: LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY,\n});\n/** @docs-private */\nfunction LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY() {\n    return null;\n}\n/** Injection token that can be used to configure the default options for the LiveAnnouncer. */\nconst LIVE_ANNOUNCER_DEFAULT_OPTIONS = new InjectionToken('LIVE_ANNOUNCER_DEFAULT_OPTIONS');\n\nlet uniqueIds = 0;\nclass LiveAnnouncer {\n    constructor(elementToken, _ngZone, _document, _defaultOptions) {\n        this._ngZone = _ngZone;\n        this._defaultOptions = _defaultOptions;\n        // We inject the live element and document as `any` because the constructor signature cannot\n        // reference browser globals (HTMLElement, Document) on non-browser environments, since having\n        // a class decorator causes TypeScript to preserve the constructor signature types.\n        this._document = _document;\n        this._liveElement = elementToken || this._createLiveElement();\n    }\n    announce(message, ...args) {\n        const defaultOptions = this._defaultOptions;\n        let politeness;\n        let duration;\n        if (args.length === 1 && typeof args[0] === 'number') {\n            duration = args[0];\n        }\n        else {\n            [politeness, duration] = args;\n        }\n        this.clear();\n        clearTimeout(this._previousTimeout);\n        if (!politeness) {\n            politeness =\n                defaultOptions && defaultOptions.politeness ? defaultOptions.politeness : 'polite';\n        }\n        if (duration == null && defaultOptions) {\n            duration = defaultOptions.duration;\n        }\n        // TODO: ensure changing the politeness works on all environments we support.\n        this._liveElement.setAttribute('aria-live', politeness);\n        if (this._liveElement.id) {\n            this._exposeAnnouncerToModals(this._liveElement.id);\n        }\n        // This 100ms timeout is necessary for some browser + screen-reader combinations:\n        // - Both JAWS and NVDA over IE11 will not announce anything without a non-zero timeout.\n        // - With Chrome and IE11 with NVDA or JAWS, a repeated (identical) message won't be read a\n        //   second time without clearing and then using a non-zero delay.\n        // (using JAWS 17 at time of this writing).\n        return this._ngZone.runOutsideAngular(() => {\n            if (!this._currentPromise) {\n                this._currentPromise = new Promise(resolve => (this._currentResolve = resolve));\n            }\n            clearTimeout(this._previousTimeout);\n            this._previousTimeout = setTimeout(() => {\n                this._liveElement.textContent = message;\n                if (typeof duration === 'number') {\n                    this._previousTimeout = setTimeout(() => this.clear(), duration);\n                }\n                this._currentResolve();\n                this._currentPromise = this._currentResolve = undefined;\n            }, 100);\n            return this._currentPromise;\n        });\n    }\n    /**\n     * Clears the current text from the announcer element. Can be used to prevent\n     * screen readers from reading the text out again while the user is going\n     * through the page landmarks.\n     */\n    clear() {\n        if (this._liveElement) {\n            this._liveElement.textContent = '';\n        }\n    }\n    ngOnDestroy() {\n        clearTimeout(this._previousTimeout);\n        this._liveElement?.remove();\n        this._liveElement = null;\n        this._currentResolve?.();\n        this._currentPromise = this._currentResolve = undefined;\n    }\n    _createLiveElement() {\n        const elementClass = 'cdk-live-announcer-element';\n        const previousElements = this._document.getElementsByClassName(elementClass);\n        const liveEl = this._document.createElement('div');\n        // Remove any old containers. This can happen when coming in from a server-side-rendered page.\n        for (let i = 0; i < previousElements.length; i++) {\n            previousElements[i].remove();\n        }\n        liveEl.classList.add(elementClass);\n        liveEl.classList.add('cdk-visually-hidden');\n        liveEl.setAttribute('aria-atomic', 'true');\n        liveEl.setAttribute('aria-live', 'polite');\n        liveEl.id = `cdk-live-announcer-${uniqueIds++}`;\n        this._document.body.appendChild(liveEl);\n        return liveEl;\n    }\n    /**\n     * Some browsers won't expose the accessibility node of the live announcer element if there is an\n     * `aria-modal` and the live announcer is outside of it. This method works around the issue by\n     * pointing the `aria-owns` of all modals to the live announcer element.\n     */\n    _exposeAnnouncerToModals(id) {\n        // TODO(http://github.com/angular/components/issues/26853): consider de-duplicating this with\n        // the `SnakBarContainer` and other usages.\n        //\n        // Note that the selector here is limited to CDK overlays at the moment in order to reduce the\n        // section of the DOM we need to look through. This should cover all the cases we support, but\n        // the selector can be expanded if it turns out to be too narrow.\n        const modals = this._document.querySelectorAll('body > .cdk-overlay-container [aria-modal=\"true\"]');\n        for (let i = 0; i < modals.length; i++) {\n            const modal = modals[i];\n            const ariaOwns = modal.getAttribute('aria-owns');\n            if (!ariaOwns) {\n                modal.setAttribute('aria-owns', id);\n            }\n            else if (ariaOwns.indexOf(id) === -1) {\n                modal.setAttribute('aria-owns', ariaOwns + ' ' + id);\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: LiveAnnouncer, deps: [{ token: LIVE_ANNOUNCER_ELEMENT_TOKEN, optional: true }, { token: i0.NgZone }, { token: DOCUMENT }, { token: LIVE_ANNOUNCER_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: LiveAnnouncer, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: LiveAnnouncer, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [LIVE_ANNOUNCER_ELEMENT_TOKEN]\n                }] }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [LIVE_ANNOUNCER_DEFAULT_OPTIONS]\n                }] }] });\n/**\n * A directive that works similarly to aria-live, but uses the LiveAnnouncer to ensure compatibility\n * with a wider range of browsers and screen readers.\n */\nclass CdkAriaLive {\n    /** The aria-live politeness level to use when announcing messages. */\n    get politeness() {\n        return this._politeness;\n    }\n    set politeness(value) {\n        this._politeness = value === 'off' || value === 'assertive' ? value : 'polite';\n        if (this._politeness === 'off') {\n            if (this._subscription) {\n                this._subscription.unsubscribe();\n                this._subscription = null;\n            }\n        }\n        else if (!this._subscription) {\n            this._subscription = this._ngZone.runOutsideAngular(() => {\n                return this._contentObserver.observe(this._elementRef).subscribe(() => {\n                    // Note that we use textContent here, rather than innerText, in order to avoid a reflow.\n                    const elementText = this._elementRef.nativeElement.textContent;\n                    // The `MutationObserver` fires also for attribute\n                    // changes which we don't want to announce.\n                    if (elementText !== this._previousAnnouncedText) {\n                        this._liveAnnouncer.announce(elementText, this._politeness, this.duration);\n                        this._previousAnnouncedText = elementText;\n                    }\n                });\n            });\n        }\n    }\n    constructor(_elementRef, _liveAnnouncer, _contentObserver, _ngZone) {\n        this._elementRef = _elementRef;\n        this._liveAnnouncer = _liveAnnouncer;\n        this._contentObserver = _contentObserver;\n        this._ngZone = _ngZone;\n        this._politeness = 'polite';\n    }\n    ngOnDestroy() {\n        if (this._subscription) {\n            this._subscription.unsubscribe();\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: CdkAriaLive, deps: [{ token: i0.ElementRef }, { token: LiveAnnouncer }, { token: i1$1.ContentObserver }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.0.4\", type: CdkAriaLive, selector: \"[cdkAriaLive]\", inputs: { politeness: [\"cdkAriaLive\", \"politeness\"], duration: [\"cdkAriaLiveDuration\", \"duration\"] }, exportAs: [\"cdkAriaLive\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: CdkAriaLive, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkAriaLive]',\n                    exportAs: 'cdkAriaLive',\n                }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: LiveAnnouncer }, { type: i1$1.ContentObserver }, { type: i0.NgZone }], propDecorators: { politeness: [{\n                type: Input,\n                args: ['cdkAriaLive']\n            }], duration: [{\n                type: Input,\n                args: ['cdkAriaLiveDuration']\n            }] } });\n\n/** InjectionToken for FocusMonitorOptions. */\nconst FOCUS_MONITOR_DEFAULT_OPTIONS = new InjectionToken('cdk-focus-monitor-default-options');\n/**\n * Event listener options that enable capturing and also\n * mark the listener as passive if the browser supports it.\n */\nconst captureEventListenerOptions = normalizePassiveListenerOptions({\n    passive: true,\n    capture: true,\n});\n/** Monitors mouse and keyboard events to determine the cause of focus events. */\nclass FocusMonitor {\n    constructor(_ngZone, _platform, _inputModalityDetector, \n    /** @breaking-change 11.0.0 make document required */\n    document, options) {\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        this._inputModalityDetector = _inputModalityDetector;\n        /** The focus origin that the next focus event is a result of. */\n        this._origin = null;\n        /** Whether the window has just been focused. */\n        this._windowFocused = false;\n        /**\n         * Whether the origin was determined via a touch interaction. Necessary as properly attributing\n         * focus events to touch interactions requires special logic.\n         */\n        this._originFromTouchInteraction = false;\n        /** Map of elements being monitored to their info. */\n        this._elementInfo = new Map();\n        /** The number of elements currently being monitored. */\n        this._monitoredElementCount = 0;\n        /**\n         * Keeps track of the root nodes to which we've currently bound a focus/blur handler,\n         * as well as the number of monitored elements that they contain. We have to treat focus/blur\n         * handlers differently from the rest of the events, because the browser won't emit events\n         * to the document when focus moves inside of a shadow root.\n         */\n        this._rootNodeFocusListenerCount = new Map();\n        /**\n         * Event listener for `focus` events on the window.\n         * Needs to be an arrow function in order to preserve the context when it gets bound.\n         */\n        this._windowFocusListener = () => {\n            // Make a note of when the window regains focus, so we can\n            // restore the origin info for the focused element.\n            this._windowFocused = true;\n            this._windowFocusTimeoutId = window.setTimeout(() => (this._windowFocused = false));\n        };\n        /** Subject for stopping our InputModalityDetector subscription. */\n        this._stopInputModalityDetector = new Subject();\n        /**\n         * Event listener for `focus` and 'blur' events on the document.\n         * Needs to be an arrow function in order to preserve the context when it gets bound.\n         */\n        this._rootNodeFocusAndBlurListener = (event) => {\n            const target = _getEventTarget(event);\n            // We need to walk up the ancestor chain in order to support `checkChildren`.\n            for (let element = target; element; element = element.parentElement) {\n                if (event.type === 'focus') {\n                    this._onFocus(event, element);\n                }\n                else {\n                    this._onBlur(event, element);\n                }\n            }\n        };\n        this._document = document;\n        this._detectionMode = options?.detectionMode || 0 /* FocusMonitorDetectionMode.IMMEDIATE */;\n    }\n    monitor(element, checkChildren = false) {\n        const nativeElement = coerceElement(element);\n        // Do nothing if we're not on the browser platform or the passed in node isn't an element.\n        if (!this._platform.isBrowser || nativeElement.nodeType !== 1) {\n            // Note: we don't want the observable to emit at all so we don't pass any parameters.\n            return of();\n        }\n        // If the element is inside the shadow DOM, we need to bind our focus/blur listeners to\n        // the shadow root, rather than the `document`, because the browser won't emit focus events\n        // to the `document`, if focus is moving within the same shadow root.\n        const rootNode = _getShadowRoot(nativeElement) || this._getDocument();\n        const cachedInfo = this._elementInfo.get(nativeElement);\n        // Check if we're already monitoring this element.\n        if (cachedInfo) {\n            if (checkChildren) {\n                // TODO(COMP-318): this can be problematic, because it'll turn all non-checkChildren\n                // observers into ones that behave as if `checkChildren` was turned on. We need a more\n                // robust solution.\n                cachedInfo.checkChildren = true;\n            }\n            return cachedInfo.subject;\n        }\n        // Create monitored element info.\n        const info = {\n            checkChildren: checkChildren,\n            subject: new Subject(),\n            rootNode,\n        };\n        this._elementInfo.set(nativeElement, info);\n        this._registerGlobalListeners(info);\n        return info.subject;\n    }\n    stopMonitoring(element) {\n        const nativeElement = coerceElement(element);\n        const elementInfo = this._elementInfo.get(nativeElement);\n        if (elementInfo) {\n            elementInfo.subject.complete();\n            this._setClasses(nativeElement);\n            this._elementInfo.delete(nativeElement);\n            this._removeGlobalListeners(elementInfo);\n        }\n    }\n    focusVia(element, origin, options) {\n        const nativeElement = coerceElement(element);\n        const focusedElement = this._getDocument().activeElement;\n        // If the element is focused already, calling `focus` again won't trigger the event listener\n        // which means that the focus classes won't be updated. If that's the case, update the classes\n        // directly without waiting for an event.\n        if (nativeElement === focusedElement) {\n            this._getClosestElementsInfo(nativeElement).forEach(([currentElement, info]) => this._originChanged(currentElement, origin, info));\n        }\n        else {\n            this._setOrigin(origin);\n            // `focus` isn't available on the server\n            if (typeof nativeElement.focus === 'function') {\n                nativeElement.focus(options);\n            }\n        }\n    }\n    ngOnDestroy() {\n        this._elementInfo.forEach((_info, element) => this.stopMonitoring(element));\n    }\n    /** Access injected document if available or fallback to global document reference */\n    _getDocument() {\n        return this._document || document;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        const doc = this._getDocument();\n        return doc.defaultView || window;\n    }\n    _getFocusOrigin(focusEventTarget) {\n        if (this._origin) {\n            // If the origin was realized via a touch interaction, we need to perform additional checks\n            // to determine whether the focus origin should be attributed to touch or program.\n            if (this._originFromTouchInteraction) {\n                return this._shouldBeAttributedToTouch(focusEventTarget) ? 'touch' : 'program';\n            }\n            else {\n                return this._origin;\n            }\n        }\n        // If the window has just regained focus, we can restore the most recent origin from before the\n        // window blurred. Otherwise, we've reached the point where we can't identify the source of the\n        // focus. This typically means one of two things happened:\n        //\n        // 1) The element was programmatically focused, or\n        // 2) The element was focused via screen reader navigation (which generally doesn't fire\n        //    events).\n        //\n        // Because we can't distinguish between these two cases, we default to setting `program`.\n        if (this._windowFocused && this._lastFocusOrigin) {\n            return this._lastFocusOrigin;\n        }\n        // If the interaction is coming from an input label, we consider it a mouse interactions.\n        // This is a special case where focus moves on `click`, rather than `mousedown` which breaks\n        // our detection, because all our assumptions are for `mousedown`. We need to handle this\n        // special case, because it's very common for checkboxes and radio buttons.\n        if (focusEventTarget && this._isLastInteractionFromInputLabel(focusEventTarget)) {\n            return 'mouse';\n        }\n        return 'program';\n    }\n    /**\n     * Returns whether the focus event should be attributed to touch. Recall that in IMMEDIATE mode, a\n     * touch origin isn't immediately reset at the next tick (see _setOrigin). This means that when we\n     * handle a focus event following a touch interaction, we need to determine whether (1) the focus\n     * event was directly caused by the touch interaction or (2) the focus event was caused by a\n     * subsequent programmatic focus call triggered by the touch interaction.\n     * @param focusEventTarget The target of the focus event under examination.\n     */\n    _shouldBeAttributedToTouch(focusEventTarget) {\n        // Please note that this check is not perfect. Consider the following edge case:\n        //\n        // <div #parent tabindex=\"0\">\n        //   <div #child tabindex=\"0\" (click)=\"#parent.focus()\"></div>\n        // </div>\n        //\n        // Suppose there is a FocusMonitor in IMMEDIATE mode attached to #parent. When the user touches\n        // #child, #parent is programmatically focused. This code will attribute the focus to touch\n        // instead of program. This is a relatively minor edge-case that can be worked around by using\n        // focusVia(parent, 'program') to focus #parent.\n        return (this._detectionMode === 1 /* FocusMonitorDetectionMode.EVENTUAL */ ||\n            !!focusEventTarget?.contains(this._inputModalityDetector._mostRecentTarget));\n    }\n    /**\n     * Sets the focus classes on the element based on the given focus origin.\n     * @param element The element to update the classes on.\n     * @param origin The focus origin.\n     */\n    _setClasses(element, origin) {\n        element.classList.toggle('cdk-focused', !!origin);\n        element.classList.toggle('cdk-touch-focused', origin === 'touch');\n        element.classList.toggle('cdk-keyboard-focused', origin === 'keyboard');\n        element.classList.toggle('cdk-mouse-focused', origin === 'mouse');\n        element.classList.toggle('cdk-program-focused', origin === 'program');\n    }\n    /**\n     * Updates the focus origin. If we're using immediate detection mode, we schedule an async\n     * function to clear the origin at the end of a timeout. The duration of the timeout depends on\n     * the origin being set.\n     * @param origin The origin to set.\n     * @param isFromInteraction Whether we are setting the origin from an interaction event.\n     */\n    _setOrigin(origin, isFromInteraction = false) {\n        this._ngZone.runOutsideAngular(() => {\n            this._origin = origin;\n            this._originFromTouchInteraction = origin === 'touch' && isFromInteraction;\n            // If we're in IMMEDIATE mode, reset the origin at the next tick (or in `TOUCH_BUFFER_MS` ms\n            // for a touch event). We reset the origin at the next tick because Firefox focuses one tick\n            // after the interaction event. We wait `TOUCH_BUFFER_MS` ms before resetting the origin for\n            // a touch event because when a touch event is fired, the associated focus event isn't yet in\n            // the event queue. Before doing so, clear any pending timeouts.\n            if (this._detectionMode === 0 /* FocusMonitorDetectionMode.IMMEDIATE */) {\n                clearTimeout(this._originTimeoutId);\n                const ms = this._originFromTouchInteraction ? TOUCH_BUFFER_MS : 1;\n                this._originTimeoutId = setTimeout(() => (this._origin = null), ms);\n            }\n        });\n    }\n    /**\n     * Handles focus events on a registered element.\n     * @param event The focus event.\n     * @param element The monitored element.\n     */\n    _onFocus(event, element) {\n        // NOTE(mmalerba): We currently set the classes based on the focus origin of the most recent\n        // focus event affecting the monitored element. If we want to use the origin of the first event\n        // instead we should check for the cdk-focused class here and return if the element already has\n        // it. (This only matters for elements that have includesChildren = true).\n        // If we are not counting child-element-focus as focused, make sure that the event target is the\n        // monitored element itself.\n        const elementInfo = this._elementInfo.get(element);\n        const focusEventTarget = _getEventTarget(event);\n        if (!elementInfo || (!elementInfo.checkChildren && element !== focusEventTarget)) {\n            return;\n        }\n        this._originChanged(element, this._getFocusOrigin(focusEventTarget), elementInfo);\n    }\n    /**\n     * Handles blur events on a registered element.\n     * @param event The blur event.\n     * @param element The monitored element.\n     */\n    _onBlur(event, element) {\n        // If we are counting child-element-focus as focused, make sure that we aren't just blurring in\n        // order to focus another child of the monitored element.\n        const elementInfo = this._elementInfo.get(element);\n        if (!elementInfo ||\n            (elementInfo.checkChildren &&\n                event.relatedTarget instanceof Node &&\n                element.contains(event.relatedTarget))) {\n            return;\n        }\n        this._setClasses(element);\n        this._emitOrigin(elementInfo, null);\n    }\n    _emitOrigin(info, origin) {\n        if (info.subject.observers.length) {\n            this._ngZone.run(() => info.subject.next(origin));\n        }\n    }\n    _registerGlobalListeners(elementInfo) {\n        if (!this._platform.isBrowser) {\n            return;\n        }\n        const rootNode = elementInfo.rootNode;\n        const rootNodeFocusListeners = this._rootNodeFocusListenerCount.get(rootNode) || 0;\n        if (!rootNodeFocusListeners) {\n            this._ngZone.runOutsideAngular(() => {\n                rootNode.addEventListener('focus', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n                rootNode.addEventListener('blur', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n            });\n        }\n        this._rootNodeFocusListenerCount.set(rootNode, rootNodeFocusListeners + 1);\n        // Register global listeners when first element is monitored.\n        if (++this._monitoredElementCount === 1) {\n            // Note: we listen to events in the capture phase so we\n            // can detect them even if the user stops propagation.\n            this._ngZone.runOutsideAngular(() => {\n                const window = this._getWindow();\n                window.addEventListener('focus', this._windowFocusListener);\n            });\n            // The InputModalityDetector is also just a collection of global listeners.\n            this._inputModalityDetector.modalityDetected\n                .pipe(takeUntil(this._stopInputModalityDetector))\n                .subscribe(modality => {\n                this._setOrigin(modality, true /* isFromInteraction */);\n            });\n        }\n    }\n    _removeGlobalListeners(elementInfo) {\n        const rootNode = elementInfo.rootNode;\n        if (this._rootNodeFocusListenerCount.has(rootNode)) {\n            const rootNodeFocusListeners = this._rootNodeFocusListenerCount.get(rootNode);\n            if (rootNodeFocusListeners > 1) {\n                this._rootNodeFocusListenerCount.set(rootNode, rootNodeFocusListeners - 1);\n            }\n            else {\n                rootNode.removeEventListener('focus', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n                rootNode.removeEventListener('blur', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n                this._rootNodeFocusListenerCount.delete(rootNode);\n            }\n        }\n        // Unregister global listeners when last element is unmonitored.\n        if (!--this._monitoredElementCount) {\n            const window = this._getWindow();\n            window.removeEventListener('focus', this._windowFocusListener);\n            // Equivalently, stop our InputModalityDetector subscription.\n            this._stopInputModalityDetector.next();\n            // Clear timeouts for all potentially pending timeouts to prevent the leaks.\n            clearTimeout(this._windowFocusTimeoutId);\n            clearTimeout(this._originTimeoutId);\n        }\n    }\n    /** Updates all the state on an element once its focus origin has changed. */\n    _originChanged(element, origin, elementInfo) {\n        this._setClasses(element, origin);\n        this._emitOrigin(elementInfo, origin);\n        this._lastFocusOrigin = origin;\n    }\n    /**\n     * Collects the `MonitoredElementInfo` of a particular element and\n     * all of its ancestors that have enabled `checkChildren`.\n     * @param element Element from which to start the search.\n     */\n    _getClosestElementsInfo(element) {\n        const results = [];\n        this._elementInfo.forEach((info, currentElement) => {\n            if (currentElement === element || (info.checkChildren && currentElement.contains(element))) {\n                results.push([currentElement, info]);\n            }\n        });\n        return results;\n    }\n    /**\n     * Returns whether an interaction is likely to have come from the user clicking the `label` of\n     * an `input` or `textarea` in order to focus it.\n     * @param focusEventTarget Target currently receiving focus.\n     */\n    _isLastInteractionFromInputLabel(focusEventTarget) {\n        const { _mostRecentTarget: mostRecentTarget, mostRecentModality } = this._inputModalityDetector;\n        // If the last interaction used the mouse on an element contained by one of the labels\n        // of an `input`/`textarea` that is currently focused, it is very likely that the\n        // user redirected focus using the label.\n        if (mostRecentModality !== 'mouse' ||\n            !mostRecentTarget ||\n            mostRecentTarget === focusEventTarget ||\n            (focusEventTarget.nodeName !== 'INPUT' && focusEventTarget.nodeName !== 'TEXTAREA') ||\n            focusEventTarget.disabled) {\n            return false;\n        }\n        const labels = focusEventTarget.labels;\n        if (labels) {\n            for (let i = 0; i < labels.length; i++) {\n                if (labels[i].contains(mostRecentTarget)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: FocusMonitor, deps: [{ token: i0.NgZone }, { token: i1.Platform }, { token: InputModalityDetector }, { token: DOCUMENT, optional: true }, { token: FOCUS_MONITOR_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: FocusMonitor, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: FocusMonitor, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: i0.NgZone }, { type: i1.Platform }, { type: InputModalityDetector }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [FOCUS_MONITOR_DEFAULT_OPTIONS]\n                }] }] });\n/**\n * Directive that determines how a particular element was focused (via keyboard, mouse, touch, or\n * programmatically) and adds corresponding classes to the element.\n *\n * There are two variants of this directive:\n * 1) cdkMonitorElementFocus: does not consider an element to be focused if one of its children is\n *    focused.\n * 2) cdkMonitorSubtreeFocus: considers an element focused if it or any of its children are focused.\n */\nclass CdkMonitorFocus {\n    constructor(_elementRef, _focusMonitor) {\n        this._elementRef = _elementRef;\n        this._focusMonitor = _focusMonitor;\n        this._focusOrigin = null;\n        this.cdkFocusChange = new EventEmitter();\n    }\n    get focusOrigin() {\n        return this._focusOrigin;\n    }\n    ngAfterViewInit() {\n        const element = this._elementRef.nativeElement;\n        this._monitorSubscription = this._focusMonitor\n            .monitor(element, element.nodeType === 1 && element.hasAttribute('cdkMonitorSubtreeFocus'))\n            .subscribe(origin => {\n            this._focusOrigin = origin;\n            this.cdkFocusChange.emit(origin);\n        });\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        if (this._monitorSubscription) {\n            this._monitorSubscription.unsubscribe();\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: CdkMonitorFocus, deps: [{ token: i0.ElementRef }, { token: FocusMonitor }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.0.4\", type: CdkMonitorFocus, selector: \"[cdkMonitorElementFocus], [cdkMonitorSubtreeFocus]\", outputs: { cdkFocusChange: \"cdkFocusChange\" }, exportAs: [\"cdkMonitorFocus\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: CdkMonitorFocus, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkMonitorElementFocus], [cdkMonitorSubtreeFocus]',\n                    exportAs: 'cdkMonitorFocus',\n                }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: FocusMonitor }], propDecorators: { cdkFocusChange: [{\n                type: Output\n            }] } });\n\n/** CSS class applied to the document body when in black-on-white high-contrast mode. */\nconst BLACK_ON_WHITE_CSS_CLASS = 'cdk-high-contrast-black-on-white';\n/** CSS class applied to the document body when in white-on-black high-contrast mode. */\nconst WHITE_ON_BLACK_CSS_CLASS = 'cdk-high-contrast-white-on-black';\n/** CSS class applied to the document body when in high-contrast mode. */\nconst HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS = 'cdk-high-contrast-active';\n/**\n * Service to determine whether the browser is currently in a high-contrast-mode environment.\n *\n * Microsoft Windows supports an accessibility feature called \"High Contrast Mode\". This mode\n * changes the appearance of all applications, including web applications, to dramatically increase\n * contrast.\n *\n * IE, Edge, and Firefox currently support this mode. Chrome does not support Windows High Contrast\n * Mode. This service does not detect high-contrast mode as added by the Chrome \"High Contrast\"\n * browser extension.\n */\nclass HighContrastModeDetector {\n    constructor(_platform, document) {\n        this._platform = _platform;\n        this._document = document;\n        this._breakpointSubscription = inject(BreakpointObserver)\n            .observe('(forced-colors: active)')\n            .subscribe(() => {\n            if (this._hasCheckedHighContrastMode) {\n                this._hasCheckedHighContrastMode = false;\n                this._applyBodyHighContrastModeCssClasses();\n            }\n        });\n    }\n    /** Gets the current high-contrast-mode for the page. */\n    getHighContrastMode() {\n        if (!this._platform.isBrowser) {\n            return 0 /* HighContrastMode.NONE */;\n        }\n        // Create a test element with an arbitrary background-color that is neither black nor\n        // white; high-contrast mode will coerce the color to either black or white. Also ensure that\n        // appending the test element to the DOM does not affect layout by absolutely positioning it\n        const testElement = this._document.createElement('div');\n        testElement.style.backgroundColor = 'rgb(1,2,3)';\n        testElement.style.position = 'absolute';\n        this._document.body.appendChild(testElement);\n        // Get the computed style for the background color, collapsing spaces to normalize between\n        // browsers. Once we get this color, we no longer need the test element. Access the `window`\n        // via the document so we can fake it in tests. Note that we have extra null checks, because\n        // this logic will likely run during app bootstrap and throwing can break the entire app.\n        const documentWindow = this._document.defaultView || window;\n        const computedStyle = documentWindow && documentWindow.getComputedStyle\n            ? documentWindow.getComputedStyle(testElement)\n            : null;\n        const computedColor = ((computedStyle && computedStyle.backgroundColor) || '').replace(/ /g, '');\n        testElement.remove();\n        switch (computedColor) {\n            // Pre Windows 11 dark theme.\n            case 'rgb(0,0,0)':\n            // Windows 11 dark themes.\n            case 'rgb(45,50,54)':\n            case 'rgb(32,32,32)':\n                return 2 /* HighContrastMode.WHITE_ON_BLACK */;\n            // Pre Windows 11 light theme.\n            case 'rgb(255,255,255)':\n            // Windows 11 light theme.\n            case 'rgb(255,250,239)':\n                return 1 /* HighContrastMode.BLACK_ON_WHITE */;\n        }\n        return 0 /* HighContrastMode.NONE */;\n    }\n    ngOnDestroy() {\n        this._breakpointSubscription.unsubscribe();\n    }\n    /** Applies CSS classes indicating high-contrast mode to document body (browser-only). */\n    _applyBodyHighContrastModeCssClasses() {\n        if (!this._hasCheckedHighContrastMode && this._platform.isBrowser && this._document.body) {\n            const bodyClasses = this._document.body.classList;\n            bodyClasses.remove(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS, BLACK_ON_WHITE_CSS_CLASS, WHITE_ON_BLACK_CSS_CLASS);\n            this._hasCheckedHighContrastMode = true;\n            const mode = this.getHighContrastMode();\n            if (mode === 1 /* HighContrastMode.BLACK_ON_WHITE */) {\n                bodyClasses.add(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS, BLACK_ON_WHITE_CSS_CLASS);\n            }\n            else if (mode === 2 /* HighContrastMode.WHITE_ON_BLACK */) {\n                bodyClasses.add(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS, WHITE_ON_BLACK_CSS_CLASS);\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: HighContrastModeDetector, deps: [{ token: i1.Platform }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: HighContrastModeDetector, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: HighContrastModeDetector, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: i1.Platform }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }] });\n\nclass A11yModule {\n    constructor(highContrastModeDetector) {\n        highContrastModeDetector._applyBodyHighContrastModeCssClasses();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: A11yModule, deps: [{ token: HighContrastModeDetector }], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.0.4\", ngImport: i0, type: A11yModule, declarations: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus], imports: [ObserversModule], exports: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: A11yModule, imports: [ObserversModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: A11yModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ObserversModule],\n                    declarations: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus],\n                    exports: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus],\n                }]\n        }], ctorParameters: () => [{ type: HighContrastModeDetector }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { A11yModule, ActiveDescendantKeyManager, AriaDescriber, CDK_DESCRIBEDBY_HOST_ATTRIBUTE, CDK_DESCRIBEDBY_ID_PREFIX, CdkAriaLive, CdkMonitorFocus, CdkTrapFocus, ConfigurableFocusTrap, ConfigurableFocusTrapFactory, EventListenerFocusTrapInertStrategy, FOCUS_MONITOR_DEFAULT_OPTIONS, FOCUS_TRAP_INERT_STRATEGY, FocusKeyManager, FocusMonitor, FocusTrap, FocusTrapFactory, HighContrastModeDetector, INPUT_MODALITY_DETECTOR_DEFAULT_OPTIONS, INPUT_MODALITY_DETECTOR_OPTIONS, InputModalityDetector, InteractivityChecker, IsFocusableConfig, LIVE_ANNOUNCER_DEFAULT_OPTIONS, LIVE_ANNOUNCER_ELEMENT_TOKEN, LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY, ListKeyManager, LiveAnnouncer, MESSAGES_CONTAINER_ID, addAriaReferencedId, getAriaReferenceIds, isFakeMousedownFromScreenReader, isFakeTouchstartFromScreenReader, removeAriaReferencedId };\n","import * as i0 from '@angular/core';\nimport { InjectionToken, inject, EventEmitter, Injectable, Optional, Inject, Directive, Output, Input, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * Injection token used to inject the document into Directionality.\n * This is used so that the value can be faked in tests.\n *\n * We can't use the real document in tests because changing the real `dir` causes geometry-based\n * tests in Safari to fail.\n *\n * We also can't re-provide the DOCUMENT token from platform-browser because the unit tests\n * themselves use things like `querySelector` in test code.\n *\n * This token is defined in a separate file from Directionality as a workaround for\n * https://github.com/angular/angular/issues/22559\n *\n * @docs-private\n */\nconst DIR_DOCUMENT = new InjectionToken('cdk-dir-doc', {\n    providedIn: 'root',\n    factory: DIR_DOCUMENT_FACTORY,\n});\n/** @docs-private */\nfunction DIR_DOCUMENT_FACTORY() {\n    return inject(DOCUMENT);\n}\n\n/** Regex that matches locales with an RTL script. Taken from `goog.i18n.bidi.isRtlLanguage`. */\nconst RTL_LOCALE_PATTERN = /^(ar|ckb|dv|he|iw|fa|nqo|ps|sd|ug|ur|yi|.*[-_](Adlm|Arab|Hebr|Nkoo|Rohg|Thaa))(?!.*[-_](Latn|Cyrl)($|-|_))($|-|_)/i;\n/** Resolves a string value to a specific direction. */\nfunction _resolveDirectionality(rawValue) {\n    const value = rawValue?.toLowerCase() || '';\n    if (value === 'auto' && typeof navigator !== 'undefined' && navigator?.language) {\n        return RTL_LOCALE_PATTERN.test(navigator.language) ? 'rtl' : 'ltr';\n    }\n    return value === 'rtl' ? 'rtl' : 'ltr';\n}\n/**\n * The directionality (LTR / RTL) context for the application (or a subtree of it).\n * Exposes the current direction and a stream of direction changes.\n */\nclass Directionality {\n    constructor(_document) {\n        /** The current 'ltr' or 'rtl' value. */\n        this.value = 'ltr';\n        /** Stream that emits whenever the 'ltr' / 'rtl' state changes. */\n        this.change = new EventEmitter();\n        if (_document) {\n            const bodyDir = _document.body ? _document.body.dir : null;\n            const htmlDir = _document.documentElement ? _document.documentElement.dir : null;\n            this.value = _resolveDirectionality(bodyDir || htmlDir || 'ltr');\n        }\n    }\n    ngOnDestroy() {\n        this.change.complete();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: Directionality, deps: [{ token: DIR_DOCUMENT, optional: true }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: Directionality, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: Directionality, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [DIR_DOCUMENT]\n                }] }] });\n\n/**\n * Directive to listen for changes of direction of part of the DOM.\n *\n * Provides itself as Directionality such that descendant directives only need to ever inject\n * Directionality to get the closest direction.\n */\nclass Dir {\n    constructor() {\n        /** Normalized direction that accounts for invalid/unsupported values. */\n        this._dir = 'ltr';\n        /** Whether the `value` has been set to its initial value. */\n        this._isInitialized = false;\n        /** Event emitted when the direction changes. */\n        this.change = new EventEmitter();\n    }\n    /** @docs-private */\n    get dir() {\n        return this._dir;\n    }\n    set dir(value) {\n        const previousValue = this._dir;\n        // Note: `_resolveDirectionality` resolves the language based on the browser's language,\n        // whereas the browser does it based on the content of the element. Since doing so based\n        // on the content can be expensive, for now we're doing the simpler matching.\n        this._dir = _resolveDirectionality(value);\n        this._rawDir = value;\n        if (previousValue !== this._dir && this._isInitialized) {\n            this.change.emit(this._dir);\n        }\n    }\n    /** Current layout direction of the element. */\n    get value() {\n        return this.dir;\n    }\n    /** Initialize once default value has been set. */\n    ngAfterContentInit() {\n        this._isInitialized = true;\n    }\n    ngOnDestroy() {\n        this.change.complete();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: Dir, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.0.4\", type: Dir, selector: \"[dir]\", inputs: { dir: \"dir\" }, outputs: { change: \"dirChange\" }, host: { properties: { \"attr.dir\": \"_rawDir\" } }, providers: [{ provide: Directionality, useExisting: Dir }], exportAs: [\"dir\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: Dir, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[dir]',\n                    providers: [{ provide: Directionality, useExisting: Dir }],\n                    host: { '[attr.dir]': '_rawDir' },\n                    exportAs: 'dir',\n                }]\n        }], propDecorators: { change: [{\n                type: Output,\n                args: ['dirChange']\n            }], dir: [{\n                type: Input\n            }] } });\n\nclass BidiModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: BidiModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.0.4\", ngImport: i0, type: BidiModule, declarations: [Dir], exports: [Dir] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: BidiModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: BidiModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [Dir],\n                    declarations: [Dir],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BidiModule, DIR_DOCUMENT, Dir, Directionality };\n","import { ElementRef } from '@angular/core';\n\n/** Coerces a data-bound value (typically a string) to a boolean. */\nfunction coerceBooleanProperty(value) {\n    return value != null && `${value}` !== 'false';\n}\n\nfunction coerceNumberProperty(value, fallbackValue = 0) {\n    return _isNumberValue(value) ? Number(value) : fallbackValue;\n}\n/**\n * Whether the provided value is considered a number.\n * @docs-private\n */\nfunction _isNumberValue(value) {\n    // parseFloat(value) handles most of the cases we're interested in (it treats null, empty string,\n    // and other non-number values as NaN, where Number just uses 0) but it considers the string\n    // '123hello' to be a valid number. Therefore we also check if Number(value) is NaN.\n    return !isNaN(parseFloat(value)) && !isNaN(Number(value));\n}\n\nfunction coerceArray(value) {\n    return Array.isArray(value) ? value : [value];\n}\n\n/** Coerces a value to a CSS pixel value. */\nfunction coerceCssPixelValue(value) {\n    if (value == null) {\n        return '';\n    }\n    return typeof value === 'string' ? value : `${value}px`;\n}\n\n/**\n * Coerces an ElementRef or an Element into an element.\n * Useful for APIs that can accept either a ref or the native element itself.\n */\nfunction coerceElement(elementOrRef) {\n    return elementOrRef instanceof ElementRef ? elementOrRef.nativeElement : elementOrRef;\n}\n\n/**\n * Coerces a value to an array of trimmed non-empty strings.\n * Any input that is not an array, `null` or `undefined` will be turned into a string\n * via `toString()` and subsequently split with the given separator.\n * `null` and `undefined` will result in an empty array.\n * This results in the following outcomes:\n * - `null` -&gt; `[]`\n * - `[null]` -&gt; `[\"null\"]`\n * - `[\"a\", \"b \", \" \"]` -&gt; `[\"a\", \"b\"]`\n * - `[1, [2, 3]]` -&gt; `[\"1\", \"2,3\"]`\n * - `[{ a: 0 }]` -&gt; `[\"[object Object]\"]`\n * - `{ a: 0 }` -&gt; `[\"[object\", \"Object]\"]`\n *\n * Useful for defining CSS classes or table columns.\n * @param value the value to coerce into an array of strings\n * @param separator split-separator if value isn't an array\n */\nfunction coerceStringArray(value, separator = /\\s+/) {\n    const result = [];\n    if (value != null) {\n        const sourceValues = Array.isArray(value) ? value : `${value}`.split(separator);\n        for (const sourceValue of sourceValues) {\n            const trimmedString = `${sourceValue}`.trim();\n            if (trimmedString) {\n                result.push(trimmedString);\n            }\n        }\n    }\n    return result;\n}\n\nexport { _isNumberValue, coerceArray, coerceBooleanProperty, coerceCssPixelValue, coerceElement, coerceNumberProperty, coerceStringArray };\n","import { ConnectableObservable, isObservable, of, Subject } from 'rxjs';\nimport * as i0 from '@angular/core';\nimport { Injectable, InjectionToken } from '@angular/core';\n\nclass DataSource {\n}\n/** Checks whether an object is a data source. */\nfunction isDataSource(value) {\n    // Check if the value is a DataSource by observing if it has a connect function. Cannot\n    // be checked as an `instanceof DataSource` since people could create their own sources\n    // that match the interface, but don't extend DataSource. We also can't use `isObservable`\n    // here, because of some internal apps.\n    return value && typeof value.connect === 'function' && !(value instanceof ConnectableObservable);\n}\n\n/** DataSource wrapper for a native array. */\nclass ArrayDataSource extends DataSource {\n    constructor(_data) {\n        super();\n        this._data = _data;\n    }\n    connect() {\n        return isObservable(this._data) ? this._data : of(this._data);\n    }\n    disconnect() { }\n}\n\n/**\n * A repeater that destroys views when they are removed from a\n * {@link ViewContainerRef}. When new items are inserted into the container,\n * the repeater will always construct a new embedded view for each item.\n *\n * @template T The type for the embedded view's $implicit property.\n * @template R The type for the item in each IterableDiffer change record.\n * @template C The type for the context passed to each embedded view.\n */\nclass _DisposeViewRepeaterStrategy {\n    applyChanges(changes, viewContainerRef, itemContextFactory, itemValueResolver, itemViewChanged) {\n        changes.forEachOperation((record, adjustedPreviousIndex, currentIndex) => {\n            let view;\n            let operation;\n            if (record.previousIndex == null) {\n                const insertContext = itemContextFactory(record, adjustedPreviousIndex, currentIndex);\n                view = viewContainerRef.createEmbeddedView(insertContext.templateRef, insertContext.context, insertContext.index);\n                operation = 1 /* _ViewRepeaterOperation.INSERTED */;\n            }\n            else if (currentIndex == null) {\n                viewContainerRef.remove(adjustedPreviousIndex);\n                operation = 3 /* _ViewRepeaterOperation.REMOVED */;\n            }\n            else {\n                view = viewContainerRef.get(adjustedPreviousIndex);\n                viewContainerRef.move(view, currentIndex);\n                operation = 2 /* _ViewRepeaterOperation.MOVED */;\n            }\n            if (itemViewChanged) {\n                itemViewChanged({\n                    context: view?.context,\n                    operation,\n                    record,\n                });\n            }\n        });\n    }\n    detach() { }\n}\n\n/**\n * A repeater that caches views when they are removed from a\n * {@link ViewContainerRef}. When new items are inserted into the container,\n * the repeater will reuse one of the cached views instead of creating a new\n * embedded view. Recycling cached views reduces the quantity of expensive DOM\n * inserts.\n *\n * @template T The type for the embedded view's $implicit property.\n * @template R The type for the item in each IterableDiffer change record.\n * @template C The type for the context passed to each embedded view.\n */\nclass _RecycleViewRepeaterStrategy {\n    constructor() {\n        /**\n         * The size of the cache used to store unused views.\n         * Setting the cache size to `0` will disable caching. Defaults to 20 views.\n         */\n        this.viewCacheSize = 20;\n        /**\n         * View cache that stores embedded view instances that have been previously stamped out,\n         * but don't are not currently rendered. The view repeater will reuse these views rather than\n         * creating brand new ones.\n         *\n         * TODO(michaeljamesparsons) Investigate whether using a linked list would improve performance.\n         */\n        this._viewCache = [];\n    }\n    /** Apply changes to the DOM. */\n    applyChanges(changes, viewContainerRef, itemContextFactory, itemValueResolver, itemViewChanged) {\n        // Rearrange the views to put them in the right location.\n        changes.forEachOperation((record, adjustedPreviousIndex, currentIndex) => {\n            let view;\n            let operation;\n            if (record.previousIndex == null) {\n                // Item added.\n                const viewArgsFactory = () => itemContextFactory(record, adjustedPreviousIndex, currentIndex);\n                view = this._insertView(viewArgsFactory, currentIndex, viewContainerRef, itemValueResolver(record));\n                operation = view ? 1 /* _ViewRepeaterOperation.INSERTED */ : 0 /* _ViewRepeaterOperation.REPLACED */;\n            }\n            else if (currentIndex == null) {\n                // Item removed.\n                this._detachAndCacheView(adjustedPreviousIndex, viewContainerRef);\n                operation = 3 /* _ViewRepeaterOperation.REMOVED */;\n            }\n            else {\n                // Item moved.\n                view = this._moveView(adjustedPreviousIndex, currentIndex, viewContainerRef, itemValueResolver(record));\n                operation = 2 /* _ViewRepeaterOperation.MOVED */;\n            }\n            if (itemViewChanged) {\n                itemViewChanged({\n                    context: view?.context,\n                    operation,\n                    record,\n                });\n            }\n        });\n    }\n    detach() {\n        for (const view of this._viewCache) {\n            view.destroy();\n        }\n        this._viewCache = [];\n    }\n    /**\n     * Inserts a view for a new item, either from the cache or by creating a new\n     * one. Returns `undefined` if the item was inserted into a cached view.\n     */\n    _insertView(viewArgsFactory, currentIndex, viewContainerRef, value) {\n        const cachedView = this._insertViewFromCache(currentIndex, viewContainerRef);\n        if (cachedView) {\n            cachedView.context.$implicit = value;\n            return undefined;\n        }\n        const viewArgs = viewArgsFactory();\n        return viewContainerRef.createEmbeddedView(viewArgs.templateRef, viewArgs.context, viewArgs.index);\n    }\n    /** Detaches the view at the given index and inserts into the view cache. */\n    _detachAndCacheView(index, viewContainerRef) {\n        const detachedView = viewContainerRef.detach(index);\n        this._maybeCacheView(detachedView, viewContainerRef);\n    }\n    /** Moves view at the previous index to the current index. */\n    _moveView(adjustedPreviousIndex, currentIndex, viewContainerRef, value) {\n        const view = viewContainerRef.get(adjustedPreviousIndex);\n        viewContainerRef.move(view, currentIndex);\n        view.context.$implicit = value;\n        return view;\n    }\n    /**\n     * Cache the given detached view. If the cache is full, the view will be\n     * destroyed.\n     */\n    _maybeCacheView(view, viewContainerRef) {\n        if (this._viewCache.length < this.viewCacheSize) {\n            this._viewCache.push(view);\n        }\n        else {\n            const index = viewContainerRef.indexOf(view);\n            // The host component could remove views from the container outside of\n            // the view repeater. It's unlikely this will occur, but just in case,\n            // destroy the view on its own, otherwise destroy it through the\n            // container to ensure that all the references are removed.\n            if (index === -1) {\n                view.destroy();\n            }\n            else {\n                viewContainerRef.remove(index);\n            }\n        }\n    }\n    /** Inserts a recycled view from the cache at the given index. */\n    _insertViewFromCache(index, viewContainerRef) {\n        const cachedView = this._viewCache.pop();\n        if (cachedView) {\n            viewContainerRef.insert(cachedView, index);\n        }\n        return cachedView || null;\n    }\n}\n\n/**\n * Class to be used to power selecting one or more options from a list.\n */\nclass SelectionModel {\n    /** Selected values. */\n    get selected() {\n        if (!this._selected) {\n            this._selected = Array.from(this._selection.values());\n        }\n        return this._selected;\n    }\n    constructor(_multiple = false, initiallySelectedValues, _emitChanges = true, compareWith) {\n        this._multiple = _multiple;\n        this._emitChanges = _emitChanges;\n        this.compareWith = compareWith;\n        /** Currently-selected values. */\n        this._selection = new Set();\n        /** Keeps track of the deselected options that haven't been emitted by the change event. */\n        this._deselectedToEmit = [];\n        /** Keeps track of the selected options that haven't been emitted by the change event. */\n        this._selectedToEmit = [];\n        /** Event emitted when the value has changed. */\n        this.changed = new Subject();\n        if (initiallySelectedValues && initiallySelectedValues.length) {\n            if (_multiple) {\n                initiallySelectedValues.forEach(value => this._markSelected(value));\n            }\n            else {\n                this._markSelected(initiallySelectedValues[0]);\n            }\n            // Clear the array in order to avoid firing the change event for preselected values.\n            this._selectedToEmit.length = 0;\n        }\n    }\n    /**\n     * Selects a value or an array of values.\n     * @param values The values to select\n     * @return Whether the selection changed as a result of this call\n     * @breaking-change 16.0.0 make return type boolean\n     */\n    select(...values) {\n        this._verifyValueAssignment(values);\n        values.forEach(value => this._markSelected(value));\n        const changed = this._hasQueuedChanges();\n        this._emitChangeEvent();\n        return changed;\n    }\n    /**\n     * Deselects a value or an array of values.\n     * @param values The values to deselect\n     * @return Whether the selection changed as a result of this call\n     * @breaking-change 16.0.0 make return type boolean\n     */\n    deselect(...values) {\n        this._verifyValueAssignment(values);\n        values.forEach(value => this._unmarkSelected(value));\n        const changed = this._hasQueuedChanges();\n        this._emitChangeEvent();\n        return changed;\n    }\n    /**\n     * Sets the selected values\n     * @param values The new selected values\n     * @return Whether the selection changed as a result of this call\n     * @breaking-change 16.0.0 make return type boolean\n     */\n    setSelection(...values) {\n        this._verifyValueAssignment(values);\n        const oldValues = this.selected;\n        const newSelectedSet = new Set(values);\n        values.forEach(value => this._markSelected(value));\n        oldValues\n            .filter(value => !newSelectedSet.has(value))\n            .forEach(value => this._unmarkSelected(value));\n        const changed = this._hasQueuedChanges();\n        this._emitChangeEvent();\n        return changed;\n    }\n    /**\n     * Toggles a value between selected and deselected.\n     * @param value The value to toggle\n     * @return Whether the selection changed as a result of this call\n     * @breaking-change 16.0.0 make return type boolean\n     */\n    toggle(value) {\n        return this.isSelected(value) ? this.deselect(value) : this.select(value);\n    }\n    /**\n     * Clears all of the selected values.\n     * @param flushEvent Whether to flush the changes in an event.\n     *   If false, the changes to the selection will be flushed along with the next event.\n     * @return Whether the selection changed as a result of this call\n     * @breaking-change 16.0.0 make return type boolean\n     */\n    clear(flushEvent = true) {\n        this._unmarkAll();\n        const changed = this._hasQueuedChanges();\n        if (flushEvent) {\n            this._emitChangeEvent();\n        }\n        return changed;\n    }\n    /**\n     * Determines whether a value is selected.\n     */\n    isSelected(value) {\n        return this._selection.has(this._getConcreteValue(value));\n    }\n    /**\n     * Determines whether the model does not have a value.\n     */\n    isEmpty() {\n        return this._selection.size === 0;\n    }\n    /**\n     * Determines whether the model has a value.\n     */\n    hasValue() {\n        return !this.isEmpty();\n    }\n    /**\n     * Sorts the selected values based on a predicate function.\n     */\n    sort(predicate) {\n        if (this._multiple && this.selected) {\n            this._selected.sort(predicate);\n        }\n    }\n    /**\n     * Gets whether multiple values can be selected.\n     */\n    isMultipleSelection() {\n        return this._multiple;\n    }\n    /** Emits a change event and clears the records of selected and deselected values. */\n    _emitChangeEvent() {\n        // Clear the selected values so they can be re-cached.\n        this._selected = null;\n        if (this._selectedToEmit.length || this._deselectedToEmit.length) {\n            this.changed.next({\n                source: this,\n                added: this._selectedToEmit,\n                removed: this._deselectedToEmit,\n            });\n            this._deselectedToEmit = [];\n            this._selectedToEmit = [];\n        }\n    }\n    /** Selects a value. */\n    _markSelected(value) {\n        value = this._getConcreteValue(value);\n        if (!this.isSelected(value)) {\n            if (!this._multiple) {\n                this._unmarkAll();\n            }\n            if (!this.isSelected(value)) {\n                this._selection.add(value);\n            }\n            if (this._emitChanges) {\n                this._selectedToEmit.push(value);\n            }\n        }\n    }\n    /** Deselects a value. */\n    _unmarkSelected(value) {\n        value = this._getConcreteValue(value);\n        if (this.isSelected(value)) {\n            this._selection.delete(value);\n            if (this._emitChanges) {\n                this._deselectedToEmit.push(value);\n            }\n        }\n    }\n    /** Clears out the selected values. */\n    _unmarkAll() {\n        if (!this.isEmpty()) {\n            this._selection.forEach(value => this._unmarkSelected(value));\n        }\n    }\n    /**\n     * Verifies the value assignment and throws an error if the specified value array is\n     * including multiple values while the selection model is not supporting multiple values.\n     */\n    _verifyValueAssignment(values) {\n        if (values.length > 1 && !this._multiple && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMultipleValuesInSingleSelectionError();\n        }\n    }\n    /** Whether there are queued up change to be emitted. */\n    _hasQueuedChanges() {\n        return !!(this._deselectedToEmit.length || this._selectedToEmit.length);\n    }\n    /** Returns a value that is comparable to inputValue by applying compareWith function, returns the same inputValue otherwise. */\n    _getConcreteValue(inputValue) {\n        if (!this.compareWith) {\n            return inputValue;\n        }\n        else {\n            for (let selectedValue of this._selection) {\n                if (this.compareWith(inputValue, selectedValue)) {\n                    return selectedValue;\n                }\n            }\n            return inputValue;\n        }\n    }\n}\n/**\n * Returns an error that reports that multiple values are passed into a selection model\n * with a single value.\n * @docs-private\n */\nfunction getMultipleValuesInSingleSelectionError() {\n    return Error('Cannot pass multiple values into SelectionModel with single-value mode.');\n}\n\n/**\n * Class to coordinate unique selection based on name.\n * Intended to be consumed as an Angular service.\n * This service is needed because native radio change events are only fired on the item currently\n * being selected, and we still need to uncheck the previous selection.\n *\n * This service does not *store* any IDs and names because they may change at any time, so it is\n * less error-prone if they are simply passed through when the events occur.\n */\nclass UniqueSelectionDispatcher {\n    constructor() {\n        this._listeners = [];\n    }\n    /**\n     * Notify other items that selection for the given name has been set.\n     * @param id ID of the item.\n     * @param name Name of the item.\n     */\n    notify(id, name) {\n        for (let listener of this._listeners) {\n            listener(id, name);\n        }\n    }\n    /**\n     * Listen for future changes to item selection.\n     * @return Function used to deregister listener\n     */\n    listen(listener) {\n        this._listeners.push(listener);\n        return () => {\n            this._listeners = this._listeners.filter((registered) => {\n                return listener !== registered;\n            });\n        };\n    }\n    ngOnDestroy() {\n        this._listeners = [];\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: UniqueSelectionDispatcher, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: UniqueSelectionDispatcher, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: UniqueSelectionDispatcher, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\n/**\n * Injection token for {@link _ViewRepeater}. This token is for use by Angular Material only.\n * @docs-private\n */\nconst _VIEW_REPEATER_STRATEGY = new InjectionToken('_ViewRepeater');\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ArrayDataSource, DataSource, SelectionModel, UniqueSelectionDispatcher, _DisposeViewRepeaterStrategy, _RecycleViewRepeaterStrategy, _VIEW_REPEATER_STRATEGY, getMultipleValuesInSingleSelectionError, isDataSource };\n","import * as i0 from '@angular/core';\nimport { Injectable, Inject, InjectionToken, booleanAttribute, Directive, Optional, SkipSelf, Input, EventEmitter, Self, ContentChildren, ContentChild, Output, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport * as i1 from '@angular/cdk/scrolling';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { _getEventTarget, normalizePassiveListenerOptions, _getShadowRoot } from '@angular/cdk/platform';\nimport { coerceElement, coerceNumberProperty, coerceArray } from '@angular/cdk/coercion';\nimport { isFakeTouchstartFromScreenReader, isFakeMousedownFromScreenReader } from '@angular/cdk/a11y';\nimport { Subject, Subscription, interval, animationFrameScheduler, Observable, merge } from 'rxjs';\nimport { takeUntil, map, take, startWith, tap, switchMap } from 'rxjs/operators';\nimport * as i1$1 from '@angular/cdk/bidi';\n\n/**\n * Shallow-extends a stylesheet object with another stylesheet-like object.\n * Note that the keys in `source` have to be dash-cased.\n * @docs-private\n */\nfunction extendStyles(dest, source, importantProperties) {\n    for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n            const value = source[key];\n            if (value) {\n                dest.setProperty(key, value, importantProperties?.has(key) ? 'important' : '');\n            }\n            else {\n                dest.removeProperty(key);\n            }\n        }\n    }\n    return dest;\n}\n/**\n * Toggles whether the native drag interactions should be enabled for an element.\n * @param element Element on which to toggle the drag interactions.\n * @param enable Whether the drag interactions should be enabled.\n * @docs-private\n */\nfunction toggleNativeDragInteractions(element, enable) {\n    const userSelect = enable ? '' : 'none';\n    extendStyles(element.style, {\n        'touch-action': enable ? '' : 'none',\n        '-webkit-user-drag': enable ? '' : 'none',\n        '-webkit-tap-highlight-color': enable ? '' : 'transparent',\n        'user-select': userSelect,\n        '-ms-user-select': userSelect,\n        '-webkit-user-select': userSelect,\n        '-moz-user-select': userSelect,\n    });\n}\n/**\n * Toggles whether an element is visible while preserving its dimensions.\n * @param element Element whose visibility to toggle\n * @param enable Whether the element should be visible.\n * @param importantProperties Properties to be set as `!important`.\n * @docs-private\n */\nfunction toggleVisibility(element, enable, importantProperties) {\n    extendStyles(element.style, {\n        position: enable ? '' : 'fixed',\n        top: enable ? '' : '0',\n        opacity: enable ? '' : '0',\n        left: enable ? '' : '-999em',\n    }, importantProperties);\n}\n/**\n * Combines a transform string with an optional other transform\n * that exited before the base transform was applied.\n */\nfunction combineTransforms(transform, initialTransform) {\n    return initialTransform && initialTransform != 'none'\n        ? transform + ' ' + initialTransform\n        : transform;\n}\n\n/** Parses a CSS time value to milliseconds. */\nfunction parseCssTimeUnitsToMs(value) {\n    // Some browsers will return it in seconds, whereas others will return milliseconds.\n    const multiplier = value.toLowerCase().indexOf('ms') > -1 ? 1 : 1000;\n    return parseFloat(value) * multiplier;\n}\n/** Gets the transform transition duration, including the delay, of an element in milliseconds. */\nfunction getTransformTransitionDurationInMs(element) {\n    const computedStyle = getComputedStyle(element);\n    const transitionedProperties = parseCssPropertyValue(computedStyle, 'transition-property');\n    const property = transitionedProperties.find(prop => prop === 'transform' || prop === 'all');\n    // If there's no transition for `all` or `transform`, we shouldn't do anything.\n    if (!property) {\n        return 0;\n    }\n    // Get the index of the property that we're interested in and match\n    // it up to the same index in `transition-delay` and `transition-duration`.\n    const propertyIndex = transitionedProperties.indexOf(property);\n    const rawDurations = parseCssPropertyValue(computedStyle, 'transition-duration');\n    const rawDelays = parseCssPropertyValue(computedStyle, 'transition-delay');\n    return (parseCssTimeUnitsToMs(rawDurations[propertyIndex]) +\n        parseCssTimeUnitsToMs(rawDelays[propertyIndex]));\n}\n/** Parses out multiple values from a computed style into an array. */\nfunction parseCssPropertyValue(computedStyle, name) {\n    const value = computedStyle.getPropertyValue(name);\n    return value.split(',').map(part => part.trim());\n}\n\n/** Gets a mutable version of an element's bounding `ClientRect`. */\nfunction getMutableClientRect(element) {\n    const clientRect = element.getBoundingClientRect();\n    // We need to clone the `clientRect` here, because all the values on it are readonly\n    // and we need to be able to update them. Also we can't use a spread here, because\n    // the values on a `ClientRect` aren't own properties. See:\n    // https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect#Notes\n    return {\n        top: clientRect.top,\n        right: clientRect.right,\n        bottom: clientRect.bottom,\n        left: clientRect.left,\n        width: clientRect.width,\n        height: clientRect.height,\n        x: clientRect.x,\n        y: clientRect.y,\n    };\n}\n/**\n * Checks whether some coordinates are within a `ClientRect`.\n * @param clientRect ClientRect that is being checked.\n * @param x Coordinates along the X axis.\n * @param y Coordinates along the Y axis.\n */\nfunction isInsideClientRect(clientRect, x, y) {\n    const { top, bottom, left, right } = clientRect;\n    return y >= top && y <= bottom && x >= left && x <= right;\n}\n/**\n * Updates the top/left positions of a `ClientRect`, as well as their bottom/right counterparts.\n * @param clientRect `ClientRect` that should be updated.\n * @param top Amount to add to the `top` position.\n * @param left Amount to add to the `left` position.\n */\nfunction adjustClientRect(clientRect, top, left) {\n    clientRect.top += top;\n    clientRect.bottom = clientRect.top + clientRect.height;\n    clientRect.left += left;\n    clientRect.right = clientRect.left + clientRect.width;\n}\n/**\n * Checks whether the pointer coordinates are close to a ClientRect.\n * @param rect ClientRect to check against.\n * @param threshold Threshold around the ClientRect.\n * @param pointerX Coordinates along the X axis.\n * @param pointerY Coordinates along the Y axis.\n */\nfunction isPointerNearClientRect(rect, threshold, pointerX, pointerY) {\n    const { top, right, bottom, left, width, height } = rect;\n    const xThreshold = width * threshold;\n    const yThreshold = height * threshold;\n    return (pointerY > top - yThreshold &&\n        pointerY < bottom + yThreshold &&\n        pointerX > left - xThreshold &&\n        pointerX < right + xThreshold);\n}\n\n/** Keeps track of the scroll position and dimensions of the parents of an element. */\nclass ParentPositionTracker {\n    constructor(_document) {\n        this._document = _document;\n        /** Cached positions of the scrollable parent elements. */\n        this.positions = new Map();\n    }\n    /** Clears the cached positions. */\n    clear() {\n        this.positions.clear();\n    }\n    /** Caches the positions. Should be called at the beginning of a drag sequence. */\n    cache(elements) {\n        this.clear();\n        this.positions.set(this._document, {\n            scrollPosition: this.getViewportScrollPosition(),\n        });\n        elements.forEach(element => {\n            this.positions.set(element, {\n                scrollPosition: { top: element.scrollTop, left: element.scrollLeft },\n                clientRect: getMutableClientRect(element),\n            });\n        });\n    }\n    /** Handles scrolling while a drag is taking place. */\n    handleScroll(event) {\n        const target = _getEventTarget(event);\n        const cachedPosition = this.positions.get(target);\n        if (!cachedPosition) {\n            return null;\n        }\n        const scrollPosition = cachedPosition.scrollPosition;\n        let newTop;\n        let newLeft;\n        if (target === this._document) {\n            const viewportScrollPosition = this.getViewportScrollPosition();\n            newTop = viewportScrollPosition.top;\n            newLeft = viewportScrollPosition.left;\n        }\n        else {\n            newTop = target.scrollTop;\n            newLeft = target.scrollLeft;\n        }\n        const topDifference = scrollPosition.top - newTop;\n        const leftDifference = scrollPosition.left - newLeft;\n        // Go through and update the cached positions of the scroll\n        // parents that are inside the element that was scrolled.\n        this.positions.forEach((position, node) => {\n            if (position.clientRect && target !== node && target.contains(node)) {\n                adjustClientRect(position.clientRect, topDifference, leftDifference);\n            }\n        });\n        scrollPosition.top = newTop;\n        scrollPosition.left = newLeft;\n        return { top: topDifference, left: leftDifference };\n    }\n    /**\n     * Gets the scroll position of the viewport. Note that we use the scrollX and scrollY directly,\n     * instead of going through the `ViewportRuler`, because the first value the ruler looks at is\n     * the top/left offset of the `document.documentElement` which works for most cases, but breaks\n     * if the element is offset by something like the `BlockScrollStrategy`.\n     */\n    getViewportScrollPosition() {\n        return { top: window.scrollY, left: window.scrollX };\n    }\n}\n\n/** Creates a deep clone of an element. */\nfunction deepCloneNode(node) {\n    const clone = node.cloneNode(true);\n    const descendantsWithId = clone.querySelectorAll('[id]');\n    const nodeName = node.nodeName.toLowerCase();\n    // Remove the `id` to avoid having multiple elements with the same id on the page.\n    clone.removeAttribute('id');\n    for (let i = 0; i < descendantsWithId.length; i++) {\n        descendantsWithId[i].removeAttribute('id');\n    }\n    if (nodeName === 'canvas') {\n        transferCanvasData(node, clone);\n    }\n    else if (nodeName === 'input' || nodeName === 'select' || nodeName === 'textarea') {\n        transferInputData(node, clone);\n    }\n    transferData('canvas', node, clone, transferCanvasData);\n    transferData('input, textarea, select', node, clone, transferInputData);\n    return clone;\n}\n/** Matches elements between an element and its clone and allows for their data to be cloned. */\nfunction transferData(selector, node, clone, callback) {\n    const descendantElements = node.querySelectorAll(selector);\n    if (descendantElements.length) {\n        const cloneElements = clone.querySelectorAll(selector);\n        for (let i = 0; i < descendantElements.length; i++) {\n            callback(descendantElements[i], cloneElements[i]);\n        }\n    }\n}\n// Counter for unique cloned radio button names.\nlet cloneUniqueId = 0;\n/** Transfers the data of one input element to another. */\nfunction transferInputData(source, clone) {\n    // Browsers throw an error when assigning the value of a file input programmatically.\n    if (clone.type !== 'file') {\n        clone.value = source.value;\n    }\n    // Radio button `name` attributes must be unique for radio button groups\n    // otherwise original radio buttons can lose their checked state\n    // once the clone is inserted in the DOM.\n    if (clone.type === 'radio' && clone.name) {\n        clone.name = `mat-clone-${clone.name}-${cloneUniqueId++}`;\n    }\n}\n/** Transfers the data of one canvas element to another. */\nfunction transferCanvasData(source, clone) {\n    const context = clone.getContext('2d');\n    if (context) {\n        // In some cases `drawImage` can throw (e.g. if the canvas size is 0x0).\n        // We can't do much about it so just ignore the error.\n        try {\n            context.drawImage(source, 0, 0);\n        }\n        catch { }\n    }\n}\n\n/** Options that can be used to bind a passive event listener. */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({ passive: true });\n/** Options that can be used to bind an active event listener. */\nconst activeEventListenerOptions = normalizePassiveListenerOptions({ passive: false });\n/**\n * Time in milliseconds for which to ignore mouse events, after\n * receiving a touch event. Used to avoid doing double work for\n * touch devices where the browser fires fake mouse events, in\n * addition to touch events.\n */\nconst MOUSE_EVENT_IGNORE_TIME = 800;\n/** Inline styles to be set as `!important` while dragging. */\nconst dragImportantProperties = new Set([\n    // Needs to be important, because some `mat-table` sets `position: sticky !important`. See #22781.\n    'position',\n]);\n/**\n * Reference to a draggable item. Used to manipulate or dispose of the item.\n */\nclass DragRef {\n    /** Whether starting to drag this element is disabled. */\n    get disabled() {\n        return this._disabled || !!(this._dropContainer && this._dropContainer.disabled);\n    }\n    set disabled(value) {\n        if (value !== this._disabled) {\n            this._disabled = value;\n            this._toggleNativeDragInteractions();\n            this._handles.forEach(handle => toggleNativeDragInteractions(handle, value));\n        }\n    }\n    constructor(element, _config, _document, _ngZone, _viewportRuler, _dragDropRegistry) {\n        this._config = _config;\n        this._document = _document;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._dragDropRegistry = _dragDropRegistry;\n        /**\n         * CSS `transform` applied to the element when it isn't being dragged. We need a\n         * passive transform in order for the dragged element to retain its new position\n         * after the user has stopped dragging and because we need to know the relative\n         * position in case they start dragging again. This corresponds to `element.style.transform`.\n         */\n        this._passiveTransform = { x: 0, y: 0 };\n        /** CSS `transform` that is applied to the element while it's being dragged. */\n        this._activeTransform = { x: 0, y: 0 };\n        /**\n         * Whether the dragging sequence has been started. Doesn't\n         * necessarily mean that the element has been moved.\n         */\n        this._hasStartedDragging = false;\n        /** Emits when the item is being moved. */\n        this._moveEvents = new Subject();\n        /** Subscription to pointer movement events. */\n        this._pointerMoveSubscription = Subscription.EMPTY;\n        /** Subscription to the event that is dispatched when the user lifts their pointer. */\n        this._pointerUpSubscription = Subscription.EMPTY;\n        /** Subscription to the viewport being scrolled. */\n        this._scrollSubscription = Subscription.EMPTY;\n        /** Subscription to the viewport being resized. */\n        this._resizeSubscription = Subscription.EMPTY;\n        /** Cached reference to the boundary element. */\n        this._boundaryElement = null;\n        /** Whether the native dragging interactions have been enabled on the root element. */\n        this._nativeInteractionsEnabled = true;\n        /** Elements that can be used to drag the draggable item. */\n        this._handles = [];\n        /** Registered handles that are currently disabled. */\n        this._disabledHandles = new Set();\n        /** Layout direction of the item. */\n        this._direction = 'ltr';\n        /**\n         * Amount of milliseconds to wait after the user has put their\n         * pointer down before starting to drag the element.\n         */\n        this.dragStartDelay = 0;\n        this._disabled = false;\n        /** Emits as the drag sequence is being prepared. */\n        this.beforeStarted = new Subject();\n        /** Emits when the user starts dragging the item. */\n        this.started = new Subject();\n        /** Emits when the user has released a drag item, before any animations have started. */\n        this.released = new Subject();\n        /** Emits when the user stops dragging an item in the container. */\n        this.ended = new Subject();\n        /** Emits when the user has moved the item into a new container. */\n        this.entered = new Subject();\n        /** Emits when the user removes the item its container by dragging it into another container. */\n        this.exited = new Subject();\n        /** Emits when the user drops the item inside a container. */\n        this.dropped = new Subject();\n        /**\n         * Emits as the user is dragging the item. Use with caution,\n         * because this event will fire for every pixel that the user has dragged.\n         */\n        this.moved = this._moveEvents;\n        /** Handler for the `mousedown`/`touchstart` events. */\n        this._pointerDown = (event) => {\n            this.beforeStarted.next();\n            // Delegate the event based on whether it started from a handle or the element itself.\n            if (this._handles.length) {\n                const targetHandle = this._getTargetHandle(event);\n                if (targetHandle && !this._disabledHandles.has(targetHandle) && !this.disabled) {\n                    this._initializeDragSequence(targetHandle, event);\n                }\n            }\n            else if (!this.disabled) {\n                this._initializeDragSequence(this._rootElement, event);\n            }\n        };\n        /** Handler that is invoked when the user moves their pointer after they've initiated a drag. */\n        this._pointerMove = (event) => {\n            const pointerPosition = this._getPointerPositionOnPage(event);\n            if (!this._hasStartedDragging) {\n                const distanceX = Math.abs(pointerPosition.x - this._pickupPositionOnPage.x);\n                const distanceY = Math.abs(pointerPosition.y - this._pickupPositionOnPage.y);\n                const isOverThreshold = distanceX + distanceY >= this._config.dragStartThreshold;\n                // Only start dragging after the user has moved more than the minimum distance in either\n                // direction. Note that this is preferable over doing something like `skip(minimumDistance)`\n                // in the `pointerMove` subscription, because we're not guaranteed to have one move event\n                // per pixel of movement (e.g. if the user moves their pointer quickly).\n                if (isOverThreshold) {\n                    const isDelayElapsed = Date.now() >= this._dragStartTime + this._getDragStartDelay(event);\n                    const container = this._dropContainer;\n                    if (!isDelayElapsed) {\n                        this._endDragSequence(event);\n                        return;\n                    }\n                    // Prevent other drag sequences from starting while something in the container is still\n                    // being dragged. This can happen while we're waiting for the drop animation to finish\n                    // and can cause errors, because some elements might still be moving around.\n                    if (!container || (!container.isDragging() && !container.isReceiving())) {\n                        // Prevent the default action as soon as the dragging sequence is considered as\n                        // \"started\" since waiting for the next event can allow the device to begin scrolling.\n                        event.preventDefault();\n                        this._hasStartedDragging = true;\n                        this._ngZone.run(() => this._startDragSequence(event));\n                    }\n                }\n                return;\n            }\n            // We prevent the default action down here so that we know that dragging has started. This is\n            // important for touch devices where doing this too early can unnecessarily block scrolling,\n            // if there's a dragging delay.\n            event.preventDefault();\n            const constrainedPointerPosition = this._getConstrainedPointerPosition(pointerPosition);\n            this._hasMoved = true;\n            this._lastKnownPointerPosition = pointerPosition;\n            this._updatePointerDirectionDelta(constrainedPointerPosition);\n            if (this._dropContainer) {\n                this._updateActiveDropContainer(constrainedPointerPosition, pointerPosition);\n            }\n            else {\n                // If there's a position constraint function, we want the element's top/left to be at the\n                // specific position on the page. Use the initial position as a reference if that's the case.\n                const offset = this.constrainPosition ? this._initialClientRect : this._pickupPositionOnPage;\n                const activeTransform = this._activeTransform;\n                activeTransform.x = constrainedPointerPosition.x - offset.x + this._passiveTransform.x;\n                activeTransform.y = constrainedPointerPosition.y - offset.y + this._passiveTransform.y;\n                this._applyRootElementTransform(activeTransform.x, activeTransform.y);\n            }\n            // Since this event gets fired for every pixel while dragging, we only\n            // want to fire it if the consumer opted into it. Also we have to\n            // re-enter the zone because we run all of the events on the outside.\n            if (this._moveEvents.observers.length) {\n                this._ngZone.run(() => {\n                    this._moveEvents.next({\n                        source: this,\n                        pointerPosition: constrainedPointerPosition,\n                        event,\n                        distance: this._getDragDistance(constrainedPointerPosition),\n                        delta: this._pointerDirectionDelta,\n                    });\n                });\n            }\n        };\n        /** Handler that is invoked when the user lifts their pointer up, after initiating a drag. */\n        this._pointerUp = (event) => {\n            this._endDragSequence(event);\n        };\n        /** Handles a native `dragstart` event. */\n        this._nativeDragStart = (event) => {\n            if (this._handles.length) {\n                const targetHandle = this._getTargetHandle(event);\n                if (targetHandle && !this._disabledHandles.has(targetHandle) && !this.disabled) {\n                    event.preventDefault();\n                }\n            }\n            else if (!this.disabled) {\n                // Usually this isn't necessary since the we prevent the default action in `pointerDown`,\n                // but some cases like dragging of links can slip through (see #24403).\n                event.preventDefault();\n            }\n        };\n        this.withRootElement(element).withParent(_config.parentDragRef || null);\n        this._parentPositions = new ParentPositionTracker(_document);\n        _dragDropRegistry.registerDragItem(this);\n    }\n    /**\n     * Returns the element that is being used as a placeholder\n     * while the current element is being dragged.\n     */\n    getPlaceholderElement() {\n        return this._placeholder;\n    }\n    /** Returns the root draggable element. */\n    getRootElement() {\n        return this._rootElement;\n    }\n    /**\n     * Gets the currently-visible element that represents the drag item.\n     * While dragging this is the placeholder, otherwise it's the root element.\n     */\n    getVisibleElement() {\n        return this.isDragging() ? this.getPlaceholderElement() : this.getRootElement();\n    }\n    /** Registers the handles that can be used to drag the element. */\n    withHandles(handles) {\n        this._handles = handles.map(handle => coerceElement(handle));\n        this._handles.forEach(handle => toggleNativeDragInteractions(handle, this.disabled));\n        this._toggleNativeDragInteractions();\n        // Delete any lingering disabled handles that may have been destroyed. Note that we re-create\n        // the set, rather than iterate over it and filter out the destroyed handles, because while\n        // the ES spec allows for sets to be modified while they're being iterated over, some polyfills\n        // use an array internally which may throw an error.\n        const disabledHandles = new Set();\n        this._disabledHandles.forEach(handle => {\n            if (this._handles.indexOf(handle) > -1) {\n                disabledHandles.add(handle);\n            }\n        });\n        this._disabledHandles = disabledHandles;\n        return this;\n    }\n    /**\n     * Registers the template that should be used for the drag preview.\n     * @param template Template that from which to stamp out the preview.\n     */\n    withPreviewTemplate(template) {\n        this._previewTemplate = template;\n        return this;\n    }\n    /**\n     * Registers the template that should be used for the drag placeholder.\n     * @param template Template that from which to stamp out the placeholder.\n     */\n    withPlaceholderTemplate(template) {\n        this._placeholderTemplate = template;\n        return this;\n    }\n    /**\n     * Sets an alternate drag root element. The root element is the element that will be moved as\n     * the user is dragging. Passing an alternate root element is useful when trying to enable\n     * dragging on an element that you might not have access to.\n     */\n    withRootElement(rootElement) {\n        const element = coerceElement(rootElement);\n        if (element !== this._rootElement) {\n            if (this._rootElement) {\n                this._removeRootElementListeners(this._rootElement);\n            }\n            this._ngZone.runOutsideAngular(() => {\n                element.addEventListener('mousedown', this._pointerDown, activeEventListenerOptions);\n                element.addEventListener('touchstart', this._pointerDown, passiveEventListenerOptions);\n                element.addEventListener('dragstart', this._nativeDragStart, activeEventListenerOptions);\n            });\n            this._initialTransform = undefined;\n            this._rootElement = element;\n        }\n        if (typeof SVGElement !== 'undefined' && this._rootElement instanceof SVGElement) {\n            this._ownerSVGElement = this._rootElement.ownerSVGElement;\n        }\n        return this;\n    }\n    /**\n     * Element to which the draggable's position will be constrained.\n     */\n    withBoundaryElement(boundaryElement) {\n        this._boundaryElement = boundaryElement ? coerceElement(boundaryElement) : null;\n        this._resizeSubscription.unsubscribe();\n        if (boundaryElement) {\n            this._resizeSubscription = this._viewportRuler\n                .change(10)\n                .subscribe(() => this._containInsideBoundaryOnResize());\n        }\n        return this;\n    }\n    /** Sets the parent ref that the ref is nested in.  */\n    withParent(parent) {\n        this._parentDragRef = parent;\n        return this;\n    }\n    /** Removes the dragging functionality from the DOM element. */\n    dispose() {\n        this._removeRootElementListeners(this._rootElement);\n        // Do this check before removing from the registry since it'll\n        // stop being considered as dragged once it is removed.\n        if (this.isDragging()) {\n            // Since we move out the element to the end of the body while it's being\n            // dragged, we have to make sure that it's removed if it gets destroyed.\n            this._rootElement?.remove();\n        }\n        this._anchor?.remove();\n        this._destroyPreview();\n        this._destroyPlaceholder();\n        this._dragDropRegistry.removeDragItem(this);\n        this._removeSubscriptions();\n        this.beforeStarted.complete();\n        this.started.complete();\n        this.released.complete();\n        this.ended.complete();\n        this.entered.complete();\n        this.exited.complete();\n        this.dropped.complete();\n        this._moveEvents.complete();\n        this._handles = [];\n        this._disabledHandles.clear();\n        this._dropContainer = undefined;\n        this._resizeSubscription.unsubscribe();\n        this._parentPositions.clear();\n        this._boundaryElement =\n            this._rootElement =\n                this._ownerSVGElement =\n                    this._placeholderTemplate =\n                        this._previewTemplate =\n                            this._anchor =\n                                this._parentDragRef =\n                                    null;\n    }\n    /** Checks whether the element is currently being dragged. */\n    isDragging() {\n        return this._hasStartedDragging && this._dragDropRegistry.isDragging(this);\n    }\n    /** Resets a standalone drag item to its initial position. */\n    reset() {\n        this._rootElement.style.transform = this._initialTransform || '';\n        this._activeTransform = { x: 0, y: 0 };\n        this._passiveTransform = { x: 0, y: 0 };\n    }\n    /**\n     * Sets a handle as disabled. While a handle is disabled, it'll capture and interrupt dragging.\n     * @param handle Handle element that should be disabled.\n     */\n    disableHandle(handle) {\n        if (!this._disabledHandles.has(handle) && this._handles.indexOf(handle) > -1) {\n            this._disabledHandles.add(handle);\n            toggleNativeDragInteractions(handle, true);\n        }\n    }\n    /**\n     * Enables a handle, if it has been disabled.\n     * @param handle Handle element to be enabled.\n     */\n    enableHandle(handle) {\n        if (this._disabledHandles.has(handle)) {\n            this._disabledHandles.delete(handle);\n            toggleNativeDragInteractions(handle, this.disabled);\n        }\n    }\n    /** Sets the layout direction of the draggable item. */\n    withDirection(direction) {\n        this._direction = direction;\n        return this;\n    }\n    /** Sets the container that the item is part of. */\n    _withDropContainer(container) {\n        this._dropContainer = container;\n    }\n    /**\n     * Gets the current position in pixels the draggable outside of a drop container.\n     */\n    getFreeDragPosition() {\n        const position = this.isDragging() ? this._activeTransform : this._passiveTransform;\n        return { x: position.x, y: position.y };\n    }\n    /**\n     * Sets the current position in pixels the draggable outside of a drop container.\n     * @param value New position to be set.\n     */\n    setFreeDragPosition(value) {\n        this._activeTransform = { x: 0, y: 0 };\n        this._passiveTransform.x = value.x;\n        this._passiveTransform.y = value.y;\n        if (!this._dropContainer) {\n            this._applyRootElementTransform(value.x, value.y);\n        }\n        return this;\n    }\n    /**\n     * Sets the container into which to insert the preview element.\n     * @param value Container into which to insert the preview.\n     */\n    withPreviewContainer(value) {\n        this._previewContainer = value;\n        return this;\n    }\n    /** Updates the item's sort order based on the last-known pointer position. */\n    _sortFromLastPointerPosition() {\n        const position = this._lastKnownPointerPosition;\n        if (position && this._dropContainer) {\n            this._updateActiveDropContainer(this._getConstrainedPointerPosition(position), position);\n        }\n    }\n    /** Unsubscribes from the global subscriptions. */\n    _removeSubscriptions() {\n        this._pointerMoveSubscription.unsubscribe();\n        this._pointerUpSubscription.unsubscribe();\n        this._scrollSubscription.unsubscribe();\n    }\n    /** Destroys the preview element and its ViewRef. */\n    _destroyPreview() {\n        this._preview?.remove();\n        this._previewRef?.destroy();\n        this._preview = this._previewRef = null;\n    }\n    /** Destroys the placeholder element and its ViewRef. */\n    _destroyPlaceholder() {\n        this._placeholder?.remove();\n        this._placeholderRef?.destroy();\n        this._placeholder = this._placeholderRef = null;\n    }\n    /**\n     * Clears subscriptions and stops the dragging sequence.\n     * @param event Browser event object that ended the sequence.\n     */\n    _endDragSequence(event) {\n        // Note that here we use `isDragging` from the service, rather than from `this`.\n        // The difference is that the one from the service reflects whether a dragging sequence\n        // has been initiated, whereas the one on `this` includes whether the user has passed\n        // the minimum dragging threshold.\n        if (!this._dragDropRegistry.isDragging(this)) {\n            return;\n        }\n        this._removeSubscriptions();\n        this._dragDropRegistry.stopDragging(this);\n        this._toggleNativeDragInteractions();\n        if (this._handles) {\n            this._rootElement.style.webkitTapHighlightColor =\n                this._rootElementTapHighlight;\n        }\n        if (!this._hasStartedDragging) {\n            return;\n        }\n        this.released.next({ source: this, event });\n        if (this._dropContainer) {\n            // Stop scrolling immediately, instead of waiting for the animation to finish.\n            this._dropContainer._stopScrolling();\n            this._animatePreviewToPlaceholder().then(() => {\n                this._cleanupDragArtifacts(event);\n                this._cleanupCachedDimensions();\n                this._dragDropRegistry.stopDragging(this);\n            });\n        }\n        else {\n            // Convert the active transform into a passive one. This means that next time\n            // the user starts dragging the item, its position will be calculated relatively\n            // to the new passive transform.\n            this._passiveTransform.x = this._activeTransform.x;\n            const pointerPosition = this._getPointerPositionOnPage(event);\n            this._passiveTransform.y = this._activeTransform.y;\n            this._ngZone.run(() => {\n                this.ended.next({\n                    source: this,\n                    distance: this._getDragDistance(pointerPosition),\n                    dropPoint: pointerPosition,\n                    event,\n                });\n            });\n            this._cleanupCachedDimensions();\n            this._dragDropRegistry.stopDragging(this);\n        }\n    }\n    /** Starts the dragging sequence. */\n    _startDragSequence(event) {\n        if (isTouchEvent(event)) {\n            this._lastTouchEventTime = Date.now();\n        }\n        this._toggleNativeDragInteractions();\n        const dropContainer = this._dropContainer;\n        if (dropContainer) {\n            const element = this._rootElement;\n            const parent = element.parentNode;\n            const placeholder = (this._placeholder = this._createPlaceholderElement());\n            const anchor = (this._anchor = this._anchor || this._document.createComment(''));\n            // Needs to happen before the root element is moved.\n            const shadowRoot = this._getShadowRoot();\n            // Insert an anchor node so that we can restore the element's position in the DOM.\n            parent.insertBefore(anchor, element);\n            // There's no risk of transforms stacking when inside a drop container so\n            // we can keep the initial transform up to date any time dragging starts.\n            this._initialTransform = element.style.transform || '';\n            // Create the preview after the initial transform has\n            // been cached, because it can be affected by the transform.\n            this._preview = this._createPreviewElement();\n            // We move the element out at the end of the body and we make it hidden, because keeping it in\n            // place will throw off the consumer's `:last-child` selectors. We can't remove the element\n            // from the DOM completely, because iOS will stop firing all subsequent events in the chain.\n            toggleVisibility(element, false, dragImportantProperties);\n            this._document.body.appendChild(parent.replaceChild(placeholder, element));\n            this._getPreviewInsertionPoint(parent, shadowRoot).appendChild(this._preview);\n            this.started.next({ source: this, event }); // Emit before notifying the container.\n            dropContainer.start();\n            this._initialContainer = dropContainer;\n            this._initialIndex = dropContainer.getItemIndex(this);\n        }\n        else {\n            this.started.next({ source: this, event });\n            this._initialContainer = this._initialIndex = undefined;\n        }\n        // Important to run after we've called `start` on the parent container\n        // so that it has had time to resolve its scrollable parents.\n        this._parentPositions.cache(dropContainer ? dropContainer.getScrollableParents() : []);\n    }\n    /**\n     * Sets up the different variables and subscriptions\n     * that will be necessary for the dragging sequence.\n     * @param referenceElement Element that started the drag sequence.\n     * @param event Browser event object that started the sequence.\n     */\n    _initializeDragSequence(referenceElement, event) {\n        // Stop propagation if the item is inside another\n        // draggable so we don't start multiple drag sequences.\n        if (this._parentDragRef) {\n            event.stopPropagation();\n        }\n        const isDragging = this.isDragging();\n        const isTouchSequence = isTouchEvent(event);\n        const isAuxiliaryMouseButton = !isTouchSequence && event.button !== 0;\n        const rootElement = this._rootElement;\n        const target = _getEventTarget(event);\n        const isSyntheticEvent = !isTouchSequence &&\n            this._lastTouchEventTime &&\n            this._lastTouchEventTime + MOUSE_EVENT_IGNORE_TIME > Date.now();\n        const isFakeEvent = isTouchSequence\n            ? isFakeTouchstartFromScreenReader(event)\n            : isFakeMousedownFromScreenReader(event);\n        // If the event started from an element with the native HTML drag&drop, it'll interfere\n        // with our own dragging (e.g. `img` tags do it by default). Prevent the default action\n        // to stop it from happening. Note that preventing on `dragstart` also seems to work, but\n        // it's flaky and it fails if the user drags it away quickly. Also note that we only want\n        // to do this for `mousedown` since doing the same for `touchstart` will stop any `click`\n        // events from firing on touch devices.\n        if (target && target.draggable && event.type === 'mousedown') {\n            event.preventDefault();\n        }\n        // Abort if the user is already dragging or is using a mouse button other than the primary one.\n        if (isDragging || isAuxiliaryMouseButton || isSyntheticEvent || isFakeEvent) {\n            return;\n        }\n        // If we've got handles, we need to disable the tap highlight on the entire root element,\n        // otherwise iOS will still add it, even though all the drag interactions on the handle\n        // are disabled.\n        if (this._handles.length) {\n            const rootStyles = rootElement.style;\n            this._rootElementTapHighlight = rootStyles.webkitTapHighlightColor || '';\n            rootStyles.webkitTapHighlightColor = 'transparent';\n        }\n        this._hasStartedDragging = this._hasMoved = false;\n        // Avoid multiple subscriptions and memory leaks when multi touch\n        // (isDragging check above isn't enough because of possible temporal and/or dimensional delays)\n        this._removeSubscriptions();\n        this._initialClientRect = this._rootElement.getBoundingClientRect();\n        this._pointerMoveSubscription = this._dragDropRegistry.pointerMove.subscribe(this._pointerMove);\n        this._pointerUpSubscription = this._dragDropRegistry.pointerUp.subscribe(this._pointerUp);\n        this._scrollSubscription = this._dragDropRegistry\n            .scrolled(this._getShadowRoot())\n            .subscribe(scrollEvent => this._updateOnScroll(scrollEvent));\n        if (this._boundaryElement) {\n            this._boundaryRect = getMutableClientRect(this._boundaryElement);\n        }\n        // If we have a custom preview we can't know ahead of time how large it'll be so we position\n        // it next to the cursor. The exception is when the consumer has opted into making the preview\n        // the same size as the root element, in which case we do know the size.\n        const previewTemplate = this._previewTemplate;\n        this._pickupPositionInElement =\n            previewTemplate && previewTemplate.template && !previewTemplate.matchSize\n                ? { x: 0, y: 0 }\n                : this._getPointerPositionInElement(this._initialClientRect, referenceElement, event);\n        const pointerPosition = (this._pickupPositionOnPage =\n            this._lastKnownPointerPosition =\n                this._getPointerPositionOnPage(event));\n        this._pointerDirectionDelta = { x: 0, y: 0 };\n        this._pointerPositionAtLastDirectionChange = { x: pointerPosition.x, y: pointerPosition.y };\n        this._dragStartTime = Date.now();\n        this._dragDropRegistry.startDragging(this, event);\n    }\n    /** Cleans up the DOM artifacts that were added to facilitate the element being dragged. */\n    _cleanupDragArtifacts(event) {\n        // Restore the element's visibility and insert it at its old position in the DOM.\n        // It's important that we maintain the position, because moving the element around in the DOM\n        // can throw off `NgFor` which does smart diffing and re-creates elements only when necessary,\n        // while moving the existing elements in all other cases.\n        toggleVisibility(this._rootElement, true, dragImportantProperties);\n        this._anchor.parentNode.replaceChild(this._rootElement, this._anchor);\n        this._destroyPreview();\n        this._destroyPlaceholder();\n        this._initialClientRect =\n            this._boundaryRect =\n                this._previewRect =\n                    this._initialTransform =\n                        undefined;\n        // Re-enter the NgZone since we bound `document` events on the outside.\n        this._ngZone.run(() => {\n            const container = this._dropContainer;\n            const currentIndex = container.getItemIndex(this);\n            const pointerPosition = this._getPointerPositionOnPage(event);\n            const distance = this._getDragDistance(pointerPosition);\n            const isPointerOverContainer = container._isOverContainer(pointerPosition.x, pointerPosition.y);\n            this.ended.next({ source: this, distance, dropPoint: pointerPosition, event });\n            this.dropped.next({\n                item: this,\n                currentIndex,\n                previousIndex: this._initialIndex,\n                container: container,\n                previousContainer: this._initialContainer,\n                isPointerOverContainer,\n                distance,\n                dropPoint: pointerPosition,\n                event,\n            });\n            container.drop(this, currentIndex, this._initialIndex, this._initialContainer, isPointerOverContainer, distance, pointerPosition, event);\n            this._dropContainer = this._initialContainer;\n        });\n    }\n    /**\n     * Updates the item's position in its drop container, or moves it\n     * into a new one, depending on its current drag position.\n     */\n    _updateActiveDropContainer({ x, y }, { x: rawX, y: rawY }) {\n        // Drop container that draggable has been moved into.\n        let newContainer = this._initialContainer._getSiblingContainerFromPosition(this, x, y);\n        // If we couldn't find a new container to move the item into, and the item has left its\n        // initial container, check whether the it's over the initial container. This handles the\n        // case where two containers are connected one way and the user tries to undo dragging an\n        // item into a new container.\n        if (!newContainer &&\n            this._dropContainer !== this._initialContainer &&\n            this._initialContainer._isOverContainer(x, y)) {\n            newContainer = this._initialContainer;\n        }\n        if (newContainer && newContainer !== this._dropContainer) {\n            this._ngZone.run(() => {\n                // Notify the old container that the item has left.\n                this.exited.next({ item: this, container: this._dropContainer });\n                this._dropContainer.exit(this);\n                // Notify the new container that the item has entered.\n                this._dropContainer = newContainer;\n                this._dropContainer.enter(this, x, y, newContainer === this._initialContainer &&\n                    // If we're re-entering the initial container and sorting is disabled,\n                    // put item the into its starting index to begin with.\n                    newContainer.sortingDisabled\n                    ? this._initialIndex\n                    : undefined);\n                this.entered.next({\n                    item: this,\n                    container: newContainer,\n                    currentIndex: newContainer.getItemIndex(this),\n                });\n            });\n        }\n        // Dragging may have been interrupted as a result of the events above.\n        if (this.isDragging()) {\n            this._dropContainer._startScrollingIfNecessary(rawX, rawY);\n            this._dropContainer._sortItem(this, x, y, this._pointerDirectionDelta);\n            if (this.constrainPosition) {\n                this._applyPreviewTransform(x, y);\n            }\n            else {\n                this._applyPreviewTransform(x - this._pickupPositionInElement.x, y - this._pickupPositionInElement.y);\n            }\n        }\n    }\n    /**\n     * Creates the element that will be rendered next to the user's pointer\n     * and will be used as a preview of the element that is being dragged.\n     */\n    _createPreviewElement() {\n        const previewConfig = this._previewTemplate;\n        const previewClass = this.previewClass;\n        const previewTemplate = previewConfig ? previewConfig.template : null;\n        let preview;\n        if (previewTemplate && previewConfig) {\n            // Measure the element before we've inserted the preview\n            // since the insertion could throw off the measurement.\n            const rootRect = previewConfig.matchSize ? this._initialClientRect : null;\n            const viewRef = previewConfig.viewContainer.createEmbeddedView(previewTemplate, previewConfig.context);\n            viewRef.detectChanges();\n            preview = getRootNode(viewRef, this._document);\n            this._previewRef = viewRef;\n            if (previewConfig.matchSize) {\n                matchElementSize(preview, rootRect);\n            }\n            else {\n                preview.style.transform = getTransform(this._pickupPositionOnPage.x, this._pickupPositionOnPage.y);\n            }\n        }\n        else {\n            preview = deepCloneNode(this._rootElement);\n            matchElementSize(preview, this._initialClientRect);\n            if (this._initialTransform) {\n                preview.style.transform = this._initialTransform;\n            }\n        }\n        extendStyles(preview.style, {\n            // It's important that we disable the pointer events on the preview, because\n            // it can throw off the `document.elementFromPoint` calls in the `CdkDropList`.\n            'pointer-events': 'none',\n            // We have to reset the margin, because it can throw off positioning relative to the viewport.\n            'margin': '0',\n            'position': 'fixed',\n            'top': '0',\n            'left': '0',\n            'z-index': `${this._config.zIndex || 1000}`,\n        }, dragImportantProperties);\n        toggleNativeDragInteractions(preview, false);\n        preview.classList.add('cdk-drag-preview');\n        preview.setAttribute('dir', this._direction);\n        if (previewClass) {\n            if (Array.isArray(previewClass)) {\n                previewClass.forEach(className => preview.classList.add(className));\n            }\n            else {\n                preview.classList.add(previewClass);\n            }\n        }\n        return preview;\n    }\n    /**\n     * Animates the preview element from its current position to the location of the drop placeholder.\n     * @returns Promise that resolves when the animation completes.\n     */\n    _animatePreviewToPlaceholder() {\n        // If the user hasn't moved yet, the transitionend event won't fire.\n        if (!this._hasMoved) {\n            return Promise.resolve();\n        }\n        const placeholderRect = this._placeholder.getBoundingClientRect();\n        // Apply the class that adds a transition to the preview.\n        this._preview.classList.add('cdk-drag-animating');\n        // Move the preview to the placeholder position.\n        this._applyPreviewTransform(placeholderRect.left, placeholderRect.top);\n        // If the element doesn't have a `transition`, the `transitionend` event won't fire. Since\n        // we need to trigger a style recalculation in order for the `cdk-drag-animating` class to\n        // apply its style, we take advantage of the available info to figure out whether we need to\n        // bind the event in the first place.\n        const duration = getTransformTransitionDurationInMs(this._preview);\n        if (duration === 0) {\n            return Promise.resolve();\n        }\n        return this._ngZone.runOutsideAngular(() => {\n            return new Promise(resolve => {\n                const handler = ((event) => {\n                    if (!event ||\n                        (_getEventTarget(event) === this._preview && event.propertyName === 'transform')) {\n                        this._preview?.removeEventListener('transitionend', handler);\n                        resolve();\n                        clearTimeout(timeout);\n                    }\n                });\n                // If a transition is short enough, the browser might not fire the `transitionend` event.\n                // Since we know how long it's supposed to take, add a timeout with a 50% buffer that'll\n                // fire if the transition hasn't completed when it was supposed to.\n                const timeout = setTimeout(handler, duration * 1.5);\n                this._preview.addEventListener('transitionend', handler);\n            });\n        });\n    }\n    /** Creates an element that will be shown instead of the current element while dragging. */\n    _createPlaceholderElement() {\n        const placeholderConfig = this._placeholderTemplate;\n        const placeholderTemplate = placeholderConfig ? placeholderConfig.template : null;\n        let placeholder;\n        if (placeholderTemplate) {\n            this._placeholderRef = placeholderConfig.viewContainer.createEmbeddedView(placeholderTemplate, placeholderConfig.context);\n            this._placeholderRef.detectChanges();\n            placeholder = getRootNode(this._placeholderRef, this._document);\n        }\n        else {\n            placeholder = deepCloneNode(this._rootElement);\n        }\n        // Stop pointer events on the preview so the user can't\n        // interact with it while the preview is animating.\n        placeholder.style.pointerEvents = 'none';\n        placeholder.classList.add('cdk-drag-placeholder');\n        return placeholder;\n    }\n    /**\n     * Figures out the coordinates at which an element was picked up.\n     * @param referenceElement Element that initiated the dragging.\n     * @param event Event that initiated the dragging.\n     */\n    _getPointerPositionInElement(elementRect, referenceElement, event) {\n        const handleElement = referenceElement === this._rootElement ? null : referenceElement;\n        const referenceRect = handleElement ? handleElement.getBoundingClientRect() : elementRect;\n        const point = isTouchEvent(event) ? event.targetTouches[0] : event;\n        const scrollPosition = this._getViewportScrollPosition();\n        const x = point.pageX - referenceRect.left - scrollPosition.left;\n        const y = point.pageY - referenceRect.top - scrollPosition.top;\n        return {\n            x: referenceRect.left - elementRect.left + x,\n            y: referenceRect.top - elementRect.top + y,\n        };\n    }\n    /** Determines the point of the page that was touched by the user. */\n    _getPointerPositionOnPage(event) {\n        const scrollPosition = this._getViewportScrollPosition();\n        const point = isTouchEvent(event)\n            ? // `touches` will be empty for start/end events so we have to fall back to `changedTouches`.\n                // Also note that on real devices we're guaranteed for either `touches` or `changedTouches`\n                // to have a value, but Firefox in device emulation mode has a bug where both can be empty\n                // for `touchstart` and `touchend` so we fall back to a dummy object in order to avoid\n                // throwing an error. The value returned here will be incorrect, but since this only\n                // breaks inside a developer tool and the value is only used for secondary information,\n                // we can get away with it. See https://bugzilla.mozilla.org/show_bug.cgi?id=1615824.\n                event.touches[0] || event.changedTouches[0] || { pageX: 0, pageY: 0 }\n            : event;\n        const x = point.pageX - scrollPosition.left;\n        const y = point.pageY - scrollPosition.top;\n        // if dragging SVG element, try to convert from the screen coordinate system to the SVG\n        // coordinate system\n        if (this._ownerSVGElement) {\n            const svgMatrix = this._ownerSVGElement.getScreenCTM();\n            if (svgMatrix) {\n                const svgPoint = this._ownerSVGElement.createSVGPoint();\n                svgPoint.x = x;\n                svgPoint.y = y;\n                return svgPoint.matrixTransform(svgMatrix.inverse());\n            }\n        }\n        return { x, y };\n    }\n    /** Gets the pointer position on the page, accounting for any position constraints. */\n    _getConstrainedPointerPosition(point) {\n        const dropContainerLock = this._dropContainer ? this._dropContainer.lockAxis : null;\n        let { x, y } = this.constrainPosition\n            ? this.constrainPosition(point, this, this._initialClientRect, this._pickupPositionInElement)\n            : point;\n        if (this.lockAxis === 'x' || dropContainerLock === 'x') {\n            y =\n                this._pickupPositionOnPage.y -\n                    (this.constrainPosition ? this._pickupPositionInElement.y : 0);\n        }\n        else if (this.lockAxis === 'y' || dropContainerLock === 'y') {\n            x =\n                this._pickupPositionOnPage.x -\n                    (this.constrainPosition ? this._pickupPositionInElement.x : 0);\n        }\n        if (this._boundaryRect) {\n            // If not using a custom constrain we need to account for the pickup position in the element\n            // otherwise we do not need to do this, as it has already been accounted for\n            const { x: pickupX, y: pickupY } = !this.constrainPosition\n                ? this._pickupPositionInElement\n                : { x: 0, y: 0 };\n            const boundaryRect = this._boundaryRect;\n            const { width: previewWidth, height: previewHeight } = this._getPreviewRect();\n            const minY = boundaryRect.top + pickupY;\n            const maxY = boundaryRect.bottom - (previewHeight - pickupY);\n            const minX = boundaryRect.left + pickupX;\n            const maxX = boundaryRect.right - (previewWidth - pickupX);\n            x = clamp$1(x, minX, maxX);\n            y = clamp$1(y, minY, maxY);\n        }\n        return { x, y };\n    }\n    /** Updates the current drag delta, based on the user's current pointer position on the page. */\n    _updatePointerDirectionDelta(pointerPositionOnPage) {\n        const { x, y } = pointerPositionOnPage;\n        const delta = this._pointerDirectionDelta;\n        const positionSinceLastChange = this._pointerPositionAtLastDirectionChange;\n        // Amount of pixels the user has dragged since the last time the direction changed.\n        const changeX = Math.abs(x - positionSinceLastChange.x);\n        const changeY = Math.abs(y - positionSinceLastChange.y);\n        // Because we handle pointer events on a per-pixel basis, we don't want the delta\n        // to change for every pixel, otherwise anything that depends on it can look erratic.\n        // To make the delta more consistent, we track how much the user has moved since the last\n        // delta change and we only update it after it has reached a certain threshold.\n        if (changeX > this._config.pointerDirectionChangeThreshold) {\n            delta.x = x > positionSinceLastChange.x ? 1 : -1;\n            positionSinceLastChange.x = x;\n        }\n        if (changeY > this._config.pointerDirectionChangeThreshold) {\n            delta.y = y > positionSinceLastChange.y ? 1 : -1;\n            positionSinceLastChange.y = y;\n        }\n        return delta;\n    }\n    /** Toggles the native drag interactions, based on how many handles are registered. */\n    _toggleNativeDragInteractions() {\n        if (!this._rootElement || !this._handles) {\n            return;\n        }\n        const shouldEnable = this._handles.length > 0 || !this.isDragging();\n        if (shouldEnable !== this._nativeInteractionsEnabled) {\n            this._nativeInteractionsEnabled = shouldEnable;\n            toggleNativeDragInteractions(this._rootElement, shouldEnable);\n        }\n    }\n    /** Removes the manually-added event listeners from the root element. */\n    _removeRootElementListeners(element) {\n        element.removeEventListener('mousedown', this._pointerDown, activeEventListenerOptions);\n        element.removeEventListener('touchstart', this._pointerDown, passiveEventListenerOptions);\n        element.removeEventListener('dragstart', this._nativeDragStart, activeEventListenerOptions);\n    }\n    /**\n     * Applies a `transform` to the root element, taking into account any existing transforms on it.\n     * @param x New transform value along the X axis.\n     * @param y New transform value along the Y axis.\n     */\n    _applyRootElementTransform(x, y) {\n        const transform = getTransform(x, y);\n        const styles = this._rootElement.style;\n        // Cache the previous transform amount only after the first drag sequence, because\n        // we don't want our own transforms to stack on top of each other.\n        // Should be excluded none because none + translate3d(x, y, x) is invalid css\n        if (this._initialTransform == null) {\n            this._initialTransform =\n                styles.transform && styles.transform != 'none' ? styles.transform : '';\n        }\n        // Preserve the previous `transform` value, if there was one. Note that we apply our own\n        // transform before the user's, because things like rotation can affect which direction\n        // the element will be translated towards.\n        styles.transform = combineTransforms(transform, this._initialTransform);\n    }\n    /**\n     * Applies a `transform` to the preview, taking into account any existing transforms on it.\n     * @param x New transform value along the X axis.\n     * @param y New transform value along the Y axis.\n     */\n    _applyPreviewTransform(x, y) {\n        // Only apply the initial transform if the preview is a clone of the original element, otherwise\n        // it could be completely different and the transform might not make sense anymore.\n        const initialTransform = this._previewTemplate?.template ? undefined : this._initialTransform;\n        const transform = getTransform(x, y);\n        this._preview.style.transform = combineTransforms(transform, initialTransform);\n    }\n    /**\n     * Gets the distance that the user has dragged during the current drag sequence.\n     * @param currentPosition Current position of the user's pointer.\n     */\n    _getDragDistance(currentPosition) {\n        const pickupPosition = this._pickupPositionOnPage;\n        if (pickupPosition) {\n            return { x: currentPosition.x - pickupPosition.x, y: currentPosition.y - pickupPosition.y };\n        }\n        return { x: 0, y: 0 };\n    }\n    /** Cleans up any cached element dimensions that we don't need after dragging has stopped. */\n    _cleanupCachedDimensions() {\n        this._boundaryRect = this._previewRect = undefined;\n        this._parentPositions.clear();\n    }\n    /**\n     * Checks whether the element is still inside its boundary after the viewport has been resized.\n     * If not, the position is adjusted so that the element fits again.\n     */\n    _containInsideBoundaryOnResize() {\n        let { x, y } = this._passiveTransform;\n        if ((x === 0 && y === 0) || this.isDragging() || !this._boundaryElement) {\n            return;\n        }\n        // Note: don't use `_clientRectAtStart` here, because we want the latest position.\n        const elementRect = this._rootElement.getBoundingClientRect();\n        const boundaryRect = this._boundaryElement.getBoundingClientRect();\n        // It's possible that the element got hidden away after dragging (e.g. by switching to a\n        // different tab). Don't do anything in this case so we don't clear the user's position.\n        if ((boundaryRect.width === 0 && boundaryRect.height === 0) ||\n            (elementRect.width === 0 && elementRect.height === 0)) {\n            return;\n        }\n        const leftOverflow = boundaryRect.left - elementRect.left;\n        const rightOverflow = elementRect.right - boundaryRect.right;\n        const topOverflow = boundaryRect.top - elementRect.top;\n        const bottomOverflow = elementRect.bottom - boundaryRect.bottom;\n        // If the element has become wider than the boundary, we can't\n        // do much to make it fit so we just anchor it to the left.\n        if (boundaryRect.width > elementRect.width) {\n            if (leftOverflow > 0) {\n                x += leftOverflow;\n            }\n            if (rightOverflow > 0) {\n                x -= rightOverflow;\n            }\n        }\n        else {\n            x = 0;\n        }\n        // If the element has become taller than the boundary, we can't\n        // do much to make it fit so we just anchor it to the top.\n        if (boundaryRect.height > elementRect.height) {\n            if (topOverflow > 0) {\n                y += topOverflow;\n            }\n            if (bottomOverflow > 0) {\n                y -= bottomOverflow;\n            }\n        }\n        else {\n            y = 0;\n        }\n        if (x !== this._passiveTransform.x || y !== this._passiveTransform.y) {\n            this.setFreeDragPosition({ y, x });\n        }\n    }\n    /** Gets the drag start delay, based on the event type. */\n    _getDragStartDelay(event) {\n        const value = this.dragStartDelay;\n        if (typeof value === 'number') {\n            return value;\n        }\n        else if (isTouchEvent(event)) {\n            return value.touch;\n        }\n        return value ? value.mouse : 0;\n    }\n    /** Updates the internal state of the draggable element when scrolling has occurred. */\n    _updateOnScroll(event) {\n        const scrollDifference = this._parentPositions.handleScroll(event);\n        if (scrollDifference) {\n            const target = _getEventTarget(event);\n            // ClientRect dimensions are based on the scroll position of the page and its parent\n            // node so we have to update the cached boundary ClientRect if the user has scrolled.\n            if (this._boundaryRect &&\n                target !== this._boundaryElement &&\n                target.contains(this._boundaryElement)) {\n                adjustClientRect(this._boundaryRect, scrollDifference.top, scrollDifference.left);\n            }\n            this._pickupPositionOnPage.x += scrollDifference.left;\n            this._pickupPositionOnPage.y += scrollDifference.top;\n            // If we're in free drag mode, we have to update the active transform, because\n            // it isn't relative to the viewport like the preview inside a drop list.\n            if (!this._dropContainer) {\n                this._activeTransform.x -= scrollDifference.left;\n                this._activeTransform.y -= scrollDifference.top;\n                this._applyRootElementTransform(this._activeTransform.x, this._activeTransform.y);\n            }\n        }\n    }\n    /** Gets the scroll position of the viewport. */\n    _getViewportScrollPosition() {\n        return (this._parentPositions.positions.get(this._document)?.scrollPosition ||\n            this._parentPositions.getViewportScrollPosition());\n    }\n    /**\n     * Lazily resolves and returns the shadow root of the element. We do this in a function, rather\n     * than saving it in property directly on init, because we want to resolve it as late as possible\n     * in order to ensure that the element has been moved into the shadow DOM. Doing it inside the\n     * constructor might be too early if the element is inside of something like `ngFor` or `ngIf`.\n     */\n    _getShadowRoot() {\n        if (this._cachedShadowRoot === undefined) {\n            this._cachedShadowRoot = _getShadowRoot(this._rootElement);\n        }\n        return this._cachedShadowRoot;\n    }\n    /** Gets the element into which the drag preview should be inserted. */\n    _getPreviewInsertionPoint(initialParent, shadowRoot) {\n        const previewContainer = this._previewContainer || 'global';\n        if (previewContainer === 'parent') {\n            return initialParent;\n        }\n        if (previewContainer === 'global') {\n            const documentRef = this._document;\n            // We can't use the body if the user is in fullscreen mode,\n            // because the preview will render under the fullscreen element.\n            // TODO(crisbeto): dedupe this with the `FullscreenOverlayContainer` eventually.\n            return (shadowRoot ||\n                documentRef.fullscreenElement ||\n                documentRef.webkitFullscreenElement ||\n                documentRef.mozFullScreenElement ||\n                documentRef.msFullscreenElement ||\n                documentRef.body);\n        }\n        return coerceElement(previewContainer);\n    }\n    /** Lazily resolves and returns the dimensions of the preview. */\n    _getPreviewRect() {\n        // Cache the preview element rect if we haven't cached it already or if\n        // we cached it too early before the element dimensions were computed.\n        if (!this._previewRect || (!this._previewRect.width && !this._previewRect.height)) {\n            this._previewRect = this._preview\n                ? this._preview.getBoundingClientRect()\n                : this._initialClientRect;\n        }\n        return this._previewRect;\n    }\n    /** Gets a handle that is the target of an event. */\n    _getTargetHandle(event) {\n        return this._handles.find(handle => {\n            return event.target && (event.target === handle || handle.contains(event.target));\n        });\n    }\n}\n/**\n * Gets a 3d `transform` that can be applied to an element.\n * @param x Desired position of the element along the X axis.\n * @param y Desired position of the element along the Y axis.\n */\nfunction getTransform(x, y) {\n    // Round the transforms since some browsers will\n    // blur the elements for sub-pixel transforms.\n    return `translate3d(${Math.round(x)}px, ${Math.round(y)}px, 0)`;\n}\n/** Clamps a value between a minimum and a maximum. */\nfunction clamp$1(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/** Determines whether an event is a touch event. */\nfunction isTouchEvent(event) {\n    // This function is called for every pixel that the user has dragged so we need it to be\n    // as fast as possible. Since we only bind mouse events and touch events, we can assume\n    // that if the event's name starts with `t`, it's a touch event.\n    return event.type[0] === 't';\n}\n/**\n * Gets the root HTML element of an embedded view.\n * If the root is not an HTML element it gets wrapped in one.\n */\nfunction getRootNode(viewRef, _document) {\n    const rootNodes = viewRef.rootNodes;\n    if (rootNodes.length === 1 && rootNodes[0].nodeType === _document.ELEMENT_NODE) {\n        return rootNodes[0];\n    }\n    const wrapper = _document.createElement('div');\n    rootNodes.forEach(node => wrapper.appendChild(node));\n    return wrapper;\n}\n/**\n * Matches the target element's size to the source's size.\n * @param target Element that needs to be resized.\n * @param sourceRect Dimensions of the source element.\n */\nfunction matchElementSize(target, sourceRect) {\n    target.style.width = `${sourceRect.width}px`;\n    target.style.height = `${sourceRect.height}px`;\n    target.style.transform = getTransform(sourceRect.left, sourceRect.top);\n}\n\n/**\n * Moves an item one index in an array to another.\n * @param array Array in which to move the item.\n * @param fromIndex Starting index of the item.\n * @param toIndex Index to which the item should be moved.\n */\nfunction moveItemInArray(array, fromIndex, toIndex) {\n    const from = clamp(fromIndex, array.length - 1);\n    const to = clamp(toIndex, array.length - 1);\n    if (from === to) {\n        return;\n    }\n    const target = array[from];\n    const delta = to < from ? -1 : 1;\n    for (let i = from; i !== to; i += delta) {\n        array[i] = array[i + delta];\n    }\n    array[to] = target;\n}\n/**\n * Moves an item from one array to another.\n * @param currentArray Array from which to transfer the item.\n * @param targetArray Array into which to put the item.\n * @param currentIndex Index of the item in its current array.\n * @param targetIndex Index at which to insert the item.\n */\nfunction transferArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\n    const from = clamp(currentIndex, currentArray.length - 1);\n    const to = clamp(targetIndex, targetArray.length);\n    if (currentArray.length) {\n        targetArray.splice(to, 0, currentArray.splice(from, 1)[0]);\n    }\n}\n/**\n * Copies an item from one array to another, leaving it in its\n * original position in current array.\n * @param currentArray Array from which to copy the item.\n * @param targetArray Array into which is copy the item.\n * @param currentIndex Index of the item in its current array.\n * @param targetIndex Index at which to insert the item.\n *\n */\nfunction copyArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\n    const to = clamp(targetIndex, targetArray.length);\n    if (currentArray.length) {\n        targetArray.splice(to, 0, currentArray[currentIndex]);\n    }\n}\n/** Clamps a number between zero and a maximum. */\nfunction clamp(value, max) {\n    return Math.max(0, Math.min(max, value));\n}\n\n/**\n * Strategy that only supports sorting along a single axis.\n * Items are reordered using CSS transforms which allows for sorting to be animated.\n * @docs-private\n */\nclass SingleAxisSortStrategy {\n    constructor(_element, _dragDropRegistry) {\n        this._element = _element;\n        this._dragDropRegistry = _dragDropRegistry;\n        /** Cache of the dimensions of all the items inside the container. */\n        this._itemPositions = [];\n        /** Direction in which the list is oriented. */\n        this.orientation = 'vertical';\n        /**\n         * Keeps track of the item that was last swapped with the dragged item, as well as what direction\n         * the pointer was moving in when the swap occurred and whether the user's pointer continued to\n         * overlap with the swapped item after the swapping occurred.\n         */\n        this._previousSwap = {\n            drag: null,\n            delta: 0,\n            overlaps: false,\n        };\n    }\n    /**\n     * To be called when the drag sequence starts.\n     * @param items Items that are currently in the list.\n     */\n    start(items) {\n        this.withItems(items);\n    }\n    /**\n     * To be called when an item is being sorted.\n     * @param item Item to be sorted.\n     * @param pointerX Position of the item along the X axis.\n     * @param pointerY Position of the item along the Y axis.\n     * @param pointerDelta Direction in which the pointer is moving along each axis.\n     */\n    sort(item, pointerX, pointerY, pointerDelta) {\n        const siblings = this._itemPositions;\n        const newIndex = this._getItemIndexFromPointerPosition(item, pointerX, pointerY, pointerDelta);\n        if (newIndex === -1 && siblings.length > 0) {\n            return null;\n        }\n        const isHorizontal = this.orientation === 'horizontal';\n        const currentIndex = siblings.findIndex(currentItem => currentItem.drag === item);\n        const siblingAtNewPosition = siblings[newIndex];\n        const currentPosition = siblings[currentIndex].clientRect;\n        const newPosition = siblingAtNewPosition.clientRect;\n        const delta = currentIndex > newIndex ? 1 : -1;\n        // How many pixels the item's placeholder should be offset.\n        const itemOffset = this._getItemOffsetPx(currentPosition, newPosition, delta);\n        // How many pixels all the other items should be offset.\n        const siblingOffset = this._getSiblingOffsetPx(currentIndex, siblings, delta);\n        // Save the previous order of the items before moving the item to its new index.\n        // We use this to check whether an item has been moved as a result of the sorting.\n        const oldOrder = siblings.slice();\n        // Shuffle the array in place.\n        moveItemInArray(siblings, currentIndex, newIndex);\n        siblings.forEach((sibling, index) => {\n            // Don't do anything if the position hasn't changed.\n            if (oldOrder[index] === sibling) {\n                return;\n            }\n            const isDraggedItem = sibling.drag === item;\n            const offset = isDraggedItem ? itemOffset : siblingOffset;\n            const elementToOffset = isDraggedItem\n                ? item.getPlaceholderElement()\n                : sibling.drag.getRootElement();\n            // Update the offset to reflect the new position.\n            sibling.offset += offset;\n            // Since we're moving the items with a `transform`, we need to adjust their cached\n            // client rects to reflect their new position, as well as swap their positions in the cache.\n            // Note that we shouldn't use `getBoundingClientRect` here to update the cache, because the\n            // elements may be mid-animation which will give us a wrong result.\n            if (isHorizontal) {\n                // Round the transforms since some browsers will\n                // blur the elements, for sub-pixel transforms.\n                elementToOffset.style.transform = combineTransforms(`translate3d(${Math.round(sibling.offset)}px, 0, 0)`, sibling.initialTransform);\n                adjustClientRect(sibling.clientRect, 0, offset);\n            }\n            else {\n                elementToOffset.style.transform = combineTransforms(`translate3d(0, ${Math.round(sibling.offset)}px, 0)`, sibling.initialTransform);\n                adjustClientRect(sibling.clientRect, offset, 0);\n            }\n        });\n        // Note that it's important that we do this after the client rects have been adjusted.\n        this._previousSwap.overlaps = isInsideClientRect(newPosition, pointerX, pointerY);\n        this._previousSwap.drag = siblingAtNewPosition.drag;\n        this._previousSwap.delta = isHorizontal ? pointerDelta.x : pointerDelta.y;\n        return { previousIndex: currentIndex, currentIndex: newIndex };\n    }\n    /**\n     * Called when an item is being moved into the container.\n     * @param item Item that was moved into the container.\n     * @param pointerX Position of the item along the X axis.\n     * @param pointerY Position of the item along the Y axis.\n     * @param index Index at which the item entered. If omitted, the container will try to figure it\n     *   out automatically.\n     */\n    enter(item, pointerX, pointerY, index) {\n        const newIndex = index == null || index < 0\n            ? // We use the coordinates of where the item entered the drop\n                // zone to figure out at which index it should be inserted.\n                this._getItemIndexFromPointerPosition(item, pointerX, pointerY)\n            : index;\n        const activeDraggables = this._activeDraggables;\n        const currentIndex = activeDraggables.indexOf(item);\n        const placeholder = item.getPlaceholderElement();\n        let newPositionReference = activeDraggables[newIndex];\n        // If the item at the new position is the same as the item that is being dragged,\n        // it means that we're trying to restore the item to its initial position. In this\n        // case we should use the next item from the list as the reference.\n        if (newPositionReference === item) {\n            newPositionReference = activeDraggables[newIndex + 1];\n        }\n        // If we didn't find a new position reference, it means that either the item didn't start off\n        // in this container, or that the item requested to be inserted at the end of the list.\n        if (!newPositionReference &&\n            (newIndex == null || newIndex === -1 || newIndex < activeDraggables.length - 1) &&\n            this._shouldEnterAsFirstChild(pointerX, pointerY)) {\n            newPositionReference = activeDraggables[0];\n        }\n        // Since the item may be in the `activeDraggables` already (e.g. if the user dragged it\n        // into another container and back again), we have to ensure that it isn't duplicated.\n        if (currentIndex > -1) {\n            activeDraggables.splice(currentIndex, 1);\n        }\n        // Don't use items that are being dragged as a reference, because\n        // their element has been moved down to the bottom of the body.\n        if (newPositionReference && !this._dragDropRegistry.isDragging(newPositionReference)) {\n            const element = newPositionReference.getRootElement();\n            element.parentElement.insertBefore(placeholder, element);\n            activeDraggables.splice(newIndex, 0, item);\n        }\n        else {\n            coerceElement(this._element).appendChild(placeholder);\n            activeDraggables.push(item);\n        }\n        // The transform needs to be cleared so it doesn't throw off the measurements.\n        placeholder.style.transform = '';\n        // Note that usually `start` is called together with `enter` when an item goes into a new\n        // container. This will cache item positions, but we need to refresh them since the amount\n        // of items has changed.\n        this._cacheItemPositions();\n    }\n    /** Sets the items that are currently part of the list. */\n    withItems(items) {\n        this._activeDraggables = items.slice();\n        this._cacheItemPositions();\n    }\n    /** Assigns a sort predicate to the strategy. */\n    withSortPredicate(predicate) {\n        this._sortPredicate = predicate;\n    }\n    /** Resets the strategy to its initial state before dragging was started. */\n    reset() {\n        // TODO(crisbeto): may have to wait for the animations to finish.\n        this._activeDraggables.forEach(item => {\n            const rootElement = item.getRootElement();\n            if (rootElement) {\n                const initialTransform = this._itemPositions.find(p => p.drag === item)?.initialTransform;\n                rootElement.style.transform = initialTransform || '';\n            }\n        });\n        this._itemPositions = [];\n        this._activeDraggables = [];\n        this._previousSwap.drag = null;\n        this._previousSwap.delta = 0;\n        this._previousSwap.overlaps = false;\n    }\n    /**\n     * Gets a snapshot of items currently in the list.\n     * Can include items that we dragged in from another list.\n     */\n    getActiveItemsSnapshot() {\n        return this._activeDraggables;\n    }\n    /** Gets the index of a specific item. */\n    getItemIndex(item) {\n        // Items are sorted always by top/left in the cache, however they flow differently in RTL.\n        // The rest of the logic still stands no matter what orientation we're in, however\n        // we need to invert the array when determining the index.\n        const items = this.orientation === 'horizontal' && this.direction === 'rtl'\n            ? this._itemPositions.slice().reverse()\n            : this._itemPositions;\n        return items.findIndex(currentItem => currentItem.drag === item);\n    }\n    /** Used to notify the strategy that the scroll position has changed. */\n    updateOnScroll(topDifference, leftDifference) {\n        // Since we know the amount that the user has scrolled we can shift all of the\n        // client rectangles ourselves. This is cheaper than re-measuring everything and\n        // we can avoid inconsistent behavior where we might be measuring the element before\n        // its position has changed.\n        this._itemPositions.forEach(({ clientRect }) => {\n            adjustClientRect(clientRect, topDifference, leftDifference);\n        });\n        // We need two loops for this, because we want all of the cached\n        // positions to be up-to-date before we re-sort the item.\n        this._itemPositions.forEach(({ drag }) => {\n            if (this._dragDropRegistry.isDragging(drag)) {\n                // We need to re-sort the item manually, because the pointer move\n                // events won't be dispatched while the user is scrolling.\n                drag._sortFromLastPointerPosition();\n            }\n        });\n    }\n    /** Refreshes the position cache of the items and sibling containers. */\n    _cacheItemPositions() {\n        const isHorizontal = this.orientation === 'horizontal';\n        this._itemPositions = this._activeDraggables\n            .map(drag => {\n            const elementToMeasure = drag.getVisibleElement();\n            return {\n                drag,\n                offset: 0,\n                initialTransform: elementToMeasure.style.transform || '',\n                clientRect: getMutableClientRect(elementToMeasure),\n            };\n        })\n            .sort((a, b) => {\n            return isHorizontal\n                ? a.clientRect.left - b.clientRect.left\n                : a.clientRect.top - b.clientRect.top;\n        });\n    }\n    /**\n     * Gets the offset in pixels by which the item that is being dragged should be moved.\n     * @param currentPosition Current position of the item.\n     * @param newPosition Position of the item where the current item should be moved.\n     * @param delta Direction in which the user is moving.\n     */\n    _getItemOffsetPx(currentPosition, newPosition, delta) {\n        const isHorizontal = this.orientation === 'horizontal';\n        let itemOffset = isHorizontal\n            ? newPosition.left - currentPosition.left\n            : newPosition.top - currentPosition.top;\n        // Account for differences in the item width/height.\n        if (delta === -1) {\n            itemOffset += isHorizontal\n                ? newPosition.width - currentPosition.width\n                : newPosition.height - currentPosition.height;\n        }\n        return itemOffset;\n    }\n    /**\n     * Gets the offset in pixels by which the items that aren't being dragged should be moved.\n     * @param currentIndex Index of the item currently being dragged.\n     * @param siblings All of the items in the list.\n     * @param delta Direction in which the user is moving.\n     */\n    _getSiblingOffsetPx(currentIndex, siblings, delta) {\n        const isHorizontal = this.orientation === 'horizontal';\n        const currentPosition = siblings[currentIndex].clientRect;\n        const immediateSibling = siblings[currentIndex + delta * -1];\n        let siblingOffset = currentPosition[isHorizontal ? 'width' : 'height'] * delta;\n        if (immediateSibling) {\n            const start = isHorizontal ? 'left' : 'top';\n            const end = isHorizontal ? 'right' : 'bottom';\n            // Get the spacing between the start of the current item and the end of the one immediately\n            // after it in the direction in which the user is dragging, or vice versa. We add it to the\n            // offset in order to push the element to where it will be when it's inline and is influenced\n            // by the `margin` of its siblings.\n            if (delta === -1) {\n                siblingOffset -= immediateSibling.clientRect[start] - currentPosition[end];\n            }\n            else {\n                siblingOffset += currentPosition[start] - immediateSibling.clientRect[end];\n            }\n        }\n        return siblingOffset;\n    }\n    /**\n     * Checks if pointer is entering in the first position\n     * @param pointerX Position of the user's pointer along the X axis.\n     * @param pointerY Position of the user's pointer along the Y axis.\n     */\n    _shouldEnterAsFirstChild(pointerX, pointerY) {\n        if (!this._activeDraggables.length) {\n            return false;\n        }\n        const itemPositions = this._itemPositions;\n        const isHorizontal = this.orientation === 'horizontal';\n        // `itemPositions` are sorted by position while `activeDraggables` are sorted by child index\n        // check if container is using some sort of \"reverse\" ordering (eg: flex-direction: row-reverse)\n        const reversed = itemPositions[0].drag !== this._activeDraggables[0];\n        if (reversed) {\n            const lastItemRect = itemPositions[itemPositions.length - 1].clientRect;\n            return isHorizontal ? pointerX >= lastItemRect.right : pointerY >= lastItemRect.bottom;\n        }\n        else {\n            const firstItemRect = itemPositions[0].clientRect;\n            return isHorizontal ? pointerX <= firstItemRect.left : pointerY <= firstItemRect.top;\n        }\n    }\n    /**\n     * Gets the index of an item in the drop container, based on the position of the user's pointer.\n     * @param item Item that is being sorted.\n     * @param pointerX Position of the user's pointer along the X axis.\n     * @param pointerY Position of the user's pointer along the Y axis.\n     * @param delta Direction in which the user is moving their pointer.\n     */\n    _getItemIndexFromPointerPosition(item, pointerX, pointerY, delta) {\n        const isHorizontal = this.orientation === 'horizontal';\n        const index = this._itemPositions.findIndex(({ drag, clientRect }) => {\n            // Skip the item itself.\n            if (drag === item) {\n                return false;\n            }\n            if (delta) {\n                const direction = isHorizontal ? delta.x : delta.y;\n                // If the user is still hovering over the same item as last time, their cursor hasn't left\n                // the item after we made the swap, and they didn't change the direction in which they're\n                // dragging, we don't consider it a direction swap.\n                if (drag === this._previousSwap.drag &&\n                    this._previousSwap.overlaps &&\n                    direction === this._previousSwap.delta) {\n                    return false;\n                }\n            }\n            return isHorizontal\n                ? // Round these down since most browsers report client rects with\n                    // sub-pixel precision, whereas the pointer coordinates are rounded to pixels.\n                    pointerX >= Math.floor(clientRect.left) && pointerX < Math.floor(clientRect.right)\n                : pointerY >= Math.floor(clientRect.top) && pointerY < Math.floor(clientRect.bottom);\n        });\n        return index === -1 || !this._sortPredicate(index, item) ? -1 : index;\n    }\n}\n\n/**\n * Proximity, as a ratio to width/height, at which a\n * dragged item will affect the drop container.\n */\nconst DROP_PROXIMITY_THRESHOLD = 0.05;\n/**\n * Proximity, as a ratio to width/height at which to start auto-scrolling the drop list or the\n * viewport. The value comes from trying it out manually until it feels right.\n */\nconst SCROLL_PROXIMITY_THRESHOLD = 0.05;\n/**\n * Reference to a drop list. Used to manipulate or dispose of the container.\n */\nclass DropListRef {\n    constructor(element, _dragDropRegistry, _document, _ngZone, _viewportRuler) {\n        this._dragDropRegistry = _dragDropRegistry;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        /** Whether starting a dragging sequence from this container is disabled. */\n        this.disabled = false;\n        /** Whether sorting items within the list is disabled. */\n        this.sortingDisabled = false;\n        /**\n         * Whether auto-scrolling the view when the user\n         * moves their pointer close to the edges is disabled.\n         */\n        this.autoScrollDisabled = false;\n        /** Number of pixels to scroll for each frame when auto-scrolling an element. */\n        this.autoScrollStep = 2;\n        /**\n         * Function that is used to determine whether an item\n         * is allowed to be moved into a drop container.\n         */\n        this.enterPredicate = () => true;\n        /** Function that is used to determine whether an item can be sorted into a particular index. */\n        this.sortPredicate = () => true;\n        /** Emits right before dragging has started. */\n        this.beforeStarted = new Subject();\n        /**\n         * Emits when the user has moved a new drag item into this container.\n         */\n        this.entered = new Subject();\n        /**\n         * Emits when the user removes an item from the container\n         * by dragging it into another container.\n         */\n        this.exited = new Subject();\n        /** Emits when the user drops an item inside the container. */\n        this.dropped = new Subject();\n        /** Emits as the user is swapping items while actively dragging. */\n        this.sorted = new Subject();\n        /** Emits when a dragging sequence is started in a list connected to the current one. */\n        this.receivingStarted = new Subject();\n        /** Emits when a dragging sequence is stopped from a list connected to the current one. */\n        this.receivingStopped = new Subject();\n        /** Whether an item in the list is being dragged. */\n        this._isDragging = false;\n        /** Draggable items in the container. */\n        this._draggables = [];\n        /** Drop lists that are connected to the current one. */\n        this._siblings = [];\n        /** Connected siblings that currently have a dragged item. */\n        this._activeSiblings = new Set();\n        /** Subscription to the window being scrolled. */\n        this._viewportScrollSubscription = Subscription.EMPTY;\n        /** Vertical direction in which the list is currently scrolling. */\n        this._verticalScrollDirection = 0 /* AutoScrollVerticalDirection.NONE */;\n        /** Horizontal direction in which the list is currently scrolling. */\n        this._horizontalScrollDirection = 0 /* AutoScrollHorizontalDirection.NONE */;\n        /** Used to signal to the current auto-scroll sequence when to stop. */\n        this._stopScrollTimers = new Subject();\n        /** Shadow root of the current element. Necessary for `elementFromPoint` to resolve correctly. */\n        this._cachedShadowRoot = null;\n        /** Starts the interval that'll auto-scroll the element. */\n        this._startScrollInterval = () => {\n            this._stopScrolling();\n            interval(0, animationFrameScheduler)\n                .pipe(takeUntil(this._stopScrollTimers))\n                .subscribe(() => {\n                const node = this._scrollNode;\n                const scrollStep = this.autoScrollStep;\n                if (this._verticalScrollDirection === 1 /* AutoScrollVerticalDirection.UP */) {\n                    node.scrollBy(0, -scrollStep);\n                }\n                else if (this._verticalScrollDirection === 2 /* AutoScrollVerticalDirection.DOWN */) {\n                    node.scrollBy(0, scrollStep);\n                }\n                if (this._horizontalScrollDirection === 1 /* AutoScrollHorizontalDirection.LEFT */) {\n                    node.scrollBy(-scrollStep, 0);\n                }\n                else if (this._horizontalScrollDirection === 2 /* AutoScrollHorizontalDirection.RIGHT */) {\n                    node.scrollBy(scrollStep, 0);\n                }\n            });\n        };\n        this.element = coerceElement(element);\n        this._document = _document;\n        this.withScrollableParents([this.element]);\n        _dragDropRegistry.registerDropContainer(this);\n        this._parentPositions = new ParentPositionTracker(_document);\n        this._sortStrategy = new SingleAxisSortStrategy(this.element, _dragDropRegistry);\n        this._sortStrategy.withSortPredicate((index, item) => this.sortPredicate(index, item, this));\n    }\n    /** Removes the drop list functionality from the DOM element. */\n    dispose() {\n        this._stopScrolling();\n        this._stopScrollTimers.complete();\n        this._viewportScrollSubscription.unsubscribe();\n        this.beforeStarted.complete();\n        this.entered.complete();\n        this.exited.complete();\n        this.dropped.complete();\n        this.sorted.complete();\n        this.receivingStarted.complete();\n        this.receivingStopped.complete();\n        this._activeSiblings.clear();\n        this._scrollNode = null;\n        this._parentPositions.clear();\n        this._dragDropRegistry.removeDropContainer(this);\n    }\n    /** Whether an item from this list is currently being dragged. */\n    isDragging() {\n        return this._isDragging;\n    }\n    /** Starts dragging an item. */\n    start() {\n        this._draggingStarted();\n        this._notifyReceivingSiblings();\n    }\n    /**\n     * Attempts to move an item into the container.\n     * @param item Item that was moved into the container.\n     * @param pointerX Position of the item along the X axis.\n     * @param pointerY Position of the item along the Y axis.\n     * @param index Index at which the item entered. If omitted, the container will try to figure it\n     *   out automatically.\n     */\n    enter(item, pointerX, pointerY, index) {\n        this._draggingStarted();\n        // If sorting is disabled, we want the item to return to its starting\n        // position if the user is returning it to its initial container.\n        if (index == null && this.sortingDisabled) {\n            index = this._draggables.indexOf(item);\n        }\n        this._sortStrategy.enter(item, pointerX, pointerY, index);\n        // Note that this usually happens inside `_draggingStarted` as well, but the dimensions\n        // can change when the sort strategy moves the item around inside `enter`.\n        this._cacheParentPositions();\n        // Notify siblings at the end so that the item has been inserted into the `activeDraggables`.\n        this._notifyReceivingSiblings();\n        this.entered.next({ item, container: this, currentIndex: this.getItemIndex(item) });\n    }\n    /**\n     * Removes an item from the container after it was dragged into another container by the user.\n     * @param item Item that was dragged out.\n     */\n    exit(item) {\n        this._reset();\n        this.exited.next({ item, container: this });\n    }\n    /**\n     * Drops an item into this container.\n     * @param item Item being dropped into the container.\n     * @param currentIndex Index at which the item should be inserted.\n     * @param previousIndex Index of the item when dragging started.\n     * @param previousContainer Container from which the item got dragged in.\n     * @param isPointerOverContainer Whether the user's pointer was over the\n     *    container when the item was dropped.\n     * @param distance Distance the user has dragged since the start of the dragging sequence.\n     * @param event Event that triggered the dropping sequence.\n     *\n     * @breaking-change 15.0.0 `previousIndex` and `event` parameters to become required.\n     */\n    drop(item, currentIndex, previousIndex, previousContainer, isPointerOverContainer, distance, dropPoint, event = {}) {\n        this._reset();\n        this.dropped.next({\n            item,\n            currentIndex,\n            previousIndex,\n            container: this,\n            previousContainer,\n            isPointerOverContainer,\n            distance,\n            dropPoint,\n            event,\n        });\n    }\n    /**\n     * Sets the draggable items that are a part of this list.\n     * @param items Items that are a part of this list.\n     */\n    withItems(items) {\n        const previousItems = this._draggables;\n        this._draggables = items;\n        items.forEach(item => item._withDropContainer(this));\n        if (this.isDragging()) {\n            const draggedItems = previousItems.filter(item => item.isDragging());\n            // If all of the items being dragged were removed\n            // from the list, abort the current drag sequence.\n            if (draggedItems.every(item => items.indexOf(item) === -1)) {\n                this._reset();\n            }\n            else {\n                this._sortStrategy.withItems(this._draggables);\n            }\n        }\n        return this;\n    }\n    /** Sets the layout direction of the drop list. */\n    withDirection(direction) {\n        this._sortStrategy.direction = direction;\n        return this;\n    }\n    /**\n     * Sets the containers that are connected to this one. When two or more containers are\n     * connected, the user will be allowed to transfer items between them.\n     * @param connectedTo Other containers that the current containers should be connected to.\n     */\n    connectedTo(connectedTo) {\n        this._siblings = connectedTo.slice();\n        return this;\n    }\n    /**\n     * Sets the orientation of the container.\n     * @param orientation New orientation for the container.\n     */\n    withOrientation(orientation) {\n        // TODO(crisbeto): eventually we should be constructing the new sort strategy here based on\n        // the new orientation. For now we can assume that it'll always be `SingleAxisSortStrategy`.\n        this._sortStrategy.orientation = orientation;\n        return this;\n    }\n    /**\n     * Sets which parent elements are can be scrolled while the user is dragging.\n     * @param elements Elements that can be scrolled.\n     */\n    withScrollableParents(elements) {\n        const element = coerceElement(this.element);\n        // We always allow the current element to be scrollable\n        // so we need to ensure that it's in the array.\n        this._scrollableElements =\n            elements.indexOf(element) === -1 ? [element, ...elements] : elements.slice();\n        return this;\n    }\n    /** Gets the scrollable parents that are registered with this drop container. */\n    getScrollableParents() {\n        return this._scrollableElements;\n    }\n    /**\n     * Figures out the index of an item in the container.\n     * @param item Item whose index should be determined.\n     */\n    getItemIndex(item) {\n        return this._isDragging\n            ? this._sortStrategy.getItemIndex(item)\n            : this._draggables.indexOf(item);\n    }\n    /**\n     * Whether the list is able to receive the item that\n     * is currently being dragged inside a connected drop list.\n     */\n    isReceiving() {\n        return this._activeSiblings.size > 0;\n    }\n    /**\n     * Sorts an item inside the container based on its position.\n     * @param item Item to be sorted.\n     * @param pointerX Position of the item along the X axis.\n     * @param pointerY Position of the item along the Y axis.\n     * @param pointerDelta Direction in which the pointer is moving along each axis.\n     */\n    _sortItem(item, pointerX, pointerY, pointerDelta) {\n        // Don't sort the item if sorting is disabled or it's out of range.\n        if (this.sortingDisabled ||\n            !this._clientRect ||\n            !isPointerNearClientRect(this._clientRect, DROP_PROXIMITY_THRESHOLD, pointerX, pointerY)) {\n            return;\n        }\n        const result = this._sortStrategy.sort(item, pointerX, pointerY, pointerDelta);\n        if (result) {\n            this.sorted.next({\n                previousIndex: result.previousIndex,\n                currentIndex: result.currentIndex,\n                container: this,\n                item,\n            });\n        }\n    }\n    /**\n     * Checks whether the user's pointer is close to the edges of either the\n     * viewport or the drop list and starts the auto-scroll sequence.\n     * @param pointerX User's pointer position along the x axis.\n     * @param pointerY User's pointer position along the y axis.\n     */\n    _startScrollingIfNecessary(pointerX, pointerY) {\n        if (this.autoScrollDisabled) {\n            return;\n        }\n        let scrollNode;\n        let verticalScrollDirection = 0 /* AutoScrollVerticalDirection.NONE */;\n        let horizontalScrollDirection = 0 /* AutoScrollHorizontalDirection.NONE */;\n        // Check whether we should start scrolling any of the parent containers.\n        this._parentPositions.positions.forEach((position, element) => {\n            // We have special handling for the `document` below. Also this would be\n            // nicer with a  for...of loop, but it requires changing a compiler flag.\n            if (element === this._document || !position.clientRect || scrollNode) {\n                return;\n            }\n            if (isPointerNearClientRect(position.clientRect, DROP_PROXIMITY_THRESHOLD, pointerX, pointerY)) {\n                [verticalScrollDirection, horizontalScrollDirection] = getElementScrollDirections(element, position.clientRect, pointerX, pointerY);\n                if (verticalScrollDirection || horizontalScrollDirection) {\n                    scrollNode = element;\n                }\n            }\n        });\n        // Otherwise check if we can start scrolling the viewport.\n        if (!verticalScrollDirection && !horizontalScrollDirection) {\n            const { width, height } = this._viewportRuler.getViewportSize();\n            const clientRect = {\n                width,\n                height,\n                top: 0,\n                right: width,\n                bottom: height,\n                left: 0,\n            };\n            verticalScrollDirection = getVerticalScrollDirection(clientRect, pointerY);\n            horizontalScrollDirection = getHorizontalScrollDirection(clientRect, pointerX);\n            scrollNode = window;\n        }\n        if (scrollNode &&\n            (verticalScrollDirection !== this._verticalScrollDirection ||\n                horizontalScrollDirection !== this._horizontalScrollDirection ||\n                scrollNode !== this._scrollNode)) {\n            this._verticalScrollDirection = verticalScrollDirection;\n            this._horizontalScrollDirection = horizontalScrollDirection;\n            this._scrollNode = scrollNode;\n            if ((verticalScrollDirection || horizontalScrollDirection) && scrollNode) {\n                this._ngZone.runOutsideAngular(this._startScrollInterval);\n            }\n            else {\n                this._stopScrolling();\n            }\n        }\n    }\n    /** Stops any currently-running auto-scroll sequences. */\n    _stopScrolling() {\n        this._stopScrollTimers.next();\n    }\n    /** Starts the dragging sequence within the list. */\n    _draggingStarted() {\n        const styles = coerceElement(this.element).style;\n        this.beforeStarted.next();\n        this._isDragging = true;\n        // We need to disable scroll snapping while the user is dragging, because it breaks automatic\n        // scrolling. The browser seems to round the value based on the snapping points which means\n        // that we can't increment/decrement the scroll position.\n        this._initialScrollSnap = styles.msScrollSnapType || styles.scrollSnapType || '';\n        styles.scrollSnapType = styles.msScrollSnapType = 'none';\n        this._sortStrategy.start(this._draggables);\n        this._cacheParentPositions();\n        this._viewportScrollSubscription.unsubscribe();\n        this._listenToScrollEvents();\n    }\n    /** Caches the positions of the configured scrollable parents. */\n    _cacheParentPositions() {\n        const element = coerceElement(this.element);\n        this._parentPositions.cache(this._scrollableElements);\n        // The list element is always in the `scrollableElements`\n        // so we can take advantage of the cached `ClientRect`.\n        this._clientRect = this._parentPositions.positions.get(element).clientRect;\n    }\n    /** Resets the container to its initial state. */\n    _reset() {\n        this._isDragging = false;\n        const styles = coerceElement(this.element).style;\n        styles.scrollSnapType = styles.msScrollSnapType = this._initialScrollSnap;\n        this._siblings.forEach(sibling => sibling._stopReceiving(this));\n        this._sortStrategy.reset();\n        this._stopScrolling();\n        this._viewportScrollSubscription.unsubscribe();\n        this._parentPositions.clear();\n    }\n    /**\n     * Checks whether the user's pointer is positioned over the container.\n     * @param x Pointer position along the X axis.\n     * @param y Pointer position along the Y axis.\n     */\n    _isOverContainer(x, y) {\n        return this._clientRect != null && isInsideClientRect(this._clientRect, x, y);\n    }\n    /**\n     * Figures out whether an item should be moved into a sibling\n     * drop container, based on its current position.\n     * @param item Drag item that is being moved.\n     * @param x Position of the item along the X axis.\n     * @param y Position of the item along the Y axis.\n     */\n    _getSiblingContainerFromPosition(item, x, y) {\n        return this._siblings.find(sibling => sibling._canReceive(item, x, y));\n    }\n    /**\n     * Checks whether the drop list can receive the passed-in item.\n     * @param item Item that is being dragged into the list.\n     * @param x Position of the item along the X axis.\n     * @param y Position of the item along the Y axis.\n     */\n    _canReceive(item, x, y) {\n        if (!this._clientRect ||\n            !isInsideClientRect(this._clientRect, x, y) ||\n            !this.enterPredicate(item, this)) {\n            return false;\n        }\n        const elementFromPoint = this._getShadowRoot().elementFromPoint(x, y);\n        // If there's no element at the pointer position, then\n        // the client rect is probably scrolled out of the view.\n        if (!elementFromPoint) {\n            return false;\n        }\n        const nativeElement = coerceElement(this.element);\n        // The `ClientRect`, that we're using to find the container over which the user is\n        // hovering, doesn't give us any information on whether the element has been scrolled\n        // out of the view or whether it's overlapping with other containers. This means that\n        // we could end up transferring the item into a container that's invisible or is positioned\n        // below another one. We use the result from `elementFromPoint` to get the top-most element\n        // at the pointer position and to find whether it's one of the intersecting drop containers.\n        return elementFromPoint === nativeElement || nativeElement.contains(elementFromPoint);\n    }\n    /**\n     * Called by one of the connected drop lists when a dragging sequence has started.\n     * @param sibling Sibling in which dragging has started.\n     */\n    _startReceiving(sibling, items) {\n        const activeSiblings = this._activeSiblings;\n        if (!activeSiblings.has(sibling) &&\n            items.every(item => {\n                // Note that we have to add an exception to the `enterPredicate` for items that started off\n                // in this drop list. The drag ref has logic that allows an item to return to its initial\n                // container, if it has left the initial container and none of the connected containers\n                // allow it to enter. See `DragRef._updateActiveDropContainer` for more context.\n                return this.enterPredicate(item, this) || this._draggables.indexOf(item) > -1;\n            })) {\n            activeSiblings.add(sibling);\n            this._cacheParentPositions();\n            this._listenToScrollEvents();\n            this.receivingStarted.next({\n                initiator: sibling,\n                receiver: this,\n                items,\n            });\n        }\n    }\n    /**\n     * Called by a connected drop list when dragging has stopped.\n     * @param sibling Sibling whose dragging has stopped.\n     */\n    _stopReceiving(sibling) {\n        this._activeSiblings.delete(sibling);\n        this._viewportScrollSubscription.unsubscribe();\n        this.receivingStopped.next({ initiator: sibling, receiver: this });\n    }\n    /**\n     * Starts listening to scroll events on the viewport.\n     * Used for updating the internal state of the list.\n     */\n    _listenToScrollEvents() {\n        this._viewportScrollSubscription = this._dragDropRegistry\n            .scrolled(this._getShadowRoot())\n            .subscribe(event => {\n            if (this.isDragging()) {\n                const scrollDifference = this._parentPositions.handleScroll(event);\n                if (scrollDifference) {\n                    this._sortStrategy.updateOnScroll(scrollDifference.top, scrollDifference.left);\n                }\n            }\n            else if (this.isReceiving()) {\n                this._cacheParentPositions();\n            }\n        });\n    }\n    /**\n     * Lazily resolves and returns the shadow root of the element. We do this in a function, rather\n     * than saving it in property directly on init, because we want to resolve it as late as possible\n     * in order to ensure that the element has been moved into the shadow DOM. Doing it inside the\n     * constructor might be too early if the element is inside of something like `ngFor` or `ngIf`.\n     */\n    _getShadowRoot() {\n        if (!this._cachedShadowRoot) {\n            const shadowRoot = _getShadowRoot(coerceElement(this.element));\n            this._cachedShadowRoot = (shadowRoot || this._document);\n        }\n        return this._cachedShadowRoot;\n    }\n    /** Notifies any siblings that may potentially receive the item. */\n    _notifyReceivingSiblings() {\n        const draggedItems = this._sortStrategy\n            .getActiveItemsSnapshot()\n            .filter(item => item.isDragging());\n        this._siblings.forEach(sibling => sibling._startReceiving(this, draggedItems));\n    }\n}\n/**\n * Gets whether the vertical auto-scroll direction of a node.\n * @param clientRect Dimensions of the node.\n * @param pointerY Position of the user's pointer along the y axis.\n */\nfunction getVerticalScrollDirection(clientRect, pointerY) {\n    const { top, bottom, height } = clientRect;\n    const yThreshold = height * SCROLL_PROXIMITY_THRESHOLD;\n    if (pointerY >= top - yThreshold && pointerY <= top + yThreshold) {\n        return 1 /* AutoScrollVerticalDirection.UP */;\n    }\n    else if (pointerY >= bottom - yThreshold && pointerY <= bottom + yThreshold) {\n        return 2 /* AutoScrollVerticalDirection.DOWN */;\n    }\n    return 0 /* AutoScrollVerticalDirection.NONE */;\n}\n/**\n * Gets whether the horizontal auto-scroll direction of a node.\n * @param clientRect Dimensions of the node.\n * @param pointerX Position of the user's pointer along the x axis.\n */\nfunction getHorizontalScrollDirection(clientRect, pointerX) {\n    const { left, right, width } = clientRect;\n    const xThreshold = width * SCROLL_PROXIMITY_THRESHOLD;\n    if (pointerX >= left - xThreshold && pointerX <= left + xThreshold) {\n        return 1 /* AutoScrollHorizontalDirection.LEFT */;\n    }\n    else if (pointerX >= right - xThreshold && pointerX <= right + xThreshold) {\n        return 2 /* AutoScrollHorizontalDirection.RIGHT */;\n    }\n    return 0 /* AutoScrollHorizontalDirection.NONE */;\n}\n/**\n * Gets the directions in which an element node should be scrolled,\n * assuming that the user's pointer is already within it scrollable region.\n * @param element Element for which we should calculate the scroll direction.\n * @param clientRect Bounding client rectangle of the element.\n * @param pointerX Position of the user's pointer along the x axis.\n * @param pointerY Position of the user's pointer along the y axis.\n */\nfunction getElementScrollDirections(element, clientRect, pointerX, pointerY) {\n    const computedVertical = getVerticalScrollDirection(clientRect, pointerY);\n    const computedHorizontal = getHorizontalScrollDirection(clientRect, pointerX);\n    let verticalScrollDirection = 0 /* AutoScrollVerticalDirection.NONE */;\n    let horizontalScrollDirection = 0 /* AutoScrollHorizontalDirection.NONE */;\n    // Note that we here we do some extra checks for whether the element is actually scrollable in\n    // a certain direction and we only assign the scroll direction if it is. We do this so that we\n    // can allow other elements to be scrolled, if the current element can't be scrolled anymore.\n    // This allows us to handle cases where the scroll regions of two scrollable elements overlap.\n    if (computedVertical) {\n        const scrollTop = element.scrollTop;\n        if (computedVertical === 1 /* AutoScrollVerticalDirection.UP */) {\n            if (scrollTop > 0) {\n                verticalScrollDirection = 1 /* AutoScrollVerticalDirection.UP */;\n            }\n        }\n        else if (element.scrollHeight - scrollTop > element.clientHeight) {\n            verticalScrollDirection = 2 /* AutoScrollVerticalDirection.DOWN */;\n        }\n    }\n    if (computedHorizontal) {\n        const scrollLeft = element.scrollLeft;\n        if (computedHorizontal === 1 /* AutoScrollHorizontalDirection.LEFT */) {\n            if (scrollLeft > 0) {\n                horizontalScrollDirection = 1 /* AutoScrollHorizontalDirection.LEFT */;\n            }\n        }\n        else if (element.scrollWidth - scrollLeft > element.clientWidth) {\n            horizontalScrollDirection = 2 /* AutoScrollHorizontalDirection.RIGHT */;\n        }\n    }\n    return [verticalScrollDirection, horizontalScrollDirection];\n}\n\n/** Event options that can be used to bind an active, capturing event. */\nconst activeCapturingEventOptions = normalizePassiveListenerOptions({\n    passive: false,\n    capture: true,\n});\n/**\n * Service that keeps track of all the drag item and drop container\n * instances, and manages global event listeners on the `document`.\n * @docs-private\n */\n// Note: this class is generic, rather than referencing CdkDrag and CdkDropList directly, in order\n// to avoid circular imports. If we were to reference them here, importing the registry into the\n// classes that are registering themselves will introduce a circular import.\nclass DragDropRegistry {\n    constructor(_ngZone, _document) {\n        this._ngZone = _ngZone;\n        /** Registered drop container instances. */\n        this._dropInstances = new Set();\n        /** Registered drag item instances. */\n        this._dragInstances = new Set();\n        /** Drag item instances that are currently being dragged. */\n        this._activeDragInstances = [];\n        /** Keeps track of the event listeners that we've bound to the `document`. */\n        this._globalListeners = new Map();\n        /**\n         * Predicate function to check if an item is being dragged.  Moved out into a property,\n         * because it'll be called a lot and we don't want to create a new function every time.\n         */\n        this._draggingPredicate = (item) => item.isDragging();\n        /**\n         * Emits the `touchmove` or `mousemove` events that are dispatched\n         * while the user is dragging a drag item instance.\n         */\n        this.pointerMove = new Subject();\n        /**\n         * Emits the `touchend` or `mouseup` events that are dispatched\n         * while the user is dragging a drag item instance.\n         */\n        this.pointerUp = new Subject();\n        /**\n         * Emits when the viewport has been scrolled while the user is dragging an item.\n         * @deprecated To be turned into a private member. Use the `scrolled` method instead.\n         * @breaking-change 13.0.0\n         */\n        this.scroll = new Subject();\n        /**\n         * Event listener that will prevent the default browser action while the user is dragging.\n         * @param event Event whose default action should be prevented.\n         */\n        this._preventDefaultWhileDragging = (event) => {\n            if (this._activeDragInstances.length > 0) {\n                event.preventDefault();\n            }\n        };\n        /** Event listener for `touchmove` that is bound even if no dragging is happening. */\n        this._persistentTouchmoveListener = (event) => {\n            if (this._activeDragInstances.length > 0) {\n                // Note that we only want to prevent the default action after dragging has actually started.\n                // Usually this is the same time at which the item is added to the `_activeDragInstances`,\n                // but it could be pushed back if the user has set up a drag delay or threshold.\n                if (this._activeDragInstances.some(this._draggingPredicate)) {\n                    event.preventDefault();\n                }\n                this.pointerMove.next(event);\n            }\n        };\n        this._document = _document;\n    }\n    /** Adds a drop container to the registry. */\n    registerDropContainer(drop) {\n        if (!this._dropInstances.has(drop)) {\n            this._dropInstances.add(drop);\n        }\n    }\n    /** Adds a drag item instance to the registry. */\n    registerDragItem(drag) {\n        this._dragInstances.add(drag);\n        // The `touchmove` event gets bound once, ahead of time, because WebKit\n        // won't preventDefault on a dynamically-added `touchmove` listener.\n        // See https://bugs.webkit.org/show_bug.cgi?id=184250.\n        if (this._dragInstances.size === 1) {\n            this._ngZone.runOutsideAngular(() => {\n                // The event handler has to be explicitly active,\n                // because newer browsers make it passive by default.\n                this._document.addEventListener('touchmove', this._persistentTouchmoveListener, activeCapturingEventOptions);\n            });\n        }\n    }\n    /** Removes a drop container from the registry. */\n    removeDropContainer(drop) {\n        this._dropInstances.delete(drop);\n    }\n    /** Removes a drag item instance from the registry. */\n    removeDragItem(drag) {\n        this._dragInstances.delete(drag);\n        this.stopDragging(drag);\n        if (this._dragInstances.size === 0) {\n            this._document.removeEventListener('touchmove', this._persistentTouchmoveListener, activeCapturingEventOptions);\n        }\n    }\n    /**\n     * Starts the dragging sequence for a drag instance.\n     * @param drag Drag instance which is being dragged.\n     * @param event Event that initiated the dragging.\n     */\n    startDragging(drag, event) {\n        // Do not process the same drag twice to avoid memory leaks and redundant listeners\n        if (this._activeDragInstances.indexOf(drag) > -1) {\n            return;\n        }\n        this._activeDragInstances.push(drag);\n        if (this._activeDragInstances.length === 1) {\n            const isTouchEvent = event.type.startsWith('touch');\n            // We explicitly bind __active__ listeners here, because newer browsers will default to\n            // passive ones for `mousemove` and `touchmove`. The events need to be active, because we\n            // use `preventDefault` to prevent the page from scrolling while the user is dragging.\n            this._globalListeners\n                .set(isTouchEvent ? 'touchend' : 'mouseup', {\n                handler: (e) => this.pointerUp.next(e),\n                options: true,\n            })\n                .set('scroll', {\n                handler: (e) => this.scroll.next(e),\n                // Use capturing so that we pick up scroll changes in any scrollable nodes that aren't\n                // the document. See https://github.com/angular/components/issues/17144.\n                options: true,\n            })\n                // Preventing the default action on `mousemove` isn't enough to disable text selection\n                // on Safari so we need to prevent the selection event as well. Alternatively this can\n                // be done by setting `user-select: none` on the `body`, however it has causes a style\n                // recalculation which can be expensive on pages with a lot of elements.\n                .set('selectstart', {\n                handler: this._preventDefaultWhileDragging,\n                options: activeCapturingEventOptions,\n            });\n            // We don't have to bind a move event for touch drag sequences, because\n            // we already have a persistent global one bound from `registerDragItem`.\n            if (!isTouchEvent) {\n                this._globalListeners.set('mousemove', {\n                    handler: (e) => this.pointerMove.next(e),\n                    options: activeCapturingEventOptions,\n                });\n            }\n            this._ngZone.runOutsideAngular(() => {\n                this._globalListeners.forEach((config, name) => {\n                    this._document.addEventListener(name, config.handler, config.options);\n                });\n            });\n        }\n    }\n    /** Stops dragging a drag item instance. */\n    stopDragging(drag) {\n        const index = this._activeDragInstances.indexOf(drag);\n        if (index > -1) {\n            this._activeDragInstances.splice(index, 1);\n            if (this._activeDragInstances.length === 0) {\n                this._clearGlobalListeners();\n            }\n        }\n    }\n    /** Gets whether a drag item instance is currently being dragged. */\n    isDragging(drag) {\n        return this._activeDragInstances.indexOf(drag) > -1;\n    }\n    /**\n     * Gets a stream that will emit when any element on the page is scrolled while an item is being\n     * dragged.\n     * @param shadowRoot Optional shadow root that the current dragging sequence started from.\n     *   Top-level listeners won't pick up events coming from the shadow DOM so this parameter can\n     *   be used to include an additional top-level listener at the shadow root level.\n     */\n    scrolled(shadowRoot) {\n        const streams = [this.scroll];\n        if (shadowRoot && shadowRoot !== this._document) {\n            // Note that this is basically the same as `fromEvent` from rxjs, but we do it ourselves,\n            // because we want to guarantee that the event is bound outside of the `NgZone`. With\n            // `fromEvent` it'll only happen if the subscription is outside the `NgZone`.\n            streams.push(new Observable((observer) => {\n                return this._ngZone.runOutsideAngular(() => {\n                    const eventOptions = true;\n                    const callback = (event) => {\n                        if (this._activeDragInstances.length) {\n                            observer.next(event);\n                        }\n                    };\n                    shadowRoot.addEventListener('scroll', callback, eventOptions);\n                    return () => {\n                        shadowRoot.removeEventListener('scroll', callback, eventOptions);\n                    };\n                });\n            }));\n        }\n        return merge(...streams);\n    }\n    ngOnDestroy() {\n        this._dragInstances.forEach(instance => this.removeDragItem(instance));\n        this._dropInstances.forEach(instance => this.removeDropContainer(instance));\n        this._clearGlobalListeners();\n        this.pointerMove.complete();\n        this.pointerUp.complete();\n    }\n    /** Clears out the global event listeners from the `document`. */\n    _clearGlobalListeners() {\n        this._globalListeners.forEach((config, name) => {\n            this._document.removeEventListener(name, config.handler, config.options);\n        });\n        this._globalListeners.clear();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: DragDropRegistry, deps: [{ token: i0.NgZone }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: DragDropRegistry, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: DragDropRegistry, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }] });\n\n/** Default configuration to be used when creating a `DragRef`. */\nconst DEFAULT_CONFIG = {\n    dragStartThreshold: 5,\n    pointerDirectionChangeThreshold: 5,\n};\n/**\n * Service that allows for drag-and-drop functionality to be attached to DOM elements.\n */\nclass DragDrop {\n    constructor(_document, _ngZone, _viewportRuler, _dragDropRegistry) {\n        this._document = _document;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._dragDropRegistry = _dragDropRegistry;\n    }\n    /**\n     * Turns an element into a draggable item.\n     * @param element Element to which to attach the dragging functionality.\n     * @param config Object used to configure the dragging behavior.\n     */\n    createDrag(element, config = DEFAULT_CONFIG) {\n        return new DragRef(element, config, this._document, this._ngZone, this._viewportRuler, this._dragDropRegistry);\n    }\n    /**\n     * Turns an element into a drop list.\n     * @param element Element to which to attach the drop list functionality.\n     */\n    createDropList(element) {\n        return new DropListRef(element, this._dragDropRegistry, this._document, this._ngZone, this._viewportRuler);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: DragDrop, deps: [{ token: DOCUMENT }, { token: i0.NgZone }, { token: i1.ViewportRuler }, { token: DragDropRegistry }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: DragDrop, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: DragDrop, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i0.NgZone }, { type: i1.ViewportRuler }, { type: DragDropRegistry }] });\n\n/**\n * Injection token that can be used for a `CdkDrag` to provide itself as a parent to the\n * drag-specific child directive (`CdkDragHandle`, `CdkDragPreview` etc.). Used primarily\n * to avoid circular imports.\n * @docs-private\n */\nconst CDK_DRAG_PARENT = new InjectionToken('CDK_DRAG_PARENT');\n\n/**\n * Asserts that a particular node is an element.\n * @param node Node to be checked.\n * @param name Name to attach to the error message.\n */\nfunction assertElementNode(node, name) {\n    if (node.nodeType !== 1) {\n        throw Error(`${name} must be attached to an element node. ` + `Currently attached to \"${node.nodeName}\".`);\n    }\n}\n\n/**\n * Injection token that can be used to reference instances of `CdkDragHandle`. It serves as\n * alternative token to the actual `CdkDragHandle` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DRAG_HANDLE = new InjectionToken('CdkDragHandle');\n/** Handle that can be used to drag a CdkDrag instance. */\nclass CdkDragHandle {\n    /** Whether starting to drag through this handle is disabled. */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = value;\n        this._stateChanges.next(this);\n    }\n    constructor(element, parentDrag) {\n        this.element = element;\n        /** Emits when the state of the handle has changed. */\n        this._stateChanges = new Subject();\n        this._disabled = false;\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            assertElementNode(element.nativeElement, 'cdkDragHandle');\n        }\n        this._parentDrag = parentDrag;\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: CdkDragHandle, deps: [{ token: i0.ElementRef }, { token: CDK_DRAG_PARENT, optional: true, skipSelf: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"17.0.4\", type: CdkDragHandle, isStandalone: true, selector: \"[cdkDragHandle]\", inputs: { disabled: [\"cdkDragHandleDisabled\", \"disabled\", booleanAttribute] }, host: { classAttribute: \"cdk-drag-handle\" }, providers: [{ provide: CDK_DRAG_HANDLE, useExisting: CdkDragHandle }], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: CdkDragHandle, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkDragHandle]',\n                    standalone: true,\n                    host: {\n                        'class': 'cdk-drag-handle',\n                    },\n                    providers: [{ provide: CDK_DRAG_HANDLE, useExisting: CdkDragHandle }],\n                }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [CDK_DRAG_PARENT]\n                }, {\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }] }], propDecorators: { disabled: [{\n                type: Input,\n                args: [{ alias: 'cdkDragHandleDisabled', transform: booleanAttribute }]\n            }] } });\n\n/**\n * Injection token that can be used to reference instances of `CdkDragPlaceholder`. It serves as\n * alternative token to the actual `CdkDragPlaceholder` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DRAG_PLACEHOLDER = new InjectionToken('CdkDragPlaceholder');\n/**\n * Element that will be used as a template for the placeholder of a CdkDrag when\n * it is being dragged. The placeholder is displayed in place of the element being dragged.\n */\nclass CdkDragPlaceholder {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: CdkDragPlaceholder, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.0.4\", type: CdkDragPlaceholder, isStandalone: true, selector: \"ng-template[cdkDragPlaceholder]\", inputs: { data: \"data\" }, providers: [{ provide: CDK_DRAG_PLACEHOLDER, useExisting: CdkDragPlaceholder }], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: CdkDragPlaceholder, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[cdkDragPlaceholder]',\n                    standalone: true,\n                    providers: [{ provide: CDK_DRAG_PLACEHOLDER, useExisting: CdkDragPlaceholder }],\n                }]\n        }], ctorParameters: () => [{ type: i0.TemplateRef }], propDecorators: { data: [{\n                type: Input\n            }] } });\n\n/**\n * Injection token that can be used to reference instances of `CdkDragPreview`. It serves as\n * alternative token to the actual `CdkDragPreview` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DRAG_PREVIEW = new InjectionToken('CdkDragPreview');\n/**\n * Element that will be used as a template for the preview\n * of a CdkDrag when it is being dragged.\n */\nclass CdkDragPreview {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n        /** Whether the preview should preserve the same size as the item that is being dragged. */\n        this.matchSize = false;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: CdkDragPreview, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"17.0.4\", type: CdkDragPreview, isStandalone: true, selector: \"ng-template[cdkDragPreview]\", inputs: { data: \"data\", matchSize: [\"matchSize\", \"matchSize\", booleanAttribute] }, providers: [{ provide: CDK_DRAG_PREVIEW, useExisting: CdkDragPreview }], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: CdkDragPreview, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[cdkDragPreview]',\n                    standalone: true,\n                    providers: [{ provide: CDK_DRAG_PREVIEW, useExisting: CdkDragPreview }],\n                }]\n        }], ctorParameters: () => [{ type: i0.TemplateRef }], propDecorators: { data: [{\n                type: Input\n            }], matchSize: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }] } });\n\n/**\n * Injection token that can be used to configure the\n * behavior of the drag&drop-related components.\n */\nconst CDK_DRAG_CONFIG = new InjectionToken('CDK_DRAG_CONFIG');\n\nconst DRAG_HOST_CLASS = 'cdk-drag';\n/**\n * Injection token that can be used to reference instances of `CdkDropList`. It serves as\n * alternative token to the actual `CdkDropList` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DROP_LIST = new InjectionToken('CdkDropList');\n/** Element that can be moved inside a CdkDropList container. */\nclass CdkDrag {\n    static { this._dragInstances = []; }\n    /** Whether starting to drag this element is disabled. */\n    get disabled() {\n        return this._disabled || (this.dropContainer && this.dropContainer.disabled);\n    }\n    set disabled(value) {\n        this._disabled = value;\n        this._dragRef.disabled = this._disabled;\n    }\n    constructor(\n    /** Element that the draggable is attached to. */\n    element, \n    /** Droppable container that the draggable is a part of. */\n    dropContainer, \n    /**\n     * @deprecated `_document` parameter no longer being used and will be removed.\n     * @breaking-change 12.0.0\n     */\n    _document, _ngZone, _viewContainerRef, config, _dir, dragDrop, _changeDetectorRef, _selfHandle, _parentDrag) {\n        this.element = element;\n        this.dropContainer = dropContainer;\n        this._ngZone = _ngZone;\n        this._viewContainerRef = _viewContainerRef;\n        this._dir = _dir;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._selfHandle = _selfHandle;\n        this._parentDrag = _parentDrag;\n        this._destroyed = new Subject();\n        /** Emits when the user starts dragging the item. */\n        this.started = new EventEmitter();\n        /** Emits when the user has released a drag item, before any animations have started. */\n        this.released = new EventEmitter();\n        /** Emits when the user stops dragging an item in the container. */\n        this.ended = new EventEmitter();\n        /** Emits when the user has moved the item into a new container. */\n        this.entered = new EventEmitter();\n        /** Emits when the user removes the item its container by dragging it into another container. */\n        this.exited = new EventEmitter();\n        /** Emits when the user drops the item inside a container. */\n        this.dropped = new EventEmitter();\n        /**\n         * Emits as the user is dragging the item. Use with caution,\n         * because this event will fire for every pixel that the user has dragged.\n         */\n        this.moved = new Observable((observer) => {\n            const subscription = this._dragRef.moved\n                .pipe(map(movedEvent => ({\n                source: this,\n                pointerPosition: movedEvent.pointerPosition,\n                event: movedEvent.event,\n                delta: movedEvent.delta,\n                distance: movedEvent.distance,\n            })))\n                .subscribe(observer);\n            return () => {\n                subscription.unsubscribe();\n            };\n        });\n        this._dragRef = dragDrop.createDrag(element, {\n            dragStartThreshold: config && config.dragStartThreshold != null ? config.dragStartThreshold : 5,\n            pointerDirectionChangeThreshold: config && config.pointerDirectionChangeThreshold != null\n                ? config.pointerDirectionChangeThreshold\n                : 5,\n            zIndex: config?.zIndex,\n        });\n        this._dragRef.data = this;\n        // We have to keep track of the drag instances in order to be able to match an element to\n        // a drag instance. We can't go through the global registry of `DragRef`, because the root\n        // element could be different.\n        CdkDrag._dragInstances.push(this);\n        if (config) {\n            this._assignDefaults(config);\n        }\n        // Note that usually the container is assigned when the drop list is picks up the item, but in\n        // some cases (mainly transplanted views with OnPush, see #18341) we may end up in a situation\n        // where there are no items on the first change detection pass, but the items get picked up as\n        // soon as the user triggers another pass by dragging. This is a problem, because the item would\n        // have to switch from standalone mode to drag mode in the middle of the dragging sequence which\n        // is too late since the two modes save different kinds of information. We work around it by\n        // assigning the drop container both from here and the list.\n        if (dropContainer) {\n            this._dragRef._withDropContainer(dropContainer._dropListRef);\n            dropContainer.addItem(this);\n        }\n        this._syncInputs(this._dragRef);\n        this._handleEvents(this._dragRef);\n    }\n    /**\n     * Returns the element that is being used as a placeholder\n     * while the current element is being dragged.\n     */\n    getPlaceholderElement() {\n        return this._dragRef.getPlaceholderElement();\n    }\n    /** Returns the root draggable element. */\n    getRootElement() {\n        return this._dragRef.getRootElement();\n    }\n    /** Resets a standalone drag item to its initial position. */\n    reset() {\n        this._dragRef.reset();\n    }\n    /**\n     * Gets the pixel coordinates of the draggable outside of a drop container.\n     */\n    getFreeDragPosition() {\n        return this._dragRef.getFreeDragPosition();\n    }\n    /**\n     * Sets the current position in pixels the draggable outside of a drop container.\n     * @param value New position to be set.\n     */\n    setFreeDragPosition(value) {\n        this._dragRef.setFreeDragPosition(value);\n    }\n    ngAfterViewInit() {\n        // Normally this isn't in the zone, but it can cause major performance regressions for apps\n        // using `zone-patch-rxjs` because it'll trigger a change detection when it unsubscribes.\n        this._ngZone.runOutsideAngular(() => {\n            // We need to wait for the zone to stabilize, in order for the reference\n            // element to be in the proper place in the DOM. This is mostly relevant\n            // for draggable elements inside portals since they get stamped out in\n            // their original DOM position and then they get transferred to the portal.\n            this._ngZone.onStable.pipe(take(1), takeUntil(this._destroyed)).subscribe(() => {\n                this._updateRootElement();\n                this._setupHandlesListener();\n                if (this.freeDragPosition) {\n                    this._dragRef.setFreeDragPosition(this.freeDragPosition);\n                }\n            });\n        });\n    }\n    ngOnChanges(changes) {\n        const rootSelectorChange = changes['rootElementSelector'];\n        const positionChange = changes['freeDragPosition'];\n        // We don't have to react to the first change since it's being\n        // handled in `ngAfterViewInit` where it needs to be deferred.\n        if (rootSelectorChange && !rootSelectorChange.firstChange) {\n            this._updateRootElement();\n        }\n        // Skip the first change since it's being handled in `ngAfterViewInit`.\n        if (positionChange && !positionChange.firstChange && this.freeDragPosition) {\n            this._dragRef.setFreeDragPosition(this.freeDragPosition);\n        }\n    }\n    ngOnDestroy() {\n        if (this.dropContainer) {\n            this.dropContainer.removeItem(this);\n        }\n        const index = CdkDrag._dragInstances.indexOf(this);\n        if (index > -1) {\n            CdkDrag._dragInstances.splice(index, 1);\n        }\n        // Unnecessary in most cases, but used to avoid extra change detections with `zone-paths-rxjs`.\n        this._ngZone.runOutsideAngular(() => {\n            this._destroyed.next();\n            this._destroyed.complete();\n            this._dragRef.dispose();\n        });\n    }\n    /** Syncs the root element with the `DragRef`. */\n    _updateRootElement() {\n        const element = this.element.nativeElement;\n        let rootElement = element;\n        if (this.rootElementSelector) {\n            rootElement =\n                element.closest !== undefined\n                    ? element.closest(this.rootElementSelector)\n                    : // Comment tag doesn't have closest method, so use parent's one.\n                        element.parentElement?.closest(this.rootElementSelector);\n        }\n        if (rootElement && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            assertElementNode(rootElement, 'cdkDrag');\n        }\n        this._dragRef.withRootElement(rootElement || element);\n    }\n    /** Gets the boundary element, based on the `boundaryElement` value. */\n    _getBoundaryElement() {\n        const boundary = this.boundaryElement;\n        if (!boundary) {\n            return null;\n        }\n        if (typeof boundary === 'string') {\n            return this.element.nativeElement.closest(boundary);\n        }\n        return coerceElement(boundary);\n    }\n    /** Syncs the inputs of the CdkDrag with the options of the underlying DragRef. */\n    _syncInputs(ref) {\n        ref.beforeStarted.subscribe(() => {\n            if (!ref.isDragging()) {\n                const dir = this._dir;\n                const dragStartDelay = this.dragStartDelay;\n                const placeholder = this._placeholderTemplate\n                    ? {\n                        template: this._placeholderTemplate.templateRef,\n                        context: this._placeholderTemplate.data,\n                        viewContainer: this._viewContainerRef,\n                    }\n                    : null;\n                const preview = this._previewTemplate\n                    ? {\n                        template: this._previewTemplate.templateRef,\n                        context: this._previewTemplate.data,\n                        matchSize: this._previewTemplate.matchSize,\n                        viewContainer: this._viewContainerRef,\n                    }\n                    : null;\n                ref.disabled = this.disabled;\n                ref.lockAxis = this.lockAxis;\n                ref.dragStartDelay =\n                    typeof dragStartDelay === 'object' && dragStartDelay\n                        ? dragStartDelay\n                        : coerceNumberProperty(dragStartDelay);\n                ref.constrainPosition = this.constrainPosition;\n                ref.previewClass = this.previewClass;\n                ref\n                    .withBoundaryElement(this._getBoundaryElement())\n                    .withPlaceholderTemplate(placeholder)\n                    .withPreviewTemplate(preview)\n                    .withPreviewContainer(this.previewContainer || 'global');\n                if (dir) {\n                    ref.withDirection(dir.value);\n                }\n            }\n        });\n        // This only needs to be resolved once.\n        ref.beforeStarted.pipe(take(1)).subscribe(() => {\n            // If we managed to resolve a parent through DI, use it.\n            if (this._parentDrag) {\n                ref.withParent(this._parentDrag._dragRef);\n                return;\n            }\n            // Otherwise fall back to resolving the parent by looking up the DOM. This can happen if\n            // the item was projected into another item by something like `ngTemplateOutlet`.\n            let parent = this.element.nativeElement.parentElement;\n            while (parent) {\n                if (parent.classList.contains(DRAG_HOST_CLASS)) {\n                    ref.withParent(CdkDrag._dragInstances.find(drag => {\n                        return drag.element.nativeElement === parent;\n                    })?._dragRef || null);\n                    break;\n                }\n                parent = parent.parentElement;\n            }\n        });\n    }\n    /** Handles the events from the underlying `DragRef`. */\n    _handleEvents(ref) {\n        ref.started.subscribe(startEvent => {\n            this.started.emit({ source: this, event: startEvent.event });\n            // Since all of these events run outside of change detection,\n            // we need to ensure that everything is marked correctly.\n            this._changeDetectorRef.markForCheck();\n        });\n        ref.released.subscribe(releaseEvent => {\n            this.released.emit({ source: this, event: releaseEvent.event });\n        });\n        ref.ended.subscribe(endEvent => {\n            this.ended.emit({\n                source: this,\n                distance: endEvent.distance,\n                dropPoint: endEvent.dropPoint,\n                event: endEvent.event,\n            });\n            // Since all of these events run outside of change detection,\n            // we need to ensure that everything is marked correctly.\n            this._changeDetectorRef.markForCheck();\n        });\n        ref.entered.subscribe(enterEvent => {\n            this.entered.emit({\n                container: enterEvent.container.data,\n                item: this,\n                currentIndex: enterEvent.currentIndex,\n            });\n        });\n        ref.exited.subscribe(exitEvent => {\n            this.exited.emit({\n                container: exitEvent.container.data,\n                item: this,\n            });\n        });\n        ref.dropped.subscribe(dropEvent => {\n            this.dropped.emit({\n                previousIndex: dropEvent.previousIndex,\n                currentIndex: dropEvent.currentIndex,\n                previousContainer: dropEvent.previousContainer.data,\n                container: dropEvent.container.data,\n                isPointerOverContainer: dropEvent.isPointerOverContainer,\n                item: this,\n                distance: dropEvent.distance,\n                dropPoint: dropEvent.dropPoint,\n                event: dropEvent.event,\n            });\n        });\n    }\n    /** Assigns the default input values based on a provided config object. */\n    _assignDefaults(config) {\n        const { lockAxis, dragStartDelay, constrainPosition, previewClass, boundaryElement, draggingDisabled, rootElementSelector, previewContainer, } = config;\n        this.disabled = draggingDisabled == null ? false : draggingDisabled;\n        this.dragStartDelay = dragStartDelay || 0;\n        if (lockAxis) {\n            this.lockAxis = lockAxis;\n        }\n        if (constrainPosition) {\n            this.constrainPosition = constrainPosition;\n        }\n        if (previewClass) {\n            this.previewClass = previewClass;\n        }\n        if (boundaryElement) {\n            this.boundaryElement = boundaryElement;\n        }\n        if (rootElementSelector) {\n            this.rootElementSelector = rootElementSelector;\n        }\n        if (previewContainer) {\n            this.previewContainer = previewContainer;\n        }\n    }\n    /** Sets up the listener that syncs the handles with the drag ref. */\n    _setupHandlesListener() {\n        // Listen for any newly-added handles.\n        this._handles.changes\n            .pipe(startWith(this._handles), \n        // Sync the new handles with the DragRef.\n        tap((handles) => {\n            const childHandleElements = handles\n                .filter(handle => handle._parentDrag === this)\n                .map(handle => handle.element);\n            // Usually handles are only allowed to be a descendant of the drag element, but if\n            // the consumer defined a different drag root, we should allow the drag element\n            // itself to be a handle too.\n            if (this._selfHandle && this.rootElementSelector) {\n                childHandleElements.push(this.element);\n            }\n            this._dragRef.withHandles(childHandleElements);\n        }), \n        // Listen if the state of any of the handles changes.\n        switchMap((handles) => {\n            return merge(...handles.map(item => {\n                return item._stateChanges.pipe(startWith(item));\n            }));\n        }), takeUntil(this._destroyed))\n            .subscribe(handleInstance => {\n            // Enabled/disable the handle that changed in the DragRef.\n            const dragRef = this._dragRef;\n            const handle = handleInstance.element.nativeElement;\n            handleInstance.disabled ? dragRef.disableHandle(handle) : dragRef.enableHandle(handle);\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: CdkDrag, deps: [{ token: i0.ElementRef }, { token: CDK_DROP_LIST, optional: true, skipSelf: true }, { token: DOCUMENT }, { token: i0.NgZone }, { token: i0.ViewContainerRef }, { token: CDK_DRAG_CONFIG, optional: true }, { token: i1$1.Directionality, optional: true }, { token: DragDrop }, { token: i0.ChangeDetectorRef }, { token: CDK_DRAG_HANDLE, optional: true, self: true }, { token: CDK_DRAG_PARENT, optional: true, skipSelf: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"17.0.4\", type: CdkDrag, isStandalone: true, selector: \"[cdkDrag]\", inputs: { data: [\"cdkDragData\", \"data\"], lockAxis: [\"cdkDragLockAxis\", \"lockAxis\"], rootElementSelector: [\"cdkDragRootElement\", \"rootElementSelector\"], boundaryElement: [\"cdkDragBoundary\", \"boundaryElement\"], dragStartDelay: [\"cdkDragStartDelay\", \"dragStartDelay\"], freeDragPosition: [\"cdkDragFreeDragPosition\", \"freeDragPosition\"], disabled: [\"cdkDragDisabled\", \"disabled\", booleanAttribute], constrainPosition: [\"cdkDragConstrainPosition\", \"constrainPosition\"], previewClass: [\"cdkDragPreviewClass\", \"previewClass\"], previewContainer: [\"cdkDragPreviewContainer\", \"previewContainer\"] }, outputs: { started: \"cdkDragStarted\", released: \"cdkDragReleased\", ended: \"cdkDragEnded\", entered: \"cdkDragEntered\", exited: \"cdkDragExited\", dropped: \"cdkDragDropped\", moved: \"cdkDragMoved\" }, host: { properties: { \"class.cdk-drag-disabled\": \"disabled\", \"class.cdk-drag-dragging\": \"_dragRef.isDragging()\" }, classAttribute: \"cdk-drag\" }, providers: [{ provide: CDK_DRAG_PARENT, useExisting: CdkDrag }], queries: [{ propertyName: \"_previewTemplate\", first: true, predicate: CDK_DRAG_PREVIEW, descendants: true }, { propertyName: \"_placeholderTemplate\", first: true, predicate: CDK_DRAG_PLACEHOLDER, descendants: true }, { propertyName: \"_handles\", predicate: CDK_DRAG_HANDLE, descendants: true }], exportAs: [\"cdkDrag\"], usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: CdkDrag, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkDrag]',\n                    exportAs: 'cdkDrag',\n                    standalone: true,\n                    host: {\n                        'class': DRAG_HOST_CLASS,\n                        '[class.cdk-drag-disabled]': 'disabled',\n                        '[class.cdk-drag-dragging]': '_dragRef.isDragging()',\n                    },\n                    providers: [{ provide: CDK_DRAG_PARENT, useExisting: CdkDrag }],\n                }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [CDK_DROP_LIST]\n                }, {\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i0.NgZone }, { type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [CDK_DRAG_CONFIG]\n                }] }, { type: i1$1.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: DragDrop }, { type: i0.ChangeDetectorRef }, { type: CdkDragHandle, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [CDK_DRAG_HANDLE]\n                }] }, { type: CdkDrag, decorators: [{\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }, {\n                    type: Inject,\n                    args: [CDK_DRAG_PARENT]\n                }] }], propDecorators: { _handles: [{\n                type: ContentChildren,\n                args: [CDK_DRAG_HANDLE, { descendants: true }]\n            }], _previewTemplate: [{\n                type: ContentChild,\n                args: [CDK_DRAG_PREVIEW]\n            }], _placeholderTemplate: [{\n                type: ContentChild,\n                args: [CDK_DRAG_PLACEHOLDER]\n            }], data: [{\n                type: Input,\n                args: ['cdkDragData']\n            }], lockAxis: [{\n                type: Input,\n                args: ['cdkDragLockAxis']\n            }], rootElementSelector: [{\n                type: Input,\n                args: ['cdkDragRootElement']\n            }], boundaryElement: [{\n                type: Input,\n                args: ['cdkDragBoundary']\n            }], dragStartDelay: [{\n                type: Input,\n                args: ['cdkDragStartDelay']\n            }], freeDragPosition: [{\n                type: Input,\n                args: ['cdkDragFreeDragPosition']\n            }], disabled: [{\n                type: Input,\n                args: [{ alias: 'cdkDragDisabled', transform: booleanAttribute }]\n            }], constrainPosition: [{\n                type: Input,\n                args: ['cdkDragConstrainPosition']\n            }], previewClass: [{\n                type: Input,\n                args: ['cdkDragPreviewClass']\n            }], previewContainer: [{\n                type: Input,\n                args: ['cdkDragPreviewContainer']\n            }], started: [{\n                type: Output,\n                args: ['cdkDragStarted']\n            }], released: [{\n                type: Output,\n                args: ['cdkDragReleased']\n            }], ended: [{\n                type: Output,\n                args: ['cdkDragEnded']\n            }], entered: [{\n                type: Output,\n                args: ['cdkDragEntered']\n            }], exited: [{\n                type: Output,\n                args: ['cdkDragExited']\n            }], dropped: [{\n                type: Output,\n                args: ['cdkDragDropped']\n            }], moved: [{\n                type: Output,\n                args: ['cdkDragMoved']\n            }] } });\n\n/**\n * Injection token that can be used to reference instances of `CdkDropListGroup`. It serves as\n * alternative token to the actual `CdkDropListGroup` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DROP_LIST_GROUP = new InjectionToken('CdkDropListGroup');\n/**\n * Declaratively connects sibling `cdkDropList` instances together. All of the `cdkDropList`\n * elements that are placed inside a `cdkDropListGroup` will be connected to each other\n * automatically. Can be used as an alternative to the `cdkDropListConnectedTo` input\n * from `cdkDropList`.\n */\nclass CdkDropListGroup {\n    constructor() {\n        /** Drop lists registered inside the group. */\n        this._items = new Set();\n        /** Whether starting a dragging sequence from inside this group is disabled. */\n        this.disabled = false;\n    }\n    ngOnDestroy() {\n        this._items.clear();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: CdkDropListGroup, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"17.0.4\", type: CdkDropListGroup, isStandalone: true, selector: \"[cdkDropListGroup]\", inputs: { disabled: [\"cdkDropListGroupDisabled\", \"disabled\", booleanAttribute] }, providers: [{ provide: CDK_DROP_LIST_GROUP, useExisting: CdkDropListGroup }], exportAs: [\"cdkDropListGroup\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: CdkDropListGroup, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkDropListGroup]',\n                    exportAs: 'cdkDropListGroup',\n                    standalone: true,\n                    providers: [{ provide: CDK_DROP_LIST_GROUP, useExisting: CdkDropListGroup }],\n                }]\n        }], propDecorators: { disabled: [{\n                type: Input,\n                args: [{ alias: 'cdkDropListGroupDisabled', transform: booleanAttribute }]\n            }] } });\n\n/** Counter used to generate unique ids for drop zones. */\nlet _uniqueIdCounter = 0;\n/** Container that wraps a set of draggable items. */\nclass CdkDropList {\n    /** Keeps track of the drop lists that are currently on the page. */\n    static { this._dropLists = []; }\n    /** Whether starting a dragging sequence from this container is disabled. */\n    get disabled() {\n        return this._disabled || (!!this._group && this._group.disabled);\n    }\n    set disabled(value) {\n        // Usually we sync the directive and ref state right before dragging starts, in order to have\n        // a single point of failure and to avoid having to use setters for everything. `disabled` is\n        // a special case, because it can prevent the `beforeStarted` event from firing, which can lock\n        // the user in a disabled state, so we also need to sync it as it's being set.\n        this._dropListRef.disabled = this._disabled = value;\n    }\n    constructor(\n    /** Element that the drop list is attached to. */\n    element, dragDrop, _changeDetectorRef, _scrollDispatcher, _dir, _group, config) {\n        this.element = element;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._scrollDispatcher = _scrollDispatcher;\n        this._dir = _dir;\n        this._group = _group;\n        /** Emits when the list has been destroyed. */\n        this._destroyed = new Subject();\n        /**\n         * Other draggable containers that this container is connected to and into which the\n         * container's items can be transferred. Can either be references to other drop containers,\n         * or their unique IDs.\n         */\n        this.connectedTo = [];\n        /**\n         * Unique ID for the drop zone. Can be used as a reference\n         * in the `connectedTo` of another `CdkDropList`.\n         */\n        this.id = `cdk-drop-list-${_uniqueIdCounter++}`;\n        /**\n         * Function that is used to determine whether an item\n         * is allowed to be moved into a drop container.\n         */\n        this.enterPredicate = () => true;\n        /** Functions that is used to determine whether an item can be sorted into a particular index. */\n        this.sortPredicate = () => true;\n        /** Emits when the user drops an item inside the container. */\n        this.dropped = new EventEmitter();\n        /**\n         * Emits when the user has moved a new drag item into this container.\n         */\n        this.entered = new EventEmitter();\n        /**\n         * Emits when the user removes an item from the container\n         * by dragging it into another container.\n         */\n        this.exited = new EventEmitter();\n        /** Emits as the user is swapping items while actively dragging. */\n        this.sorted = new EventEmitter();\n        /**\n         * Keeps track of the items that are registered with this container. Historically we used to\n         * do this with a `ContentChildren` query, however queries don't handle transplanted views very\n         * well which means that we can't handle cases like dragging the headers of a `mat-table`\n         * correctly. What we do instead is to have the items register themselves with the container\n         * and then we sort them based on their position in the DOM.\n         */\n        this._unsortedItems = new Set();\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            assertElementNode(element.nativeElement, 'cdkDropList');\n        }\n        this._dropListRef = dragDrop.createDropList(element);\n        this._dropListRef.data = this;\n        if (config) {\n            this._assignDefaults(config);\n        }\n        this._dropListRef.enterPredicate = (drag, drop) => {\n            return this.enterPredicate(drag.data, drop.data);\n        };\n        this._dropListRef.sortPredicate = (index, drag, drop) => {\n            return this.sortPredicate(index, drag.data, drop.data);\n        };\n        this._setupInputSyncSubscription(this._dropListRef);\n        this._handleEvents(this._dropListRef);\n        CdkDropList._dropLists.push(this);\n        if (_group) {\n            _group._items.add(this);\n        }\n    }\n    /** Registers an items with the drop list. */\n    addItem(item) {\n        this._unsortedItems.add(item);\n        if (this._dropListRef.isDragging()) {\n            this._syncItemsWithRef();\n        }\n    }\n    /** Removes an item from the drop list. */\n    removeItem(item) {\n        this._unsortedItems.delete(item);\n        if (this._dropListRef.isDragging()) {\n            this._syncItemsWithRef();\n        }\n    }\n    /** Gets the registered items in the list, sorted by their position in the DOM. */\n    getSortedItems() {\n        return Array.from(this._unsortedItems).sort((a, b) => {\n            const documentPosition = a._dragRef\n                .getVisibleElement()\n                .compareDocumentPosition(b._dragRef.getVisibleElement());\n            // `compareDocumentPosition` returns a bitmask so we have to use a bitwise operator.\n            // https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n            // tslint:disable-next-line:no-bitwise\n            return documentPosition & Node.DOCUMENT_POSITION_FOLLOWING ? -1 : 1;\n        });\n    }\n    ngOnDestroy() {\n        const index = CdkDropList._dropLists.indexOf(this);\n        if (index > -1) {\n            CdkDropList._dropLists.splice(index, 1);\n        }\n        if (this._group) {\n            this._group._items.delete(this);\n        }\n        this._unsortedItems.clear();\n        this._dropListRef.dispose();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Syncs the inputs of the CdkDropList with the options of the underlying DropListRef. */\n    _setupInputSyncSubscription(ref) {\n        if (this._dir) {\n            this._dir.change\n                .pipe(startWith(this._dir.value), takeUntil(this._destroyed))\n                .subscribe(value => ref.withDirection(value));\n        }\n        ref.beforeStarted.subscribe(() => {\n            const siblings = coerceArray(this.connectedTo).map(drop => {\n                if (typeof drop === 'string') {\n                    const correspondingDropList = CdkDropList._dropLists.find(list => list.id === drop);\n                    if (!correspondingDropList && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                        console.warn(`CdkDropList could not find connected drop list with id \"${drop}\"`);\n                    }\n                    return correspondingDropList;\n                }\n                return drop;\n            });\n            if (this._group) {\n                this._group._items.forEach(drop => {\n                    if (siblings.indexOf(drop) === -1) {\n                        siblings.push(drop);\n                    }\n                });\n            }\n            // Note that we resolve the scrollable parents here so that we delay the resolution\n            // as long as possible, ensuring that the element is in its final place in the DOM.\n            if (!this._scrollableParentsResolved) {\n                const scrollableParents = this._scrollDispatcher\n                    .getAncestorScrollContainers(this.element)\n                    .map(scrollable => scrollable.getElementRef().nativeElement);\n                this._dropListRef.withScrollableParents(scrollableParents);\n                // Only do this once since it involves traversing the DOM and the parents\n                // shouldn't be able to change without the drop list being destroyed.\n                this._scrollableParentsResolved = true;\n            }\n            ref.disabled = this.disabled;\n            ref.lockAxis = this.lockAxis;\n            ref.sortingDisabled = this.sortingDisabled;\n            ref.autoScrollDisabled = this.autoScrollDisabled;\n            ref.autoScrollStep = coerceNumberProperty(this.autoScrollStep, 2);\n            ref\n                .connectedTo(siblings.filter(drop => drop && drop !== this).map(list => list._dropListRef))\n                .withOrientation(this.orientation);\n        });\n    }\n    /** Handles events from the underlying DropListRef. */\n    _handleEvents(ref) {\n        ref.beforeStarted.subscribe(() => {\n            this._syncItemsWithRef();\n            this._changeDetectorRef.markForCheck();\n        });\n        ref.entered.subscribe(event => {\n            this.entered.emit({\n                container: this,\n                item: event.item.data,\n                currentIndex: event.currentIndex,\n            });\n        });\n        ref.exited.subscribe(event => {\n            this.exited.emit({\n                container: this,\n                item: event.item.data,\n            });\n            this._changeDetectorRef.markForCheck();\n        });\n        ref.sorted.subscribe(event => {\n            this.sorted.emit({\n                previousIndex: event.previousIndex,\n                currentIndex: event.currentIndex,\n                container: this,\n                item: event.item.data,\n            });\n        });\n        ref.dropped.subscribe(dropEvent => {\n            this.dropped.emit({\n                previousIndex: dropEvent.previousIndex,\n                currentIndex: dropEvent.currentIndex,\n                previousContainer: dropEvent.previousContainer.data,\n                container: dropEvent.container.data,\n                item: dropEvent.item.data,\n                isPointerOverContainer: dropEvent.isPointerOverContainer,\n                distance: dropEvent.distance,\n                dropPoint: dropEvent.dropPoint,\n                event: dropEvent.event,\n            });\n            // Mark for check since all of these events run outside of change\n            // detection and we're not guaranteed for something else to have triggered it.\n            this._changeDetectorRef.markForCheck();\n        });\n        merge(ref.receivingStarted, ref.receivingStopped).subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n    /** Assigns the default input values based on a provided config object. */\n    _assignDefaults(config) {\n        const { lockAxis, draggingDisabled, sortingDisabled, listAutoScrollDisabled, listOrientation } = config;\n        this.disabled = draggingDisabled == null ? false : draggingDisabled;\n        this.sortingDisabled = sortingDisabled == null ? false : sortingDisabled;\n        this.autoScrollDisabled = listAutoScrollDisabled == null ? false : listAutoScrollDisabled;\n        this.orientation = listOrientation || 'vertical';\n        if (lockAxis) {\n            this.lockAxis = lockAxis;\n        }\n    }\n    /** Syncs up the registered drag items with underlying drop list ref. */\n    _syncItemsWithRef() {\n        this._dropListRef.withItems(this.getSortedItems().map(item => item._dragRef));\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: CdkDropList, deps: [{ token: i0.ElementRef }, { token: DragDrop }, { token: i0.ChangeDetectorRef }, { token: i1.ScrollDispatcher }, { token: i1$1.Directionality, optional: true }, { token: CDK_DROP_LIST_GROUP, optional: true, skipSelf: true }, { token: CDK_DRAG_CONFIG, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"17.0.4\", type: CdkDropList, isStandalone: true, selector: \"[cdkDropList], cdk-drop-list\", inputs: { connectedTo: [\"cdkDropListConnectedTo\", \"connectedTo\"], data: [\"cdkDropListData\", \"data\"], orientation: [\"cdkDropListOrientation\", \"orientation\"], id: \"id\", lockAxis: [\"cdkDropListLockAxis\", \"lockAxis\"], disabled: [\"cdkDropListDisabled\", \"disabled\", booleanAttribute], sortingDisabled: [\"cdkDropListSortingDisabled\", \"sortingDisabled\", booleanAttribute], enterPredicate: [\"cdkDropListEnterPredicate\", \"enterPredicate\"], sortPredicate: [\"cdkDropListSortPredicate\", \"sortPredicate\"], autoScrollDisabled: [\"cdkDropListAutoScrollDisabled\", \"autoScrollDisabled\", booleanAttribute], autoScrollStep: [\"cdkDropListAutoScrollStep\", \"autoScrollStep\"] }, outputs: { dropped: \"cdkDropListDropped\", entered: \"cdkDropListEntered\", exited: \"cdkDropListExited\", sorted: \"cdkDropListSorted\" }, host: { properties: { \"attr.id\": \"id\", \"class.cdk-drop-list-disabled\": \"disabled\", \"class.cdk-drop-list-dragging\": \"_dropListRef.isDragging()\", \"class.cdk-drop-list-receiving\": \"_dropListRef.isReceiving()\" }, classAttribute: \"cdk-drop-list\" }, providers: [\n            // Prevent child drop lists from picking up the same group as their parent.\n            { provide: CDK_DROP_LIST_GROUP, useValue: undefined },\n            { provide: CDK_DROP_LIST, useExisting: CdkDropList },\n        ], exportAs: [\"cdkDropList\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: CdkDropList, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkDropList], cdk-drop-list',\n                    exportAs: 'cdkDropList',\n                    standalone: true,\n                    providers: [\n                        // Prevent child drop lists from picking up the same group as their parent.\n                        { provide: CDK_DROP_LIST_GROUP, useValue: undefined },\n                        { provide: CDK_DROP_LIST, useExisting: CdkDropList },\n                    ],\n                    host: {\n                        'class': 'cdk-drop-list',\n                        '[attr.id]': 'id',\n                        '[class.cdk-drop-list-disabled]': 'disabled',\n                        '[class.cdk-drop-list-dragging]': '_dropListRef.isDragging()',\n                        '[class.cdk-drop-list-receiving]': '_dropListRef.isReceiving()',\n                    },\n                }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: DragDrop }, { type: i0.ChangeDetectorRef }, { type: i1.ScrollDispatcher }, { type: i1$1.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: CdkDropListGroup, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [CDK_DROP_LIST_GROUP]\n                }, {\n                    type: SkipSelf\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [CDK_DRAG_CONFIG]\n                }] }], propDecorators: { connectedTo: [{\n                type: Input,\n                args: ['cdkDropListConnectedTo']\n            }], data: [{\n                type: Input,\n                args: ['cdkDropListData']\n            }], orientation: [{\n                type: Input,\n                args: ['cdkDropListOrientation']\n            }], id: [{\n                type: Input\n            }], lockAxis: [{\n                type: Input,\n                args: ['cdkDropListLockAxis']\n            }], disabled: [{\n                type: Input,\n                args: [{ alias: 'cdkDropListDisabled', transform: booleanAttribute }]\n            }], sortingDisabled: [{\n                type: Input,\n                args: [{ alias: 'cdkDropListSortingDisabled', transform: booleanAttribute }]\n            }], enterPredicate: [{\n                type: Input,\n                args: ['cdkDropListEnterPredicate']\n            }], sortPredicate: [{\n                type: Input,\n                args: ['cdkDropListSortPredicate']\n            }], autoScrollDisabled: [{\n                type: Input,\n                args: [{ alias: 'cdkDropListAutoScrollDisabled', transform: booleanAttribute }]\n            }], autoScrollStep: [{\n                type: Input,\n                args: ['cdkDropListAutoScrollStep']\n            }], dropped: [{\n                type: Output,\n                args: ['cdkDropListDropped']\n            }], entered: [{\n                type: Output,\n                args: ['cdkDropListEntered']\n            }], exited: [{\n                type: Output,\n                args: ['cdkDropListExited']\n            }], sorted: [{\n                type: Output,\n                args: ['cdkDropListSorted']\n            }] } });\n\nconst DRAG_DROP_DIRECTIVES = [\n    CdkDropList,\n    CdkDropListGroup,\n    CdkDrag,\n    CdkDragHandle,\n    CdkDragPreview,\n    CdkDragPlaceholder,\n];\nclass DragDropModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: DragDropModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.0.4\", ngImport: i0, type: DragDropModule, imports: [CdkDropList,\n            CdkDropListGroup,\n            CdkDrag,\n            CdkDragHandle,\n            CdkDragPreview,\n            CdkDragPlaceholder], exports: [CdkScrollableModule, CdkDropList,\n            CdkDropListGroup,\n            CdkDrag,\n            CdkDragHandle,\n            CdkDragPreview,\n            CdkDragPlaceholder] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: DragDropModule, providers: [DragDrop], imports: [CdkScrollableModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: DragDropModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: DRAG_DROP_DIRECTIVES,\n                    exports: [CdkScrollableModule, ...DRAG_DROP_DIRECTIVES],\n                    providers: [DragDrop],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CDK_DRAG_CONFIG, CDK_DRAG_HANDLE, CDK_DRAG_PARENT, CDK_DRAG_PLACEHOLDER, CDK_DRAG_PREVIEW, CDK_DROP_LIST, CDK_DROP_LIST_GROUP, CdkDrag, CdkDragHandle, CdkDragPlaceholder, CdkDragPreview, CdkDropList, CdkDropListGroup, DragDrop, DragDropModule, DragDropRegistry, DragRef, DropListRef, copyArrayItem, moveItemInArray, transferArrayItem };\n","const MAC_ENTER = 3;\nconst BACKSPACE = 8;\nconst TAB = 9;\nconst NUM_CENTER = 12;\nconst ENTER = 13;\nconst SHIFT = 16;\nconst CONTROL = 17;\nconst ALT = 18;\nconst PAUSE = 19;\nconst CAPS_LOCK = 20;\nconst ESCAPE = 27;\nconst SPACE = 32;\nconst PAGE_UP = 33;\nconst PAGE_DOWN = 34;\nconst END = 35;\nconst HOME = 36;\nconst LEFT_ARROW = 37;\nconst UP_ARROW = 38;\nconst RIGHT_ARROW = 39;\nconst DOWN_ARROW = 40;\nconst PLUS_SIGN = 43;\nconst PRINT_SCREEN = 44;\nconst INSERT = 45;\nconst DELETE = 46;\nconst ZERO = 48;\nconst ONE = 49;\nconst TWO = 50;\nconst THREE = 51;\nconst FOUR = 52;\nconst FIVE = 53;\nconst SIX = 54;\nconst SEVEN = 55;\nconst EIGHT = 56;\nconst NINE = 57;\nconst FF_SEMICOLON = 59; // Firefox (Gecko) fires this for semicolon instead of 186\nconst FF_EQUALS = 61; // Firefox (Gecko) fires this for equals instead of 187\nconst QUESTION_MARK = 63;\nconst AT_SIGN = 64;\nconst A = 65;\nconst B = 66;\nconst C = 67;\nconst D = 68;\nconst E = 69;\nconst F = 70;\nconst G = 71;\nconst H = 72;\nconst I = 73;\nconst J = 74;\nconst K = 75;\nconst L = 76;\nconst M = 77;\nconst N = 78;\nconst O = 79;\nconst P = 80;\nconst Q = 81;\nconst R = 82;\nconst S = 83;\nconst T = 84;\nconst U = 85;\nconst V = 86;\nconst W = 87;\nconst X = 88;\nconst Y = 89;\nconst Z = 90;\nconst META = 91; // WIN_KEY_LEFT\nconst MAC_WK_CMD_LEFT = 91;\nconst MAC_WK_CMD_RIGHT = 93;\nconst CONTEXT_MENU = 93;\nconst NUMPAD_ZERO = 96;\nconst NUMPAD_ONE = 97;\nconst NUMPAD_TWO = 98;\nconst NUMPAD_THREE = 99;\nconst NUMPAD_FOUR = 100;\nconst NUMPAD_FIVE = 101;\nconst NUMPAD_SIX = 102;\nconst NUMPAD_SEVEN = 103;\nconst NUMPAD_EIGHT = 104;\nconst NUMPAD_NINE = 105;\nconst NUMPAD_MULTIPLY = 106;\nconst NUMPAD_PLUS = 107;\nconst NUMPAD_MINUS = 109;\nconst NUMPAD_PERIOD = 110;\nconst NUMPAD_DIVIDE = 111;\nconst F1 = 112;\nconst F2 = 113;\nconst F3 = 114;\nconst F4 = 115;\nconst F5 = 116;\nconst F6 = 117;\nconst F7 = 118;\nconst F8 = 119;\nconst F9 = 120;\nconst F10 = 121;\nconst F11 = 122;\nconst F12 = 123;\nconst NUM_LOCK = 144;\nconst SCROLL_LOCK = 145;\nconst FIRST_MEDIA = 166;\nconst FF_MINUS = 173;\nconst MUTE = 173; // Firefox (Gecko) fires 181 for MUTE\nconst VOLUME_DOWN = 174; // Firefox (Gecko) fires 182 for VOLUME_DOWN\nconst VOLUME_UP = 175; // Firefox (Gecko) fires 183 for VOLUME_UP\nconst FF_MUTE = 181;\nconst FF_VOLUME_DOWN = 182;\nconst LAST_MEDIA = 183;\nconst FF_VOLUME_UP = 183;\nconst SEMICOLON = 186; // Firefox (Gecko) fires 59 for SEMICOLON\nconst EQUALS = 187; // Firefox (Gecko) fires 61 for EQUALS\nconst COMMA = 188;\nconst DASH = 189; // Firefox (Gecko) fires 173 for DASH/MINUS\nconst PERIOD = 190;\nconst SLASH = 191;\nconst APOSTROPHE = 192;\nconst TILDE = 192;\nconst OPEN_SQUARE_BRACKET = 219;\nconst BACKSLASH = 220;\nconst CLOSE_SQUARE_BRACKET = 221;\nconst SINGLE_QUOTE = 222;\nconst MAC_META = 224;\n\n/**\n * Checks whether a modifier key is pressed.\n * @param event Event to be checked.\n */\nfunction hasModifierKey(event, ...modifiers) {\n    if (modifiers.length) {\n        return modifiers.some(modifier => event[modifier]);\n    }\n    return event.altKey || event.shiftKey || event.ctrlKey || event.metaKey;\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { A, ALT, APOSTROPHE, AT_SIGN, B, BACKSLASH, BACKSPACE, C, CAPS_LOCK, CLOSE_SQUARE_BRACKET, COMMA, CONTEXT_MENU, CONTROL, D, DASH, DELETE, DOWN_ARROW, E, EIGHT, END, ENTER, EQUALS, ESCAPE, F, F1, F10, F11, F12, F2, F3, F4, F5, F6, F7, F8, F9, FF_EQUALS, FF_MINUS, FF_MUTE, FF_SEMICOLON, FF_VOLUME_DOWN, FF_VOLUME_UP, FIRST_MEDIA, FIVE, FOUR, G, H, HOME, I, INSERT, J, K, L, LAST_MEDIA, LEFT_ARROW, M, MAC_ENTER, MAC_META, MAC_WK_CMD_LEFT, MAC_WK_CMD_RIGHT, META, MUTE, N, NINE, NUMPAD_DIVIDE, NUMPAD_EIGHT, NUMPAD_FIVE, NUMPAD_FOUR, NUMPAD_MINUS, NUMPAD_MULTIPLY, NUMPAD_NINE, NUMPAD_ONE, NUMPAD_PERIOD, NUMPAD_PLUS, NUMPAD_SEVEN, NUMPAD_SIX, NUMPAD_THREE, NUMPAD_TWO, NUMPAD_ZERO, NUM_CENTER, NUM_LOCK, O, ONE, OPEN_SQUARE_BRACKET, P, PAGE_DOWN, PAGE_UP, PAUSE, PERIOD, PLUS_SIGN, PRINT_SCREEN, Q, QUESTION_MARK, R, RIGHT_ARROW, S, SCROLL_LOCK, SEMICOLON, SEVEN, SHIFT, SINGLE_QUOTE, SIX, SLASH, SPACE, T, TAB, THREE, TILDE, TWO, U, UP_ARROW, V, VOLUME_DOWN, VOLUME_UP, W, X, Y, Z, ZERO, hasModifierKey };\n","import * as i0 from '@angular/core';\nimport { NgModule, CSP_NONCE, Injectable, Optional, Inject } from '@angular/core';\nimport { coerceArray } from '@angular/cdk/coercion';\nimport { Subject, combineLatest, concat, Observable } from 'rxjs';\nimport { take, skip, debounceTime, map, startWith, takeUntil } from 'rxjs/operators';\nimport * as i1 from '@angular/cdk/platform';\n\nclass LayoutModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: LayoutModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.0.4\", ngImport: i0, type: LayoutModule }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: LayoutModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: LayoutModule, decorators: [{\n            type: NgModule,\n            args: [{}]\n        }] });\n\n/** Global registry for all dynamically-created, injected media queries. */\nconst mediaQueriesForWebkitCompatibility = new Set();\n/** Style tag that holds all of the dynamically-created media queries. */\nlet mediaQueryStyleNode;\n/** A utility for calling matchMedia queries. */\nclass MediaMatcher {\n    constructor(_platform, _nonce) {\n        this._platform = _platform;\n        this._nonce = _nonce;\n        this._matchMedia =\n            this._platform.isBrowser && window.matchMedia\n                ? // matchMedia is bound to the window scope intentionally as it is an illegal invocation to\n                    // call it from a different scope.\n                    window.matchMedia.bind(window)\n                : noopMatchMedia;\n    }\n    /**\n     * Evaluates the given media query and returns the native MediaQueryList from which results\n     * can be retrieved.\n     * Confirms the layout engine will trigger for the selector query provided and returns the\n     * MediaQueryList for the query provided.\n     */\n    matchMedia(query) {\n        if (this._platform.WEBKIT || this._platform.BLINK) {\n            createEmptyStyleRule(query, this._nonce);\n        }\n        return this._matchMedia(query);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MediaMatcher, deps: [{ token: i1.Platform }, { token: CSP_NONCE, optional: true }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MediaMatcher, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MediaMatcher, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: i1.Platform }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [CSP_NONCE]\n                }] }] });\n/**\n * Creates an empty stylesheet that is used to work around browser inconsistencies related to\n * `matchMedia`. At the time of writing, it handles the following cases:\n * 1. On WebKit browsers, a media query has to have at least one rule in order for `matchMedia`\n * to fire. We work around it by declaring a dummy stylesheet with a `@media` declaration.\n * 2. In some cases Blink browsers will stop firing the `matchMedia` listener if none of the rules\n * inside the `@media` match existing elements on the page. We work around it by having one rule\n * targeting the `body`. See https://github.com/angular/components/issues/23546.\n */\nfunction createEmptyStyleRule(query, nonce) {\n    if (mediaQueriesForWebkitCompatibility.has(query)) {\n        return;\n    }\n    try {\n        if (!mediaQueryStyleNode) {\n            mediaQueryStyleNode = document.createElement('style');\n            if (nonce) {\n                mediaQueryStyleNode.nonce = nonce;\n            }\n            mediaQueryStyleNode.setAttribute('type', 'text/css');\n            document.head.appendChild(mediaQueryStyleNode);\n        }\n        if (mediaQueryStyleNode.sheet) {\n            mediaQueryStyleNode.sheet.insertRule(`@media ${query} {body{ }}`, 0);\n            mediaQueriesForWebkitCompatibility.add(query);\n        }\n    }\n    catch (e) {\n        console.error(e);\n    }\n}\n/** No-op matchMedia replacement for non-browser platforms. */\nfunction noopMatchMedia(query) {\n    // Use `as any` here to avoid adding additional necessary properties for\n    // the noop matcher.\n    return {\n        matches: query === 'all' || query === '',\n        media: query,\n        addListener: () => { },\n        removeListener: () => { },\n    };\n}\n\n/** Utility for checking the matching state of @media queries. */\nclass BreakpointObserver {\n    constructor(_mediaMatcher, _zone) {\n        this._mediaMatcher = _mediaMatcher;\n        this._zone = _zone;\n        /**  A map of all media queries currently being listened for. */\n        this._queries = new Map();\n        /** A subject for all other observables to takeUntil based on. */\n        this._destroySubject = new Subject();\n    }\n    /** Completes the active subject, signalling to all other observables to complete. */\n    ngOnDestroy() {\n        this._destroySubject.next();\n        this._destroySubject.complete();\n    }\n    /**\n     * Whether one or more media queries match the current viewport size.\n     * @param value One or more media queries to check.\n     * @returns Whether any of the media queries match.\n     */\n    isMatched(value) {\n        const queries = splitQueries(coerceArray(value));\n        return queries.some(mediaQuery => this._registerQuery(mediaQuery).mql.matches);\n    }\n    /**\n     * Gets an observable of results for the given queries that will emit new results for any changes\n     * in matching of the given queries.\n     * @param value One or more media queries to check.\n     * @returns A stream of matches for the given queries.\n     */\n    observe(value) {\n        const queries = splitQueries(coerceArray(value));\n        const observables = queries.map(query => this._registerQuery(query).observable);\n        let stateObservable = combineLatest(observables);\n        // Emit the first state immediately, and then debounce the subsequent emissions.\n        stateObservable = concat(stateObservable.pipe(take(1)), stateObservable.pipe(skip(1), debounceTime(0)));\n        return stateObservable.pipe(map(breakpointStates => {\n            const response = {\n                matches: false,\n                breakpoints: {},\n            };\n            breakpointStates.forEach(({ matches, query }) => {\n                response.matches = response.matches || matches;\n                response.breakpoints[query] = matches;\n            });\n            return response;\n        }));\n    }\n    /** Registers a specific query to be listened for. */\n    _registerQuery(query) {\n        // Only set up a new MediaQueryList if it is not already being listened for.\n        if (this._queries.has(query)) {\n            return this._queries.get(query);\n        }\n        const mql = this._mediaMatcher.matchMedia(query);\n        // Create callback for match changes and add it is as a listener.\n        const queryObservable = new Observable((observer) => {\n            // Listener callback methods are wrapped to be placed back in ngZone. Callbacks must be placed\n            // back into the zone because matchMedia is only included in Zone.js by loading the\n            // webapis-media-query.js file alongside the zone.js file.  Additionally, some browsers do not\n            // have MediaQueryList inherit from EventTarget, which causes inconsistencies in how Zone.js\n            // patches it.\n            const handler = (e) => this._zone.run(() => observer.next(e));\n            mql.addListener(handler);\n            return () => {\n                mql.removeListener(handler);\n            };\n        }).pipe(startWith(mql), map(({ matches }) => ({ query, matches })), takeUntil(this._destroySubject));\n        // Add the MediaQueryList to the set of queries.\n        const output = { observable: queryObservable, mql };\n        this._queries.set(query, output);\n        return output;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: BreakpointObserver, deps: [{ token: MediaMatcher }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: BreakpointObserver, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: BreakpointObserver, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: MediaMatcher }, { type: i0.NgZone }] });\n/**\n * Split each query string into separate query strings if two queries are provided as comma\n * separated.\n */\nfunction splitQueries(queries) {\n    return queries\n        .map(query => query.split(','))\n        .reduce((a1, a2) => a1.concat(a2))\n        .map(query => query.trim());\n}\n\n// PascalCase is being used as Breakpoints is used like an enum.\n// tslint:disable-next-line:variable-name\nconst Breakpoints = {\n    XSmall: '(max-width: 599.98px)',\n    Small: '(min-width: 600px) and (max-width: 959.98px)',\n    Medium: '(min-width: 960px) and (max-width: 1279.98px)',\n    Large: '(min-width: 1280px) and (max-width: 1919.98px)',\n    XLarge: '(min-width: 1920px)',\n    Handset: '(max-width: 599.98px) and (orientation: portrait), ' +\n        '(max-width: 959.98px) and (orientation: landscape)',\n    Tablet: '(min-width: 600px) and (max-width: 839.98px) and (orientation: portrait), ' +\n        '(min-width: 960px) and (max-width: 1279.98px) and (orientation: landscape)',\n    Web: '(min-width: 840px) and (orientation: portrait), ' +\n        '(min-width: 1280px) and (orientation: landscape)',\n    HandsetPortrait: '(max-width: 599.98px) and (orientation: portrait)',\n    TabletPortrait: '(min-width: 600px) and (max-width: 839.98px) and (orientation: portrait)',\n    WebPortrait: '(min-width: 840px) and (orientation: portrait)',\n    HandsetLandscape: '(max-width: 959.98px) and (orientation: landscape)',\n    TabletLandscape: '(min-width: 960px) and (max-width: 1279.98px) and (orientation: landscape)',\n    WebLandscape: '(min-width: 1280px) and (orientation: landscape)',\n};\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BreakpointObserver, Breakpoints, LayoutModule, MediaMatcher };\n","import { coerceElement, coerceNumberProperty } from '@angular/cdk/coercion';\nimport * as i0 from '@angular/core';\nimport { Injectable, EventEmitter, booleanAttribute, Directive, Output, Input, NgModule } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\n/**\n * Factory that creates a new MutationObserver and allows us to stub it out in unit tests.\n * @docs-private\n */\nclass MutationObserverFactory {\n    create(callback) {\n        return typeof MutationObserver === 'undefined' ? null : new MutationObserver(callback);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MutationObserverFactory, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MutationObserverFactory, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: MutationObserverFactory, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n/** An injectable service that allows watching elements for changes to their content. */\nclass ContentObserver {\n    constructor(_mutationObserverFactory) {\n        this._mutationObserverFactory = _mutationObserverFactory;\n        /** Keeps track of the existing MutationObservers so they can be reused. */\n        this._observedElements = new Map();\n    }\n    ngOnDestroy() {\n        this._observedElements.forEach((_, element) => this._cleanupObserver(element));\n    }\n    observe(elementOrRef) {\n        const element = coerceElement(elementOrRef);\n        return new Observable((observer) => {\n            const stream = this._observeElement(element);\n            const subscription = stream.subscribe(observer);\n            return () => {\n                subscription.unsubscribe();\n                this._unobserveElement(element);\n            };\n        });\n    }\n    /**\n     * Observes the given element by using the existing MutationObserver if available, or creating a\n     * new one if not.\n     */\n    _observeElement(element) {\n        if (!this._observedElements.has(element)) {\n            const stream = new Subject();\n            const observer = this._mutationObserverFactory.create(mutations => stream.next(mutations));\n            if (observer) {\n                observer.observe(element, {\n                    characterData: true,\n                    childList: true,\n                    subtree: true,\n                });\n            }\n            this._observedElements.set(element, { observer, stream, count: 1 });\n        }\n        else {\n            this._observedElements.get(element).count++;\n        }\n        return this._observedElements.get(element).stream;\n    }\n    /**\n     * Un-observes the given element and cleans up the underlying MutationObserver if nobody else is\n     * observing this element.\n     */\n    _unobserveElement(element) {\n        if (this._observedElements.has(element)) {\n            this._observedElements.get(element).count--;\n            if (!this._observedElements.get(element).count) {\n                this._cleanupObserver(element);\n            }\n        }\n    }\n    /** Clean up the underlying MutationObserver for the specified element. */\n    _cleanupObserver(element) {\n        if (this._observedElements.has(element)) {\n            const { observer, stream } = this._observedElements.get(element);\n            if (observer) {\n                observer.disconnect();\n            }\n            stream.complete();\n            this._observedElements.delete(element);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: ContentObserver, deps: [{ token: MutationObserverFactory }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: ContentObserver, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: ContentObserver, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: MutationObserverFactory }] });\n/**\n * Directive that triggers a callback whenever the content of\n * its associated element has changed.\n */\nclass CdkObserveContent {\n    /**\n     * Whether observing content is disabled. This option can be used\n     * to disconnect the underlying MutationObserver until it is needed.\n     */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = value;\n        this._disabled ? this._unsubscribe() : this._subscribe();\n    }\n    /** Debounce interval for emitting the changes. */\n    get debounce() {\n        return this._debounce;\n    }\n    set debounce(value) {\n        this._debounce = coerceNumberProperty(value);\n        this._subscribe();\n    }\n    constructor(_contentObserver, _elementRef, _ngZone) {\n        this._contentObserver = _contentObserver;\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        /** Event emitted for each change in the element's content. */\n        this.event = new EventEmitter();\n        this._disabled = false;\n        this._currentSubscription = null;\n    }\n    ngAfterContentInit() {\n        if (!this._currentSubscription && !this.disabled) {\n            this._subscribe();\n        }\n    }\n    ngOnDestroy() {\n        this._unsubscribe();\n    }\n    _subscribe() {\n        this._unsubscribe();\n        const stream = this._contentObserver.observe(this._elementRef);\n        // TODO(mmalerba): We shouldn't be emitting on this @Output() outside the zone.\n        // Consider brining it back inside the zone next time we're making breaking changes.\n        // Bringing it back inside can cause things like infinite change detection loops and changed\n        // after checked errors if people's code isn't handling it properly.\n        this._ngZone.runOutsideAngular(() => {\n            this._currentSubscription = (this.debounce ? stream.pipe(debounceTime(this.debounce)) : stream).subscribe(this.event);\n        });\n    }\n    _unsubscribe() {\n        this._currentSubscription?.unsubscribe();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: CdkObserveContent, deps: [{ token: ContentObserver }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"17.0.4\", type: CdkObserveContent, selector: \"[cdkObserveContent]\", inputs: { disabled: [\"cdkObserveContentDisabled\", \"disabled\", booleanAttribute], debounce: \"debounce\" }, outputs: { event: \"cdkObserveContent\" }, exportAs: [\"cdkObserveContent\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: CdkObserveContent, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkObserveContent]',\n                    exportAs: 'cdkObserveContent',\n                }]\n        }], ctorParameters: () => [{ type: ContentObserver }, { type: i0.ElementRef }, { type: i0.NgZone }], propDecorators: { event: [{\n                type: Output,\n                args: ['cdkObserveContent']\n            }], disabled: [{\n                type: Input,\n                args: [{ alias: 'cdkObserveContentDisabled', transform: booleanAttribute }]\n            }], debounce: [{\n                type: Input\n            }] } });\nclass ObserversModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: ObserversModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.0.4\", ngImport: i0, type: ObserversModule, declarations: [CdkObserveContent], exports: [CdkObserveContent] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: ObserversModule, providers: [MutationObserverFactory] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: ObserversModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [CdkObserveContent],\n                    declarations: [CdkObserveContent],\n                    providers: [MutationObserverFactory],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkObserveContent, ContentObserver, MutationObserverFactory, ObserversModule };\n","import * as i0 from '@angular/core';\nimport { PLATFORM_ID, Injectable, Inject, NgModule } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n// Whether the current platform supports the V8 Break Iterator. The V8 check\n// is necessary to detect all Blink based browsers.\nlet hasV8BreakIterator;\n// We need a try/catch around the reference to `Intl`, because accessing it in some cases can\n// cause IE to throw. These cases are tied to particular versions of Windows and can happen if\n// the consumer is providing a polyfilled `Map`. See:\n// https://github.com/Microsoft/ChakraCore/issues/3189\n// https://github.com/angular/components/issues/15687\ntry {\n    hasV8BreakIterator = typeof Intl !== 'undefined' && Intl.v8BreakIterator;\n}\ncatch {\n    hasV8BreakIterator = false;\n}\n/**\n * Service to detect the current platform by comparing the userAgent strings and\n * checking browser-specific global properties.\n */\nclass Platform {\n    constructor(_platformId) {\n        this._platformId = _platformId;\n        // We want to use the Angular platform check because if the Document is shimmed\n        // without the navigator, the following checks will fail. This is preferred because\n        // sometimes the Document may be shimmed without the user's knowledge or intention\n        /** Whether the Angular application is being rendered in the browser. */\n        this.isBrowser = this._platformId\n            ? isPlatformBrowser(this._platformId)\n            : typeof document === 'object' && !!document;\n        /** Whether the current browser is Microsoft Edge. */\n        this.EDGE = this.isBrowser && /(edge)/i.test(navigator.userAgent);\n        /** Whether the current rendering engine is Microsoft Trident. */\n        this.TRIDENT = this.isBrowser && /(msie|trident)/i.test(navigator.userAgent);\n        // EdgeHTML and Trident mock Blink specific things and need to be excluded from this check.\n        /** Whether the current rendering engine is Blink. */\n        this.BLINK = this.isBrowser &&\n            !!(window.chrome || hasV8BreakIterator) &&\n            typeof CSS !== 'undefined' &&\n            !this.EDGE &&\n            !this.TRIDENT;\n        // Webkit is part of the userAgent in EdgeHTML, Blink and Trident. Therefore we need to\n        // ensure that Webkit runs standalone and is not used as another engine's base.\n        /** Whether the current rendering engine is WebKit. */\n        this.WEBKIT = this.isBrowser &&\n            /AppleWebKit/i.test(navigator.userAgent) &&\n            !this.BLINK &&\n            !this.EDGE &&\n            !this.TRIDENT;\n        /** Whether the current platform is Apple iOS. */\n        this.IOS = this.isBrowser && /iPad|iPhone|iPod/.test(navigator.userAgent) && !('MSStream' in window);\n        // It's difficult to detect the plain Gecko engine, because most of the browsers identify\n        // them self as Gecko-like browsers and modify the userAgent's according to that.\n        // Since we only cover one explicit Firefox case, we can simply check for Firefox\n        // instead of having an unstable check for Gecko.\n        /** Whether the current browser is Firefox. */\n        this.FIREFOX = this.isBrowser && /(firefox|minefield)/i.test(navigator.userAgent);\n        /** Whether the current platform is Android. */\n        // Trident on mobile adds the android platform to the userAgent to trick detections.\n        this.ANDROID = this.isBrowser && /android/i.test(navigator.userAgent) && !this.TRIDENT;\n        // Safari browsers will include the Safari keyword in their userAgent. Some browsers may fake\n        // this and just place the Safari keyword in the userAgent. To be more safe about Safari every\n        // Safari browser should also use Webkit as its layout engine.\n        /** Whether the current browser is Safari. */\n        this.SAFARI = this.isBrowser && /safari/i.test(navigator.userAgent) && this.WEBKIT;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: Platform, deps: [{ token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: Platform, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: Platform, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: Object, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }] });\n\nclass PlatformModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: PlatformModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.0.4\", ngImport: i0, type: PlatformModule }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: PlatformModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: PlatformModule, decorators: [{\n            type: NgModule,\n            args: [{}]\n        }] });\n\n/** Cached result Set of input types support by the current browser. */\nlet supportedInputTypes;\n/** Types of `<input>` that *might* be supported. */\nconst candidateInputTypes = [\n    // `color` must come first. Chrome 56 shows a warning if we change the type to `color` after\n    // first changing it to something else:\n    // The specified value \"\" does not conform to the required format.\n    // The format is \"#rrggbb\" where rr, gg, bb are two-digit hexadecimal numbers.\n    'color',\n    'button',\n    'checkbox',\n    'date',\n    'datetime-local',\n    'email',\n    'file',\n    'hidden',\n    'image',\n    'month',\n    'number',\n    'password',\n    'radio',\n    'range',\n    'reset',\n    'search',\n    'submit',\n    'tel',\n    'text',\n    'time',\n    'url',\n    'week',\n];\n/** @returns The input types supported by this browser. */\nfunction getSupportedInputTypes() {\n    // Result is cached.\n    if (supportedInputTypes) {\n        return supportedInputTypes;\n    }\n    // We can't check if an input type is not supported until we're on the browser, so say that\n    // everything is supported when not on the browser. We don't use `Platform` here since it's\n    // just a helper function and can't inject it.\n    if (typeof document !== 'object' || !document) {\n        supportedInputTypes = new Set(candidateInputTypes);\n        return supportedInputTypes;\n    }\n    let featureTestInput = document.createElement('input');\n    supportedInputTypes = new Set(candidateInputTypes.filter(value => {\n        featureTestInput.setAttribute('type', value);\n        return featureTestInput.type === value;\n    }));\n    return supportedInputTypes;\n}\n\n/** Cached result of whether the user's browser supports passive event listeners. */\nlet supportsPassiveEvents;\n/**\n * Checks whether the user's browser supports passive event listeners.\n * See: https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n */\nfunction supportsPassiveEventListeners() {\n    if (supportsPassiveEvents == null && typeof window !== 'undefined') {\n        try {\n            window.addEventListener('test', null, Object.defineProperty({}, 'passive', {\n                get: () => (supportsPassiveEvents = true),\n            }));\n        }\n        finally {\n            supportsPassiveEvents = supportsPassiveEvents || false;\n        }\n    }\n    return supportsPassiveEvents;\n}\n/**\n * Normalizes an `AddEventListener` object to something that can be passed\n * to `addEventListener` on any browser, no matter whether it supports the\n * `options` parameter.\n * @param options Object to be normalized.\n */\nfunction normalizePassiveListenerOptions(options) {\n    return supportsPassiveEventListeners() ? options : !!options.capture;\n}\n\n/** Cached result of the way the browser handles the horizontal scroll axis in RTL mode. */\nlet rtlScrollAxisType;\n/** Cached result of the check that indicates whether the browser supports scroll behaviors. */\nlet scrollBehaviorSupported;\n/** Check whether the browser supports scroll behaviors. */\nfunction supportsScrollBehavior() {\n    if (scrollBehaviorSupported == null) {\n        // If we're not in the browser, it can't be supported. Also check for `Element`, because\n        // some projects stub out the global `document` during SSR which can throw us off.\n        if (typeof document !== 'object' || !document || typeof Element !== 'function' || !Element) {\n            scrollBehaviorSupported = false;\n            return scrollBehaviorSupported;\n        }\n        // If the element can have a `scrollBehavior` style, we can be sure that it's supported.\n        if ('scrollBehavior' in document.documentElement.style) {\n            scrollBehaviorSupported = true;\n        }\n        else {\n            // At this point we have 3 possibilities: `scrollTo` isn't supported at all, it's\n            // supported but it doesn't handle scroll behavior, or it has been polyfilled.\n            const scrollToFunction = Element.prototype.scrollTo;\n            if (scrollToFunction) {\n                // We can detect if the function has been polyfilled by calling `toString` on it. Native\n                // functions are obfuscated using `[native code]`, whereas if it was overwritten we'd get\n                // the actual function source. Via https://davidwalsh.name/detect-native-function. Consider\n                // polyfilled functions as supporting scroll behavior.\n                scrollBehaviorSupported = !/\\{\\s*\\[native code\\]\\s*\\}/.test(scrollToFunction.toString());\n            }\n            else {\n                scrollBehaviorSupported = false;\n            }\n        }\n    }\n    return scrollBehaviorSupported;\n}\n/**\n * Checks the type of RTL scroll axis used by this browser. As of time of writing, Chrome is NORMAL,\n * Firefox & Safari are NEGATED, and IE & Edge are INVERTED.\n */\nfunction getRtlScrollAxisType() {\n    // We can't check unless we're on the browser. Just assume 'normal' if we're not.\n    if (typeof document !== 'object' || !document) {\n        return 0 /* RtlScrollAxisType.NORMAL */;\n    }\n    if (rtlScrollAxisType == null) {\n        // Create a 1px wide scrolling container and a 2px wide content element.\n        const scrollContainer = document.createElement('div');\n        const containerStyle = scrollContainer.style;\n        scrollContainer.dir = 'rtl';\n        containerStyle.width = '1px';\n        containerStyle.overflow = 'auto';\n        containerStyle.visibility = 'hidden';\n        containerStyle.pointerEvents = 'none';\n        containerStyle.position = 'absolute';\n        const content = document.createElement('div');\n        const contentStyle = content.style;\n        contentStyle.width = '2px';\n        contentStyle.height = '1px';\n        scrollContainer.appendChild(content);\n        document.body.appendChild(scrollContainer);\n        rtlScrollAxisType = 0 /* RtlScrollAxisType.NORMAL */;\n        // The viewport starts scrolled all the way to the right in RTL mode. If we are in a NORMAL\n        // browser this would mean that the scrollLeft should be 1. If it's zero instead we know we're\n        // dealing with one of the other two types of browsers.\n        if (scrollContainer.scrollLeft === 0) {\n            // In a NEGATED browser the scrollLeft is always somewhere in [-maxScrollAmount, 0]. For an\n            // INVERTED browser it is always somewhere in [0, maxScrollAmount]. We can determine which by\n            // setting to the scrollLeft to 1. This is past the max for a NEGATED browser, so it will\n            // return 0 when we read it again.\n            scrollContainer.scrollLeft = 1;\n            rtlScrollAxisType =\n                scrollContainer.scrollLeft === 0 ? 1 /* RtlScrollAxisType.NEGATED */ : 2 /* RtlScrollAxisType.INVERTED */;\n        }\n        scrollContainer.remove();\n    }\n    return rtlScrollAxisType;\n}\n\nlet shadowDomIsSupported;\n/** Checks whether the user's browser support Shadow DOM. */\nfunction _supportsShadowDom() {\n    if (shadowDomIsSupported == null) {\n        const head = typeof document !== 'undefined' ? document.head : null;\n        shadowDomIsSupported = !!(head && (head.createShadowRoot || head.attachShadow));\n    }\n    return shadowDomIsSupported;\n}\n/** Gets the shadow root of an element, if supported and the element is inside the Shadow DOM. */\nfunction _getShadowRoot(element) {\n    if (_supportsShadowDom()) {\n        const rootNode = element.getRootNode ? element.getRootNode() : null;\n        // Note that this should be caught by `_supportsShadowDom`, but some\n        // teams have been able to hit this code path on unsupported browsers.\n        if (typeof ShadowRoot !== 'undefined' && ShadowRoot && rootNode instanceof ShadowRoot) {\n            return rootNode;\n        }\n    }\n    return null;\n}\n/**\n * Gets the currently-focused element on the page while\n * also piercing through Shadow DOM boundaries.\n */\nfunction _getFocusedElementPierceShadowDom() {\n    let activeElement = typeof document !== 'undefined' && document\n        ? document.activeElement\n        : null;\n    while (activeElement && activeElement.shadowRoot) {\n        const newActiveElement = activeElement.shadowRoot.activeElement;\n        if (newActiveElement === activeElement) {\n            break;\n        }\n        else {\n            activeElement = newActiveElement;\n        }\n    }\n    return activeElement;\n}\n/** Gets the target of an event while accounting for Shadow DOM. */\nfunction _getEventTarget(event) {\n    // If an event is bound outside the Shadow DOM, the `event.target` will\n    // point to the shadow root so we have to use `composedPath` instead.\n    return (event.composedPath ? event.composedPath()[0] : event.target);\n}\n\n/** Gets whether the code is currently running in a test environment. */\nfunction _isTestEnvironment() {\n    // We can't use `declare const` because it causes conflicts inside Google with the real typings\n    // for these symbols and we can't read them off the global object, because they don't appear to\n    // be attached there for some runners like Jest.\n    // (see: https://github.com/angular/components/issues/23365#issuecomment-938146643)\n    return (\n    // @ts-ignore\n    (typeof __karma__ !== 'undefined' && !!__karma__) ||\n        // @ts-ignore\n        (typeof jasmine !== 'undefined' && !!jasmine) ||\n        // @ts-ignore\n        (typeof jest !== 'undefined' && !!jest) ||\n        // @ts-ignore\n        (typeof Mocha !== 'undefined' && !!Mocha));\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Platform, PlatformModule, _getEventTarget, _getFocusedElementPierceShadowDom, _getShadowRoot, _isTestEnvironment, _supportsShadowDom, getRtlScrollAxisType, getSupportedInputTypes, normalizePassiveListenerOptions, supportsPassiveEventListeners, supportsScrollBehavior };\n","import { coerceNumberProperty, coerceElement } from '@angular/cdk/coercion';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, forwardRef, Directive, Input, Injectable, Optional, Inject, inject, booleanAttribute, Component, ViewEncapsulation, ChangeDetectionStrategy, Output, ViewChild, SkipSelf, ElementRef, NgModule } from '@angular/core';\nimport { Subject, of, Observable, fromEvent, animationFrameScheduler, asapScheduler, Subscription, isObservable } from 'rxjs';\nimport { distinctUntilChanged, auditTime, filter, takeUntil, startWith, pairwise, switchMap, shareReplay } from 'rxjs/operators';\nimport * as i1 from '@angular/cdk/platform';\nimport { getRtlScrollAxisType, supportsScrollBehavior, Platform } from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\nimport * as i2 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport * as i2$1 from '@angular/cdk/collections';\nimport { isDataSource, ArrayDataSource, _VIEW_REPEATER_STRATEGY, _RecycleViewRepeaterStrategy } from '@angular/cdk/collections';\n\n/** The injection token used to specify the virtual scrolling strategy. */\nconst VIRTUAL_SCROLL_STRATEGY = new InjectionToken('VIRTUAL_SCROLL_STRATEGY');\n\n/** Virtual scrolling strategy for lists with items of known fixed size. */\nclass FixedSizeVirtualScrollStrategy {\n    /**\n     * @param itemSize The size of the items in the virtually scrolling list.\n     * @param minBufferPx The minimum amount of buffer (in pixels) before needing to render more\n     * @param maxBufferPx The amount of buffer (in pixels) to render when rendering more.\n     */\n    constructor(itemSize, minBufferPx, maxBufferPx) {\n        this._scrolledIndexChange = new Subject();\n        /** @docs-private Implemented as part of VirtualScrollStrategy. */\n        this.scrolledIndexChange = this._scrolledIndexChange.pipe(distinctUntilChanged());\n        /** The attached viewport. */\n        this._viewport = null;\n        this._itemSize = itemSize;\n        this._minBufferPx = minBufferPx;\n        this._maxBufferPx = maxBufferPx;\n    }\n    /**\n     * Attaches this scroll strategy to a viewport.\n     * @param viewport The viewport to attach this strategy to.\n     */\n    attach(viewport) {\n        this._viewport = viewport;\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /** Detaches this scroll strategy from the currently attached viewport. */\n    detach() {\n        this._scrolledIndexChange.complete();\n        this._viewport = null;\n    }\n    /**\n     * Update the item size and buffer size.\n     * @param itemSize The size of the items in the virtually scrolling list.\n     * @param minBufferPx The minimum amount of buffer (in pixels) before needing to render more\n     * @param maxBufferPx The amount of buffer (in pixels) to render when rendering more.\n     */\n    updateItemAndBufferSize(itemSize, minBufferPx, maxBufferPx) {\n        if (maxBufferPx < minBufferPx && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('CDK virtual scroll: maxBufferPx must be greater than or equal to minBufferPx');\n        }\n        this._itemSize = itemSize;\n        this._minBufferPx = minBufferPx;\n        this._maxBufferPx = maxBufferPx;\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    onContentScrolled() {\n        this._updateRenderedRange();\n    }\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    onDataLengthChanged() {\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    onContentRendered() {\n        /* no-op */\n    }\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    onRenderedOffsetChanged() {\n        /* no-op */\n    }\n    /**\n     * Scroll to the offset for the given index.\n     * @param index The index of the element to scroll to.\n     * @param behavior The ScrollBehavior to use when scrolling.\n     */\n    scrollToIndex(index, behavior) {\n        if (this._viewport) {\n            this._viewport.scrollToOffset(index * this._itemSize, behavior);\n        }\n    }\n    /** Update the viewport's total content size. */\n    _updateTotalContentSize() {\n        if (!this._viewport) {\n            return;\n        }\n        this._viewport.setTotalContentSize(this._viewport.getDataLength() * this._itemSize);\n    }\n    /** Update the viewport's rendered range. */\n    _updateRenderedRange() {\n        if (!this._viewport) {\n            return;\n        }\n        const renderedRange = this._viewport.getRenderedRange();\n        const newRange = { start: renderedRange.start, end: renderedRange.end };\n        const viewportSize = this._viewport.getViewportSize();\n        const dataLength = this._viewport.getDataLength();\n        let scrollOffset = this._viewport.measureScrollOffset();\n        // Prevent NaN as result when dividing by zero.\n        let firstVisibleIndex = this._itemSize > 0 ? scrollOffset / this._itemSize : 0;\n        // If user scrolls to the bottom of the list and data changes to a smaller list\n        if (newRange.end > dataLength) {\n            // We have to recalculate the first visible index based on new data length and viewport size.\n            const maxVisibleItems = Math.ceil(viewportSize / this._itemSize);\n            const newVisibleIndex = Math.max(0, Math.min(firstVisibleIndex, dataLength - maxVisibleItems));\n            // If first visible index changed we must update scroll offset to handle start/end buffers\n            // Current range must also be adjusted to cover the new position (bottom of new list).\n            if (firstVisibleIndex != newVisibleIndex) {\n                firstVisibleIndex = newVisibleIndex;\n                scrollOffset = newVisibleIndex * this._itemSize;\n                newRange.start = Math.floor(firstVisibleIndex);\n            }\n            newRange.end = Math.max(0, Math.min(dataLength, newRange.start + maxVisibleItems));\n        }\n        const startBuffer = scrollOffset - newRange.start * this._itemSize;\n        if (startBuffer < this._minBufferPx && newRange.start != 0) {\n            const expandStart = Math.ceil((this._maxBufferPx - startBuffer) / this._itemSize);\n            newRange.start = Math.max(0, newRange.start - expandStart);\n            newRange.end = Math.min(dataLength, Math.ceil(firstVisibleIndex + (viewportSize + this._minBufferPx) / this._itemSize));\n        }\n        else {\n            const endBuffer = newRange.end * this._itemSize - (scrollOffset + viewportSize);\n            if (endBuffer < this._minBufferPx && newRange.end != dataLength) {\n                const expandEnd = Math.ceil((this._maxBufferPx - endBuffer) / this._itemSize);\n                if (expandEnd > 0) {\n                    newRange.end = Math.min(dataLength, newRange.end + expandEnd);\n                    newRange.start = Math.max(0, Math.floor(firstVisibleIndex - this._minBufferPx / this._itemSize));\n                }\n            }\n        }\n        this._viewport.setRenderedRange(newRange);\n        this._viewport.setRenderedContentOffset(this._itemSize * newRange.start);\n        this._scrolledIndexChange.next(Math.floor(firstVisibleIndex));\n    }\n}\n/**\n * Provider factory for `FixedSizeVirtualScrollStrategy` that simply extracts the already created\n * `FixedSizeVirtualScrollStrategy` from the given directive.\n * @param fixedSizeDir The instance of `CdkFixedSizeVirtualScroll` to extract the\n *     `FixedSizeVirtualScrollStrategy` from.\n */\nfunction _fixedSizeVirtualScrollStrategyFactory(fixedSizeDir) {\n    return fixedSizeDir._scrollStrategy;\n}\n/** A virtual scroll strategy that supports fixed-size items. */\nclass CdkFixedSizeVirtualScroll {\n    constructor() {\n        this._itemSize = 20;\n        this._minBufferPx = 100;\n        this._maxBufferPx = 200;\n        /** The scroll strategy used by this directive. */\n        this._scrollStrategy = new FixedSizeVirtualScrollStrategy(this.itemSize, this.minBufferPx, this.maxBufferPx);\n    }\n    /** The size of the items in the list (in pixels). */\n    get itemSize() {\n        return this._itemSize;\n    }\n    set itemSize(value) {\n        this._itemSize = coerceNumberProperty(value);\n    }\n    /**\n     * The minimum amount of buffer rendered beyond the viewport (in pixels).\n     * If the amount of buffer dips below this number, more items will be rendered. Defaults to 100px.\n     */\n    get minBufferPx() {\n        return this._minBufferPx;\n    }\n    set minBufferPx(value) {\n        this._minBufferPx = coerceNumberProperty(value);\n    }\n    /**\n     * The number of pixels worth of buffer to render for when rendering new items. Defaults to 200px.\n     */\n    get maxBufferPx() {\n        return this._maxBufferPx;\n    }\n    set maxBufferPx(value) {\n        this._maxBufferPx = coerceNumberProperty(value);\n    }\n    ngOnChanges() {\n        this._scrollStrategy.updateItemAndBufferSize(this.itemSize, this.minBufferPx, this.maxBufferPx);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: CdkFixedSizeVirtualScroll, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.0.4\", type: CdkFixedSizeVirtualScroll, isStandalone: true, selector: \"cdk-virtual-scroll-viewport[itemSize]\", inputs: { itemSize: \"itemSize\", minBufferPx: \"minBufferPx\", maxBufferPx: \"maxBufferPx\" }, providers: [\n            {\n                provide: VIRTUAL_SCROLL_STRATEGY,\n                useFactory: _fixedSizeVirtualScrollStrategyFactory,\n                deps: [forwardRef(() => CdkFixedSizeVirtualScroll)],\n            },\n        ], usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: CdkFixedSizeVirtualScroll, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-virtual-scroll-viewport[itemSize]',\n                    standalone: true,\n                    providers: [\n                        {\n                            provide: VIRTUAL_SCROLL_STRATEGY,\n                            useFactory: _fixedSizeVirtualScrollStrategyFactory,\n                            deps: [forwardRef(() => CdkFixedSizeVirtualScroll)],\n                        },\n                    ],\n                }]\n        }], propDecorators: { itemSize: [{\n                type: Input\n            }], minBufferPx: [{\n                type: Input\n            }], maxBufferPx: [{\n                type: Input\n            }] } });\n\n/** Time in ms to throttle the scrolling events by default. */\nconst DEFAULT_SCROLL_TIME = 20;\n/**\n * Service contained all registered Scrollable references and emits an event when any one of the\n * Scrollable references emit a scrolled event.\n */\nclass ScrollDispatcher {\n    constructor(_ngZone, _platform, document) {\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        /** Subject for notifying that a registered scrollable reference element has been scrolled. */\n        this._scrolled = new Subject();\n        /** Keeps track of the global `scroll` and `resize` subscriptions. */\n        this._globalSubscription = null;\n        /** Keeps track of the amount of subscriptions to `scrolled`. Used for cleaning up afterwards. */\n        this._scrolledCount = 0;\n        /**\n         * Map of all the scrollable references that are registered with the service and their\n         * scroll event subscriptions.\n         */\n        this.scrollContainers = new Map();\n        this._document = document;\n    }\n    /**\n     * Registers a scrollable instance with the service and listens for its scrolled events. When the\n     * scrollable is scrolled, the service emits the event to its scrolled observable.\n     * @param scrollable Scrollable instance to be registered.\n     */\n    register(scrollable) {\n        if (!this.scrollContainers.has(scrollable)) {\n            this.scrollContainers.set(scrollable, scrollable.elementScrolled().subscribe(() => this._scrolled.next(scrollable)));\n        }\n    }\n    /**\n     * De-registers a Scrollable reference and unsubscribes from its scroll event observable.\n     * @param scrollable Scrollable instance to be deregistered.\n     */\n    deregister(scrollable) {\n        const scrollableReference = this.scrollContainers.get(scrollable);\n        if (scrollableReference) {\n            scrollableReference.unsubscribe();\n            this.scrollContainers.delete(scrollable);\n        }\n    }\n    /**\n     * Returns an observable that emits an event whenever any of the registered Scrollable\n     * references (or window, document, or body) fire a scrolled event. Can provide a time in ms\n     * to override the default \"throttle\" time.\n     *\n     * **Note:** in order to avoid hitting change detection for every scroll event,\n     * all of the events emitted from this stream will be run outside the Angular zone.\n     * If you need to update any data bindings as a result of a scroll event, you have\n     * to run the callback using `NgZone.run`.\n     */\n    scrolled(auditTimeInMs = DEFAULT_SCROLL_TIME) {\n        if (!this._platform.isBrowser) {\n            return of();\n        }\n        return new Observable((observer) => {\n            if (!this._globalSubscription) {\n                this._addGlobalListener();\n            }\n            // In the case of a 0ms delay, use an observable without auditTime\n            // since it does add a perceptible delay in processing overhead.\n            const subscription = auditTimeInMs > 0\n                ? this._scrolled.pipe(auditTime(auditTimeInMs)).subscribe(observer)\n                : this._scrolled.subscribe(observer);\n            this._scrolledCount++;\n            return () => {\n                subscription.unsubscribe();\n                this._scrolledCount--;\n                if (!this._scrolledCount) {\n                    this._removeGlobalListener();\n                }\n            };\n        });\n    }\n    ngOnDestroy() {\n        this._removeGlobalListener();\n        this.scrollContainers.forEach((_, container) => this.deregister(container));\n        this._scrolled.complete();\n    }\n    /**\n     * Returns an observable that emits whenever any of the\n     * scrollable ancestors of an element are scrolled.\n     * @param elementOrElementRef Element whose ancestors to listen for.\n     * @param auditTimeInMs Time to throttle the scroll events.\n     */\n    ancestorScrolled(elementOrElementRef, auditTimeInMs) {\n        const ancestors = this.getAncestorScrollContainers(elementOrElementRef);\n        return this.scrolled(auditTimeInMs).pipe(filter(target => {\n            return !target || ancestors.indexOf(target) > -1;\n        }));\n    }\n    /** Returns all registered Scrollables that contain the provided element. */\n    getAncestorScrollContainers(elementOrElementRef) {\n        const scrollingContainers = [];\n        this.scrollContainers.forEach((_subscription, scrollable) => {\n            if (this._scrollableContainsElement(scrollable, elementOrElementRef)) {\n                scrollingContainers.push(scrollable);\n            }\n        });\n        return scrollingContainers;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        return this._document.defaultView || window;\n    }\n    /** Returns true if the element is contained within the provided Scrollable. */\n    _scrollableContainsElement(scrollable, elementOrElementRef) {\n        let element = coerceElement(elementOrElementRef);\n        let scrollableElement = scrollable.getElementRef().nativeElement;\n        // Traverse through the element parents until we reach null, checking if any of the elements\n        // are the scrollable's element.\n        do {\n            if (element == scrollableElement) {\n                return true;\n            }\n        } while ((element = element.parentElement));\n        return false;\n    }\n    /** Sets up the global scroll listeners. */\n    _addGlobalListener() {\n        this._globalSubscription = this._ngZone.runOutsideAngular(() => {\n            const window = this._getWindow();\n            return fromEvent(window.document, 'scroll').subscribe(() => this._scrolled.next());\n        });\n    }\n    /** Cleans up the global scroll listener. */\n    _removeGlobalListener() {\n        if (this._globalSubscription) {\n            this._globalSubscription.unsubscribe();\n            this._globalSubscription = null;\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: ScrollDispatcher, deps: [{ token: i0.NgZone }, { token: i1.Platform }, { token: DOCUMENT, optional: true }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: ScrollDispatcher, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: ScrollDispatcher, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: i0.NgZone }, { type: i1.Platform }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }] });\n\n/**\n * Sends an event when the directive's element is scrolled. Registers itself with the\n * ScrollDispatcher service to include itself as part of its collection of scrolling events that it\n * can be listened to through the service.\n */\nclass CdkScrollable {\n    constructor(elementRef, scrollDispatcher, ngZone, dir) {\n        this.elementRef = elementRef;\n        this.scrollDispatcher = scrollDispatcher;\n        this.ngZone = ngZone;\n        this.dir = dir;\n        this._destroyed = new Subject();\n        this._elementScrolled = new Observable((observer) => this.ngZone.runOutsideAngular(() => fromEvent(this.elementRef.nativeElement, 'scroll')\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(observer)));\n    }\n    ngOnInit() {\n        this.scrollDispatcher.register(this);\n    }\n    ngOnDestroy() {\n        this.scrollDispatcher.deregister(this);\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Returns observable that emits when a scroll event is fired on the host element. */\n    elementScrolled() {\n        return this._elementScrolled;\n    }\n    /** Gets the ElementRef for the viewport. */\n    getElementRef() {\n        return this.elementRef;\n    }\n    /**\n     * Scrolls to the specified offsets. This is a normalized version of the browser's native scrollTo\n     * method, since browsers are not consistent about what scrollLeft means in RTL. For this method\n     * left and right always refer to the left and right side of the scrolling container irrespective\n     * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n     * in an RTL context.\n     * @param options specified the offsets to scroll to.\n     */\n    scrollTo(options) {\n        const el = this.elementRef.nativeElement;\n        const isRtl = this.dir && this.dir.value == 'rtl';\n        // Rewrite start & end offsets as right or left offsets.\n        if (options.left == null) {\n            options.left = isRtl ? options.end : options.start;\n        }\n        if (options.right == null) {\n            options.right = isRtl ? options.start : options.end;\n        }\n        // Rewrite the bottom offset as a top offset.\n        if (options.bottom != null) {\n            options.top =\n                el.scrollHeight - el.clientHeight - options.bottom;\n        }\n        // Rewrite the right offset as a left offset.\n        if (isRtl && getRtlScrollAxisType() != 0 /* RtlScrollAxisType.NORMAL */) {\n            if (options.left != null) {\n                options.right =\n                    el.scrollWidth - el.clientWidth - options.left;\n            }\n            if (getRtlScrollAxisType() == 2 /* RtlScrollAxisType.INVERTED */) {\n                options.left = options.right;\n            }\n            else if (getRtlScrollAxisType() == 1 /* RtlScrollAxisType.NEGATED */) {\n                options.left = options.right ? -options.right : options.right;\n            }\n        }\n        else {\n            if (options.right != null) {\n                options.left =\n                    el.scrollWidth - el.clientWidth - options.right;\n            }\n        }\n        this._applyScrollToOptions(options);\n    }\n    _applyScrollToOptions(options) {\n        const el = this.elementRef.nativeElement;\n        if (supportsScrollBehavior()) {\n            el.scrollTo(options);\n        }\n        else {\n            if (options.top != null) {\n                el.scrollTop = options.top;\n            }\n            if (options.left != null) {\n                el.scrollLeft = options.left;\n            }\n        }\n    }\n    /**\n     * Measures the scroll offset relative to the specified edge of the viewport. This method can be\n     * used instead of directly checking scrollLeft or scrollTop, since browsers are not consistent\n     * about what scrollLeft means in RTL. The values returned by this method are normalized such that\n     * left and right always refer to the left and right side of the scrolling container irrespective\n     * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n     * in an RTL context.\n     * @param from The edge to measure from.\n     */\n    measureScrollOffset(from) {\n        const LEFT = 'left';\n        const RIGHT = 'right';\n        const el = this.elementRef.nativeElement;\n        if (from == 'top') {\n            return el.scrollTop;\n        }\n        if (from == 'bottom') {\n            return el.scrollHeight - el.clientHeight - el.scrollTop;\n        }\n        // Rewrite start & end as left or right offsets.\n        const isRtl = this.dir && this.dir.value == 'rtl';\n        if (from == 'start') {\n            from = isRtl ? RIGHT : LEFT;\n        }\n        else if (from == 'end') {\n            from = isRtl ? LEFT : RIGHT;\n        }\n        if (isRtl && getRtlScrollAxisType() == 2 /* RtlScrollAxisType.INVERTED */) {\n            // For INVERTED, scrollLeft is (scrollWidth - clientWidth) when scrolled all the way left and\n            // 0 when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollWidth - el.clientWidth - el.scrollLeft;\n            }\n            else {\n                return el.scrollLeft;\n            }\n        }\n        else if (isRtl && getRtlScrollAxisType() == 1 /* RtlScrollAxisType.NEGATED */) {\n            // For NEGATED, scrollLeft is -(scrollWidth - clientWidth) when scrolled all the way left and\n            // 0 when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollLeft + el.scrollWidth - el.clientWidth;\n            }\n            else {\n                return -el.scrollLeft;\n            }\n        }\n        else {\n            // For NORMAL, as well as non-RTL contexts, scrollLeft is 0 when scrolled all the way left and\n            // (scrollWidth - clientWidth) when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollLeft;\n            }\n            else {\n                return el.scrollWidth - el.clientWidth - el.scrollLeft;\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: CdkScrollable, deps: [{ token: i0.ElementRef }, { token: ScrollDispatcher }, { token: i0.NgZone }, { token: i2.Directionality, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.0.4\", type: CdkScrollable, isStandalone: true, selector: \"[cdk-scrollable], [cdkScrollable]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: CdkScrollable, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdk-scrollable], [cdkScrollable]',\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: ScrollDispatcher }, { type: i0.NgZone }, { type: i2.Directionality, decorators: [{\n                    type: Optional\n                }] }] });\n\n/** Time in ms to throttle the resize events by default. */\nconst DEFAULT_RESIZE_TIME = 20;\n/**\n * Simple utility for getting the bounds of the browser viewport.\n * @docs-private\n */\nclass ViewportRuler {\n    constructor(_platform, ngZone, document) {\n        this._platform = _platform;\n        /** Stream of viewport change events. */\n        this._change = new Subject();\n        /** Event listener that will be used to handle the viewport change events. */\n        this._changeListener = (event) => {\n            this._change.next(event);\n        };\n        this._document = document;\n        ngZone.runOutsideAngular(() => {\n            if (_platform.isBrowser) {\n                const window = this._getWindow();\n                // Note that bind the events ourselves, rather than going through something like RxJS's\n                // `fromEvent` so that we can ensure that they're bound outside of the NgZone.\n                window.addEventListener('resize', this._changeListener);\n                window.addEventListener('orientationchange', this._changeListener);\n            }\n            // Clear the cached position so that the viewport is re-measured next time it is required.\n            // We don't need to keep track of the subscription, because it is completed on destroy.\n            this.change().subscribe(() => (this._viewportSize = null));\n        });\n    }\n    ngOnDestroy() {\n        if (this._platform.isBrowser) {\n            const window = this._getWindow();\n            window.removeEventListener('resize', this._changeListener);\n            window.removeEventListener('orientationchange', this._changeListener);\n        }\n        this._change.complete();\n    }\n    /** Returns the viewport's width and height. */\n    getViewportSize() {\n        if (!this._viewportSize) {\n            this._updateViewportSize();\n        }\n        const output = { width: this._viewportSize.width, height: this._viewportSize.height };\n        // If we're not on a browser, don't cache the size since it'll be mocked out anyway.\n        if (!this._platform.isBrowser) {\n            this._viewportSize = null;\n        }\n        return output;\n    }\n    /** Gets a ClientRect for the viewport's bounds. */\n    getViewportRect() {\n        // Use the document element's bounding rect rather than the window scroll properties\n        // (e.g. pageYOffset, scrollY) due to in issue in Chrome and IE where window scroll\n        // properties and client coordinates (boundingClientRect, clientX/Y, etc.) are in different\n        // conceptual viewports. Under most circumstances these viewports are equivalent, but they\n        // can disagree when the page is pinch-zoomed (on devices that support touch).\n        // See https://bugs.chromium.org/p/chromium/issues/detail?id=489206#c4\n        // We use the documentElement instead of the body because, by default (without a css reset)\n        // browsers typically give the document body an 8px margin, which is not included in\n        // getBoundingClientRect().\n        const scrollPosition = this.getViewportScrollPosition();\n        const { width, height } = this.getViewportSize();\n        return {\n            top: scrollPosition.top,\n            left: scrollPosition.left,\n            bottom: scrollPosition.top + height,\n            right: scrollPosition.left + width,\n            height,\n            width,\n        };\n    }\n    /** Gets the (top, left) scroll position of the viewport. */\n    getViewportScrollPosition() {\n        // While we can get a reference to the fake document\n        // during SSR, it doesn't have getBoundingClientRect.\n        if (!this._platform.isBrowser) {\n            return { top: 0, left: 0 };\n        }\n        // The top-left-corner of the viewport is determined by the scroll position of the document\n        // body, normally just (scrollLeft, scrollTop). However, Chrome and Firefox disagree about\n        // whether `document.body` or `document.documentElement` is the scrolled element, so reading\n        // `scrollTop` and `scrollLeft` is inconsistent. However, using the bounding rect of\n        // `document.documentElement` works consistently, where the `top` and `left` values will\n        // equal negative the scroll position.\n        const document = this._document;\n        const window = this._getWindow();\n        const documentElement = document.documentElement;\n        const documentRect = documentElement.getBoundingClientRect();\n        const top = -documentRect.top ||\n            document.body.scrollTop ||\n            window.scrollY ||\n            documentElement.scrollTop ||\n            0;\n        const left = -documentRect.left ||\n            document.body.scrollLeft ||\n            window.scrollX ||\n            documentElement.scrollLeft ||\n            0;\n        return { top, left };\n    }\n    /**\n     * Returns a stream that emits whenever the size of the viewport changes.\n     * This stream emits outside of the Angular zone.\n     * @param throttleTime Time in milliseconds to throttle the stream.\n     */\n    change(throttleTime = DEFAULT_RESIZE_TIME) {\n        return throttleTime > 0 ? this._change.pipe(auditTime(throttleTime)) : this._change;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        return this._document.defaultView || window;\n    }\n    /** Updates the cached viewport size. */\n    _updateViewportSize() {\n        const window = this._getWindow();\n        this._viewportSize = this._platform.isBrowser\n            ? { width: window.innerWidth, height: window.innerHeight }\n            : { width: 0, height: 0 };\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: ViewportRuler, deps: [{ token: i1.Platform }, { token: i0.NgZone }, { token: DOCUMENT, optional: true }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: ViewportRuler, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: ViewportRuler, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: i1.Platform }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }] });\n\nconst VIRTUAL_SCROLLABLE = new InjectionToken('VIRTUAL_SCROLLABLE');\n/**\n * Extending the {@link CdkScrollable} to be used as scrolling container for virtual scrolling.\n */\nclass CdkVirtualScrollable extends CdkScrollable {\n    constructor(elementRef, scrollDispatcher, ngZone, dir) {\n        super(elementRef, scrollDispatcher, ngZone, dir);\n    }\n    /**\n     * Measure the viewport size for the provided orientation.\n     *\n     * @param orientation The orientation to measure the size from.\n     */\n    measureViewportSize(orientation) {\n        const viewportEl = this.elementRef.nativeElement;\n        return orientation === 'horizontal' ? viewportEl.clientWidth : viewportEl.clientHeight;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: CdkVirtualScrollable, deps: [{ token: i0.ElementRef }, { token: ScrollDispatcher }, { token: i0.NgZone }, { token: i2.Directionality, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.0.4\", type: CdkVirtualScrollable, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: CdkVirtualScrollable, decorators: [{\n            type: Directive\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: ScrollDispatcher }, { type: i0.NgZone }, { type: i2.Directionality, decorators: [{\n                    type: Optional\n                }] }] });\n\n/** Checks if the given ranges are equal. */\nfunction rangesEqual(r1, r2) {\n    return r1.start == r2.start && r1.end == r2.end;\n}\n/**\n * Scheduler to be used for scroll events. Needs to fall back to\n * something that doesn't rely on requestAnimationFrame on environments\n * that don't support it (e.g. server-side rendering).\n */\nconst SCROLL_SCHEDULER = typeof requestAnimationFrame !== 'undefined' ? animationFrameScheduler : asapScheduler;\n/** A viewport that virtualizes its scrolling with the help of `CdkVirtualForOf`. */\nclass CdkVirtualScrollViewport extends CdkVirtualScrollable {\n    /** The direction the viewport scrolls. */\n    get orientation() {\n        return this._orientation;\n    }\n    set orientation(orientation) {\n        if (this._orientation !== orientation) {\n            this._orientation = orientation;\n            this._calculateSpacerSize();\n        }\n    }\n    constructor(elementRef, _changeDetectorRef, ngZone, _scrollStrategy, dir, scrollDispatcher, viewportRuler, scrollable) {\n        super(elementRef, scrollDispatcher, ngZone, dir);\n        this.elementRef = elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._scrollStrategy = _scrollStrategy;\n        this.scrollable = scrollable;\n        this._platform = inject(Platform);\n        /** Emits when the viewport is detached from a CdkVirtualForOf. */\n        this._detachedSubject = new Subject();\n        /** Emits when the rendered range changes. */\n        this._renderedRangeSubject = new Subject();\n        this._orientation = 'vertical';\n        /**\n         * Whether rendered items should persist in the DOM after scrolling out of view. By default, items\n         * will be removed.\n         */\n        this.appendOnly = false;\n        // Note: we don't use the typical EventEmitter here because we need to subscribe to the scroll\n        // strategy lazily (i.e. only if the user is actually listening to the events). We do this because\n        // depending on how the strategy calculates the scrolled index, it may come at a cost to\n        // performance.\n        /** Emits when the index of the first element visible in the viewport changes. */\n        this.scrolledIndexChange = new Observable((observer) => this._scrollStrategy.scrolledIndexChange.subscribe(index => Promise.resolve().then(() => this.ngZone.run(() => observer.next(index)))));\n        /** A stream that emits whenever the rendered range changes. */\n        this.renderedRangeStream = this._renderedRangeSubject;\n        /**\n         * The total size of all content (in pixels), including content that is not currently rendered.\n         */\n        this._totalContentSize = 0;\n        /** A string representing the `style.width` property value to be used for the spacer element. */\n        this._totalContentWidth = '';\n        /** A string representing the `style.height` property value to be used for the spacer element. */\n        this._totalContentHeight = '';\n        /** The currently rendered range of indices. */\n        this._renderedRange = { start: 0, end: 0 };\n        /** The length of the data bound to this viewport (in number of items). */\n        this._dataLength = 0;\n        /** The size of the viewport (in pixels). */\n        this._viewportSize = 0;\n        /** The last rendered content offset that was set. */\n        this._renderedContentOffset = 0;\n        /**\n         * Whether the last rendered content offset was to the end of the content (and therefore needs to\n         * be rewritten as an offset to the start of the content).\n         */\n        this._renderedContentOffsetNeedsRewrite = false;\n        /** Whether there is a pending change detection cycle. */\n        this._isChangeDetectionPending = false;\n        /** A list of functions to run after the next change detection cycle. */\n        this._runAfterChangeDetection = [];\n        /** Subscription to changes in the viewport size. */\n        this._viewportChanges = Subscription.EMPTY;\n        if (!_scrollStrategy && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('Error: cdk-virtual-scroll-viewport requires the \"itemSize\" property to be set.');\n        }\n        this._viewportChanges = viewportRuler.change().subscribe(() => {\n            this.checkViewportSize();\n        });\n        if (!this.scrollable) {\n            // No scrollable is provided, so the virtual-scroll-viewport needs to become a scrollable\n            this.elementRef.nativeElement.classList.add('cdk-virtual-scrollable');\n            this.scrollable = this;\n        }\n    }\n    ngOnInit() {\n        // Scrolling depends on the element dimensions which we can't get during SSR.\n        if (!this._platform.isBrowser) {\n            return;\n        }\n        if (this.scrollable === this) {\n            super.ngOnInit();\n        }\n        // It's still too early to measure the viewport at this point. Deferring with a promise allows\n        // the Viewport to be rendered with the correct size before we measure. We run this outside the\n        // zone to avoid causing more change detection cycles. We handle the change detection loop\n        // ourselves instead.\n        this.ngZone.runOutsideAngular(() => Promise.resolve().then(() => {\n            this._measureViewportSize();\n            this._scrollStrategy.attach(this);\n            this.scrollable\n                .elementScrolled()\n                .pipe(\n            // Start off with a fake scroll event so we properly detect our initial position.\n            startWith(null), \n            // Collect multiple events into one until the next animation frame. This way if\n            // there are multiple scroll events in the same frame we only need to recheck\n            // our layout once.\n            auditTime(0, SCROLL_SCHEDULER), \n            // Usually `elementScrolled` is completed when the scrollable is destroyed, but\n            // that may not be the case if a `CdkVirtualScrollableElement` is used so we have\n            // to unsubscribe here just in case.\n            takeUntil(this._destroyed))\n                .subscribe(() => this._scrollStrategy.onContentScrolled());\n            this._markChangeDetectionNeeded();\n        }));\n    }\n    ngOnDestroy() {\n        this.detach();\n        this._scrollStrategy.detach();\n        // Complete all subjects\n        this._renderedRangeSubject.complete();\n        this._detachedSubject.complete();\n        this._viewportChanges.unsubscribe();\n        super.ngOnDestroy();\n    }\n    /** Attaches a `CdkVirtualScrollRepeater` to this viewport. */\n    attach(forOf) {\n        if (this._forOf && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('CdkVirtualScrollViewport is already attached.');\n        }\n        // Subscribe to the data stream of the CdkVirtualForOf to keep track of when the data length\n        // changes. Run outside the zone to avoid triggering change detection, since we're managing the\n        // change detection loop ourselves.\n        this.ngZone.runOutsideAngular(() => {\n            this._forOf = forOf;\n            this._forOf.dataStream.pipe(takeUntil(this._detachedSubject)).subscribe(data => {\n                const newLength = data.length;\n                if (newLength !== this._dataLength) {\n                    this._dataLength = newLength;\n                    this._scrollStrategy.onDataLengthChanged();\n                }\n                this._doChangeDetection();\n            });\n        });\n    }\n    /** Detaches the current `CdkVirtualForOf`. */\n    detach() {\n        this._forOf = null;\n        this._detachedSubject.next();\n    }\n    /** Gets the length of the data bound to this viewport (in number of items). */\n    getDataLength() {\n        return this._dataLength;\n    }\n    /** Gets the size of the viewport (in pixels). */\n    getViewportSize() {\n        return this._viewportSize;\n    }\n    // TODO(mmalerba): This is technically out of sync with what's really rendered until a render\n    // cycle happens. I'm being careful to only call it after the render cycle is complete and before\n    // setting it to something else, but its error prone and should probably be split into\n    // `pendingRange` and `renderedRange`, the latter reflecting whats actually in the DOM.\n    /** Get the current rendered range of items. */\n    getRenderedRange() {\n        return this._renderedRange;\n    }\n    measureBoundingClientRectWithScrollOffset(from) {\n        return this.getElementRef().nativeElement.getBoundingClientRect()[from];\n    }\n    /**\n     * Sets the total size of all content (in pixels), including content that is not currently\n     * rendered.\n     */\n    setTotalContentSize(size) {\n        if (this._totalContentSize !== size) {\n            this._totalContentSize = size;\n            this._calculateSpacerSize();\n            this._markChangeDetectionNeeded();\n        }\n    }\n    /** Sets the currently rendered range of indices. */\n    setRenderedRange(range) {\n        if (!rangesEqual(this._renderedRange, range)) {\n            if (this.appendOnly) {\n                range = { start: 0, end: Math.max(this._renderedRange.end, range.end) };\n            }\n            this._renderedRangeSubject.next((this._renderedRange = range));\n            this._markChangeDetectionNeeded(() => this._scrollStrategy.onContentRendered());\n        }\n    }\n    /**\n     * Gets the offset from the start of the viewport to the start of the rendered data (in pixels).\n     */\n    getOffsetToRenderedContentStart() {\n        return this._renderedContentOffsetNeedsRewrite ? null : this._renderedContentOffset;\n    }\n    /**\n     * Sets the offset from the start of the viewport to either the start or end of the rendered data\n     * (in pixels).\n     */\n    setRenderedContentOffset(offset, to = 'to-start') {\n        // In appendOnly, we always start from the top\n        offset = this.appendOnly && to === 'to-start' ? 0 : offset;\n        // For a horizontal viewport in a right-to-left language we need to translate along the x-axis\n        // in the negative direction.\n        const isRtl = this.dir && this.dir.value == 'rtl';\n        const isHorizontal = this.orientation == 'horizontal';\n        const axis = isHorizontal ? 'X' : 'Y';\n        const axisDirection = isHorizontal && isRtl ? -1 : 1;\n        let transform = `translate${axis}(${Number(axisDirection * offset)}px)`;\n        this._renderedContentOffset = offset;\n        if (to === 'to-end') {\n            transform += ` translate${axis}(-100%)`;\n            // The viewport should rewrite this as a `to-start` offset on the next render cycle. Otherwise\n            // elements will appear to expand in the wrong direction (e.g. `mat-expansion-panel` would\n            // expand upward).\n            this._renderedContentOffsetNeedsRewrite = true;\n        }\n        if (this._renderedContentTransform != transform) {\n            // We know this value is safe because we parse `offset` with `Number()` before passing it\n            // into the string.\n            this._renderedContentTransform = transform;\n            this._markChangeDetectionNeeded(() => {\n                if (this._renderedContentOffsetNeedsRewrite) {\n                    this._renderedContentOffset -= this.measureRenderedContentSize();\n                    this._renderedContentOffsetNeedsRewrite = false;\n                    this.setRenderedContentOffset(this._renderedContentOffset);\n                }\n                else {\n                    this._scrollStrategy.onRenderedOffsetChanged();\n                }\n            });\n        }\n    }\n    /**\n     * Scrolls to the given offset from the start of the viewport. Please note that this is not always\n     * the same as setting `scrollTop` or `scrollLeft`. In a horizontal viewport with right-to-left\n     * direction, this would be the equivalent of setting a fictional `scrollRight` property.\n     * @param offset The offset to scroll to.\n     * @param behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n     */\n    scrollToOffset(offset, behavior = 'auto') {\n        const options = { behavior };\n        if (this.orientation === 'horizontal') {\n            options.start = offset;\n        }\n        else {\n            options.top = offset;\n        }\n        this.scrollable.scrollTo(options);\n    }\n    /**\n     * Scrolls to the offset for the given index.\n     * @param index The index of the element to scroll to.\n     * @param behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n     */\n    scrollToIndex(index, behavior = 'auto') {\n        this._scrollStrategy.scrollToIndex(index, behavior);\n    }\n    /**\n     * Gets the current scroll offset from the start of the scrollable (in pixels).\n     * @param from The edge to measure the offset from. Defaults to 'top' in vertical mode and 'start'\n     *     in horizontal mode.\n     */\n    measureScrollOffset(from) {\n        // This is to break the call cycle\n        let measureScrollOffset;\n        if (this.scrollable == this) {\n            measureScrollOffset = (_from) => super.measureScrollOffset(_from);\n        }\n        else {\n            measureScrollOffset = (_from) => this.scrollable.measureScrollOffset(_from);\n        }\n        return Math.max(0, measureScrollOffset(from ?? (this.orientation === 'horizontal' ? 'start' : 'top')) -\n            this.measureViewportOffset());\n    }\n    /**\n     * Measures the offset of the viewport from the scrolling container\n     * @param from The edge to measure from.\n     */\n    measureViewportOffset(from) {\n        let fromRect;\n        const LEFT = 'left';\n        const RIGHT = 'right';\n        const isRtl = this.dir?.value == 'rtl';\n        if (from == 'start') {\n            fromRect = isRtl ? RIGHT : LEFT;\n        }\n        else if (from == 'end') {\n            fromRect = isRtl ? LEFT : RIGHT;\n        }\n        else if (from) {\n            fromRect = from;\n        }\n        else {\n            fromRect = this.orientation === 'horizontal' ? 'left' : 'top';\n        }\n        const scrollerClientRect = this.scrollable.measureBoundingClientRectWithScrollOffset(fromRect);\n        const viewportClientRect = this.elementRef.nativeElement.getBoundingClientRect()[fromRect];\n        return viewportClientRect - scrollerClientRect;\n    }\n    /** Measure the combined size of all of the rendered items. */\n    measureRenderedContentSize() {\n        const contentEl = this._contentWrapper.nativeElement;\n        return this.orientation === 'horizontal' ? contentEl.offsetWidth : contentEl.offsetHeight;\n    }\n    /**\n     * Measure the total combined size of the given range. Throws if the range includes items that are\n     * not rendered.\n     */\n    measureRangeSize(range) {\n        if (!this._forOf) {\n            return 0;\n        }\n        return this._forOf.measureRangeSize(range, this.orientation);\n    }\n    /** Update the viewport dimensions and re-render. */\n    checkViewportSize() {\n        // TODO: Cleanup later when add logic for handling content resize\n        this._measureViewportSize();\n        this._scrollStrategy.onDataLengthChanged();\n    }\n    /** Measure the viewport size. */\n    _measureViewportSize() {\n        this._viewportSize = this.scrollable.measureViewportSize(this.orientation);\n    }\n    /** Queue up change detection to run. */\n    _markChangeDetectionNeeded(runAfter) {\n        if (runAfter) {\n            this._runAfterChangeDetection.push(runAfter);\n        }\n        // Use a Promise to batch together calls to `_doChangeDetection`. This way if we set a bunch of\n        // properties sequentially we only have to run `_doChangeDetection` once at the end.\n        if (!this._isChangeDetectionPending) {\n            this._isChangeDetectionPending = true;\n            this.ngZone.runOutsideAngular(() => Promise.resolve().then(() => {\n                this._doChangeDetection();\n            }));\n        }\n    }\n    /** Run change detection. */\n    _doChangeDetection() {\n        this._isChangeDetectionPending = false;\n        // Apply the content transform. The transform can't be set via an Angular binding because\n        // bypassSecurityTrustStyle is banned in Google. However the value is safe, it's composed of\n        // string literals, a variable that can only be 'X' or 'Y', and user input that is run through\n        // the `Number` function first to coerce it to a numeric value.\n        this._contentWrapper.nativeElement.style.transform = this._renderedContentTransform;\n        // Apply changes to Angular bindings. Note: We must call `markForCheck` to run change detection\n        // from the root, since the repeated items are content projected in. Calling `detectChanges`\n        // instead does not properly check the projected content.\n        this.ngZone.run(() => this._changeDetectorRef.markForCheck());\n        const runAfterChangeDetection = this._runAfterChangeDetection;\n        this._runAfterChangeDetection = [];\n        for (const fn of runAfterChangeDetection) {\n            fn();\n        }\n    }\n    /** Calculates the `style.width` and `style.height` for the spacer element. */\n    _calculateSpacerSize() {\n        this._totalContentHeight =\n            this.orientation === 'horizontal' ? '' : `${this._totalContentSize}px`;\n        this._totalContentWidth =\n            this.orientation === 'horizontal' ? `${this._totalContentSize}px` : '';\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: CdkVirtualScrollViewport, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i0.NgZone }, { token: VIRTUAL_SCROLL_STRATEGY, optional: true }, { token: i2.Directionality, optional: true }, { token: ScrollDispatcher }, { token: ViewportRuler }, { token: VIRTUAL_SCROLLABLE, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"16.1.0\", version: \"17.0.4\", type: CdkVirtualScrollViewport, isStandalone: true, selector: \"cdk-virtual-scroll-viewport\", inputs: { orientation: \"orientation\", appendOnly: [\"appendOnly\", \"appendOnly\", booleanAttribute] }, outputs: { scrolledIndexChange: \"scrolledIndexChange\" }, host: { properties: { \"class.cdk-virtual-scroll-orientation-horizontal\": \"orientation === \\\"horizontal\\\"\", \"class.cdk-virtual-scroll-orientation-vertical\": \"orientation !== \\\"horizontal\\\"\" }, classAttribute: \"cdk-virtual-scroll-viewport\" }, providers: [\n            {\n                provide: CdkScrollable,\n                useFactory: (virtualScrollable, viewport) => virtualScrollable || viewport,\n                deps: [[new Optional(), new Inject(VIRTUAL_SCROLLABLE)], CdkVirtualScrollViewport],\n            },\n        ], viewQueries: [{ propertyName: \"_contentWrapper\", first: true, predicate: [\"contentWrapper\"], descendants: true, static: true }], usesInheritance: true, ngImport: i0, template: \"<!--\\n  Wrap the rendered content in an element that will be used to offset it based on the scroll\\n  position.\\n-->\\n<div #contentWrapper class=\\\"cdk-virtual-scroll-content-wrapper\\\">\\n  <ng-content></ng-content>\\n</div>\\n<!--\\n  Spacer used to force the scrolling container to the correct size for the *total* number of items\\n  so that the scrollbar captures the size of the entire data set.\\n-->\\n<div class=\\\"cdk-virtual-scroll-spacer\\\"\\n     [style.width]=\\\"_totalContentWidth\\\" [style.height]=\\\"_totalContentHeight\\\"></div>\\n\", styles: [\"cdk-virtual-scroll-viewport{display:block;position:relative;transform:translateZ(0)}.cdk-virtual-scrollable{overflow:auto;will-change:scroll-position;contain:strict;-webkit-overflow-scrolling:touch}.cdk-virtual-scroll-content-wrapper{position:absolute;top:0;left:0;contain:content}[dir=rtl] .cdk-virtual-scroll-content-wrapper{right:0;left:auto}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper{min-height:100%}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-left:0;padding-right:0;margin-left:0;margin-right:0;border-left-width:0;border-right-width:0;outline:none}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper{min-width:100%}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:0;border-top-width:0;border-bottom-width:0;outline:none}.cdk-virtual-scroll-spacer{height:1px;transform-origin:0 0;flex:0 0 auto}[dir=rtl] .cdk-virtual-scroll-spacer{transform-origin:100% 0}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: CdkVirtualScrollViewport, decorators: [{\n            type: Component,\n            args: [{ selector: 'cdk-virtual-scroll-viewport', host: {\n                        'class': 'cdk-virtual-scroll-viewport',\n                        '[class.cdk-virtual-scroll-orientation-horizontal]': 'orientation === \"horizontal\"',\n                        '[class.cdk-virtual-scroll-orientation-vertical]': 'orientation !== \"horizontal\"',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, standalone: true, providers: [\n                        {\n                            provide: CdkScrollable,\n                            useFactory: (virtualScrollable, viewport) => virtualScrollable || viewport,\n                            deps: [[new Optional(), new Inject(VIRTUAL_SCROLLABLE)], CdkVirtualScrollViewport],\n                        },\n                    ], template: \"<!--\\n  Wrap the rendered content in an element that will be used to offset it based on the scroll\\n  position.\\n-->\\n<div #contentWrapper class=\\\"cdk-virtual-scroll-content-wrapper\\\">\\n  <ng-content></ng-content>\\n</div>\\n<!--\\n  Spacer used to force the scrolling container to the correct size for the *total* number of items\\n  so that the scrollbar captures the size of the entire data set.\\n-->\\n<div class=\\\"cdk-virtual-scroll-spacer\\\"\\n     [style.width]=\\\"_totalContentWidth\\\" [style.height]=\\\"_totalContentHeight\\\"></div>\\n\", styles: [\"cdk-virtual-scroll-viewport{display:block;position:relative;transform:translateZ(0)}.cdk-virtual-scrollable{overflow:auto;will-change:scroll-position;contain:strict;-webkit-overflow-scrolling:touch}.cdk-virtual-scroll-content-wrapper{position:absolute;top:0;left:0;contain:content}[dir=rtl] .cdk-virtual-scroll-content-wrapper{right:0;left:auto}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper{min-height:100%}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-left:0;padding-right:0;margin-left:0;margin-right:0;border-left-width:0;border-right-width:0;outline:none}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper{min-width:100%}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:0;border-top-width:0;border-bottom-width:0;outline:none}.cdk-virtual-scroll-spacer{height:1px;transform-origin:0 0;flex:0 0 auto}[dir=rtl] .cdk-virtual-scroll-spacer{transform-origin:100% 0}\"] }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [VIRTUAL_SCROLL_STRATEGY]\n                }] }, { type: i2.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: ScrollDispatcher }, { type: ViewportRuler }, { type: CdkVirtualScrollable, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [VIRTUAL_SCROLLABLE]\n                }] }], propDecorators: { orientation: [{\n                type: Input\n            }], appendOnly: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], scrolledIndexChange: [{\n                type: Output\n            }], _contentWrapper: [{\n                type: ViewChild,\n                args: ['contentWrapper', { static: true }]\n            }] } });\n\n/** Helper to extract the offset of a DOM Node in a certain direction. */\nfunction getOffset(orientation, direction, node) {\n    const el = node;\n    if (!el.getBoundingClientRect) {\n        return 0;\n    }\n    const rect = el.getBoundingClientRect();\n    if (orientation === 'horizontal') {\n        return direction === 'start' ? rect.left : rect.right;\n    }\n    return direction === 'start' ? rect.top : rect.bottom;\n}\n/**\n * A directive similar to `ngForOf` to be used for rendering data inside a virtual scrolling\n * container.\n */\nclass CdkVirtualForOf {\n    /** The DataSource to display. */\n    get cdkVirtualForOf() {\n        return this._cdkVirtualForOf;\n    }\n    set cdkVirtualForOf(value) {\n        this._cdkVirtualForOf = value;\n        if (isDataSource(value)) {\n            this._dataSourceChanges.next(value);\n        }\n        else {\n            // If value is an an NgIterable, convert it to an array.\n            this._dataSourceChanges.next(new ArrayDataSource(isObservable(value) ? value : Array.from(value || [])));\n        }\n    }\n    /**\n     * The `TrackByFunction` to use for tracking changes. The `TrackByFunction` takes the index and\n     * the item and produces a value to be used as the item's identity when tracking changes.\n     */\n    get cdkVirtualForTrackBy() {\n        return this._cdkVirtualForTrackBy;\n    }\n    set cdkVirtualForTrackBy(fn) {\n        this._needsUpdate = true;\n        this._cdkVirtualForTrackBy = fn\n            ? (index, item) => fn(index + (this._renderedRange ? this._renderedRange.start : 0), item)\n            : undefined;\n    }\n    /** The template used to stamp out new elements. */\n    set cdkVirtualForTemplate(value) {\n        if (value) {\n            this._needsUpdate = true;\n            this._template = value;\n        }\n    }\n    /**\n     * The size of the cache used to store templates that are not being used for re-use later.\n     * Setting the cache size to `0` will disable caching. Defaults to 20 templates.\n     */\n    get cdkVirtualForTemplateCacheSize() {\n        return this._viewRepeater.viewCacheSize;\n    }\n    set cdkVirtualForTemplateCacheSize(size) {\n        this._viewRepeater.viewCacheSize = coerceNumberProperty(size);\n    }\n    constructor(\n    /** The view container to add items to. */\n    _viewContainerRef, \n    /** The template to use when stamping out new items. */\n    _template, \n    /** The set of available differs. */\n    _differs, \n    /** The strategy used to render items in the virtual scroll viewport. */\n    _viewRepeater, \n    /** The virtual scrolling viewport that these items are being rendered in. */\n    _viewport, ngZone) {\n        this._viewContainerRef = _viewContainerRef;\n        this._template = _template;\n        this._differs = _differs;\n        this._viewRepeater = _viewRepeater;\n        this._viewport = _viewport;\n        /** Emits when the rendered view of the data changes. */\n        this.viewChange = new Subject();\n        /** Subject that emits when a new DataSource instance is given. */\n        this._dataSourceChanges = new Subject();\n        /** Emits whenever the data in the current DataSource changes. */\n        this.dataStream = this._dataSourceChanges.pipe(\n        // Start off with null `DataSource`.\n        startWith(null), \n        // Bundle up the previous and current data sources so we can work with both.\n        pairwise(), \n        // Use `_changeDataSource` to disconnect from the previous data source and connect to the\n        // new one, passing back a stream of data changes which we run through `switchMap` to give\n        // us a data stream that emits the latest data from whatever the current `DataSource` is.\n        switchMap(([prev, cur]) => this._changeDataSource(prev, cur)), \n        // Replay the last emitted data when someone subscribes.\n        shareReplay(1));\n        /** The differ used to calculate changes to the data. */\n        this._differ = null;\n        /** Whether the rendered data should be updated during the next ngDoCheck cycle. */\n        this._needsUpdate = false;\n        this._destroyed = new Subject();\n        this.dataStream.subscribe(data => {\n            this._data = data;\n            this._onRenderedDataChange();\n        });\n        this._viewport.renderedRangeStream.pipe(takeUntil(this._destroyed)).subscribe(range => {\n            this._renderedRange = range;\n            if (this.viewChange.observers.length) {\n                ngZone.run(() => this.viewChange.next(this._renderedRange));\n            }\n            this._onRenderedDataChange();\n        });\n        this._viewport.attach(this);\n    }\n    /**\n     * Measures the combined size (width for horizontal orientation, height for vertical) of all items\n     * in the specified range. Throws an error if the range includes items that are not currently\n     * rendered.\n     */\n    measureRangeSize(range, orientation) {\n        if (range.start >= range.end) {\n            return 0;\n        }\n        if ((range.start < this._renderedRange.start || range.end > this._renderedRange.end) &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error(`Error: attempted to measure an item that isn't rendered.`);\n        }\n        // The index into the list of rendered views for the first item in the range.\n        const renderedStartIndex = range.start - this._renderedRange.start;\n        // The length of the range we're measuring.\n        const rangeLen = range.end - range.start;\n        // Loop over all the views, find the first and land node and compute the size by subtracting\n        // the top of the first node from the bottom of the last one.\n        let firstNode;\n        let lastNode;\n        // Find the first node by starting from the beginning and going forwards.\n        for (let i = 0; i < rangeLen; i++) {\n            const view = this._viewContainerRef.get(i + renderedStartIndex);\n            if (view && view.rootNodes.length) {\n                firstNode = lastNode = view.rootNodes[0];\n                break;\n            }\n        }\n        // Find the last node by starting from the end and going backwards.\n        for (let i = rangeLen - 1; i > -1; i--) {\n            const view = this._viewContainerRef.get(i + renderedStartIndex);\n            if (view && view.rootNodes.length) {\n                lastNode = view.rootNodes[view.rootNodes.length - 1];\n                break;\n            }\n        }\n        return firstNode && lastNode\n            ? getOffset(orientation, 'end', lastNode) - getOffset(orientation, 'start', firstNode)\n            : 0;\n    }\n    ngDoCheck() {\n        if (this._differ && this._needsUpdate) {\n            // TODO(mmalerba): We should differentiate needs update due to scrolling and a new portion of\n            // this list being rendered (can use simpler algorithm) vs needs update due to data actually\n            // changing (need to do this diff).\n            const changes = this._differ.diff(this._renderedItems);\n            if (!changes) {\n                this._updateContext();\n            }\n            else {\n                this._applyChanges(changes);\n            }\n            this._needsUpdate = false;\n        }\n    }\n    ngOnDestroy() {\n        this._viewport.detach();\n        this._dataSourceChanges.next(undefined);\n        this._dataSourceChanges.complete();\n        this.viewChange.complete();\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._viewRepeater.detach();\n    }\n    /** React to scroll state changes in the viewport. */\n    _onRenderedDataChange() {\n        if (!this._renderedRange) {\n            return;\n        }\n        this._renderedItems = this._data.slice(this._renderedRange.start, this._renderedRange.end);\n        if (!this._differ) {\n            // Use a wrapper function for the `trackBy` so any new values are\n            // picked up automatically without having to recreate the differ.\n            this._differ = this._differs.find(this._renderedItems).create((index, item) => {\n                return this.cdkVirtualForTrackBy ? this.cdkVirtualForTrackBy(index, item) : item;\n            });\n        }\n        this._needsUpdate = true;\n    }\n    /** Swap out one `DataSource` for another. */\n    _changeDataSource(oldDs, newDs) {\n        if (oldDs) {\n            oldDs.disconnect(this);\n        }\n        this._needsUpdate = true;\n        return newDs ? newDs.connect(this) : of();\n    }\n    /** Update the `CdkVirtualForOfContext` for all views. */\n    _updateContext() {\n        const count = this._data.length;\n        let i = this._viewContainerRef.length;\n        while (i--) {\n            const view = this._viewContainerRef.get(i);\n            view.context.index = this._renderedRange.start + i;\n            view.context.count = count;\n            this._updateComputedContextProperties(view.context);\n            view.detectChanges();\n        }\n    }\n    /** Apply changes to the DOM. */\n    _applyChanges(changes) {\n        this._viewRepeater.applyChanges(changes, this._viewContainerRef, (record, _adjustedPreviousIndex, currentIndex) => this._getEmbeddedViewArgs(record, currentIndex), record => record.item);\n        // Update $implicit for any items that had an identity change.\n        changes.forEachIdentityChange((record) => {\n            const view = this._viewContainerRef.get(record.currentIndex);\n            view.context.$implicit = record.item;\n        });\n        // Update the context variables on all items.\n        const count = this._data.length;\n        let i = this._viewContainerRef.length;\n        while (i--) {\n            const view = this._viewContainerRef.get(i);\n            view.context.index = this._renderedRange.start + i;\n            view.context.count = count;\n            this._updateComputedContextProperties(view.context);\n        }\n    }\n    /** Update the computed properties on the `CdkVirtualForOfContext`. */\n    _updateComputedContextProperties(context) {\n        context.first = context.index === 0;\n        context.last = context.index === context.count - 1;\n        context.even = context.index % 2 === 0;\n        context.odd = !context.even;\n    }\n    _getEmbeddedViewArgs(record, index) {\n        // Note that it's important that we insert the item directly at the proper index,\n        // rather than inserting it and the moving it in place, because if there's a directive\n        // on the same node that injects the `ViewContainerRef`, Angular will insert another\n        // comment node which can throw off the move when it's being repeated for all items.\n        return {\n            templateRef: this._template,\n            context: {\n                $implicit: record.item,\n                // It's guaranteed that the iterable is not \"undefined\" or \"null\" because we only\n                // generate views for elements if the \"cdkVirtualForOf\" iterable has elements.\n                cdkVirtualForOf: this._cdkVirtualForOf,\n                index: -1,\n                count: -1,\n                first: false,\n                last: false,\n                odd: false,\n                even: false,\n            },\n            index,\n        };\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: CdkVirtualForOf, deps: [{ token: i0.ViewContainerRef }, { token: i0.TemplateRef }, { token: i0.IterableDiffers }, { token: _VIEW_REPEATER_STRATEGY }, { token: CdkVirtualScrollViewport, skipSelf: true }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.0.4\", type: CdkVirtualForOf, isStandalone: true, selector: \"[cdkVirtualFor][cdkVirtualForOf]\", inputs: { cdkVirtualForOf: \"cdkVirtualForOf\", cdkVirtualForTrackBy: \"cdkVirtualForTrackBy\", cdkVirtualForTemplate: \"cdkVirtualForTemplate\", cdkVirtualForTemplateCacheSize: \"cdkVirtualForTemplateCacheSize\" }, providers: [{ provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy }], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: CdkVirtualForOf, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkVirtualFor][cdkVirtualForOf]',\n                    providers: [{ provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy }],\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: i0.ViewContainerRef }, { type: i0.TemplateRef }, { type: i0.IterableDiffers }, { type: i2$1._RecycleViewRepeaterStrategy, decorators: [{\n                    type: Inject,\n                    args: [_VIEW_REPEATER_STRATEGY]\n                }] }, { type: CdkVirtualScrollViewport, decorators: [{\n                    type: SkipSelf\n                }] }, { type: i0.NgZone }], propDecorators: { cdkVirtualForOf: [{\n                type: Input\n            }], cdkVirtualForTrackBy: [{\n                type: Input\n            }], cdkVirtualForTemplate: [{\n                type: Input\n            }], cdkVirtualForTemplateCacheSize: [{\n                type: Input\n            }] } });\n\n/**\n * Provides a virtual scrollable for the element it is attached to.\n */\nclass CdkVirtualScrollableElement extends CdkVirtualScrollable {\n    constructor(elementRef, scrollDispatcher, ngZone, dir) {\n        super(elementRef, scrollDispatcher, ngZone, dir);\n    }\n    measureBoundingClientRectWithScrollOffset(from) {\n        return (this.getElementRef().nativeElement.getBoundingClientRect()[from] -\n            this.measureScrollOffset(from));\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: CdkVirtualScrollableElement, deps: [{ token: i0.ElementRef }, { token: ScrollDispatcher }, { token: i0.NgZone }, { token: i2.Directionality, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.0.4\", type: CdkVirtualScrollableElement, isStandalone: true, selector: \"[cdkVirtualScrollingElement]\", host: { classAttribute: \"cdk-virtual-scrollable\" }, providers: [{ provide: VIRTUAL_SCROLLABLE, useExisting: CdkVirtualScrollableElement }], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: CdkVirtualScrollableElement, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkVirtualScrollingElement]',\n                    providers: [{ provide: VIRTUAL_SCROLLABLE, useExisting: CdkVirtualScrollableElement }],\n                    standalone: true,\n                    host: {\n                        'class': 'cdk-virtual-scrollable',\n                    },\n                }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: ScrollDispatcher }, { type: i0.NgZone }, { type: i2.Directionality, decorators: [{\n                    type: Optional\n                }] }] });\n\n/**\n * Provides as virtual scrollable for the global / window scrollbar.\n */\nclass CdkVirtualScrollableWindow extends CdkVirtualScrollable {\n    constructor(scrollDispatcher, ngZone, dir) {\n        super(new ElementRef(document.documentElement), scrollDispatcher, ngZone, dir);\n        this._elementScrolled = new Observable((observer) => this.ngZone.runOutsideAngular(() => fromEvent(document, 'scroll').pipe(takeUntil(this._destroyed)).subscribe(observer)));\n    }\n    measureBoundingClientRectWithScrollOffset(from) {\n        return this.getElementRef().nativeElement.getBoundingClientRect()[from];\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: CdkVirtualScrollableWindow, deps: [{ token: ScrollDispatcher }, { token: i0.NgZone }, { token: i2.Directionality, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.0.4\", type: CdkVirtualScrollableWindow, isStandalone: true, selector: \"cdk-virtual-scroll-viewport[scrollWindow]\", providers: [{ provide: VIRTUAL_SCROLLABLE, useExisting: CdkVirtualScrollableWindow }], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: CdkVirtualScrollableWindow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-virtual-scroll-viewport[scrollWindow]',\n                    providers: [{ provide: VIRTUAL_SCROLLABLE, useExisting: CdkVirtualScrollableWindow }],\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: ScrollDispatcher }, { type: i0.NgZone }, { type: i2.Directionality, decorators: [{\n                    type: Optional\n                }] }] });\n\nclass CdkScrollableModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: CdkScrollableModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.0.4\", ngImport: i0, type: CdkScrollableModule, imports: [CdkScrollable], exports: [CdkScrollable] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: CdkScrollableModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: CdkScrollableModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [CdkScrollable],\n                    imports: [CdkScrollable],\n                }]\n        }] });\n/**\n * @docs-primary-export\n */\nclass ScrollingModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: ScrollingModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.0.4\", ngImport: i0, type: ScrollingModule, imports: [BidiModule, CdkScrollableModule, CdkVirtualScrollViewport,\n            CdkFixedSizeVirtualScroll,\n            CdkVirtualForOf,\n            CdkVirtualScrollableWindow,\n            CdkVirtualScrollableElement], exports: [BidiModule, CdkScrollableModule, CdkFixedSizeVirtualScroll,\n            CdkVirtualForOf,\n            CdkVirtualScrollViewport,\n            CdkVirtualScrollableWindow,\n            CdkVirtualScrollableElement] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: ScrollingModule, imports: [BidiModule,\n            CdkScrollableModule, BidiModule, CdkScrollableModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.4\", ngImport: i0, type: ScrollingModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        BidiModule,\n                        CdkScrollableModule,\n                        CdkVirtualScrollViewport,\n                        CdkFixedSizeVirtualScroll,\n                        CdkVirtualForOf,\n                        CdkVirtualScrollableWindow,\n                        CdkVirtualScrollableElement,\n                    ],\n                    exports: [\n                        BidiModule,\n                        CdkScrollableModule,\n                        CdkFixedSizeVirtualScroll,\n                        CdkVirtualForOf,\n                        CdkVirtualScrollViewport,\n                        CdkVirtualScrollableWindow,\n                        CdkVirtualScrollableElement,\n                    ],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkFixedSizeVirtualScroll, CdkScrollable, CdkScrollableModule, CdkVirtualForOf, CdkVirtualScrollViewport, CdkVirtualScrollable, CdkVirtualScrollableElement, CdkVirtualScrollableWindow, DEFAULT_RESIZE_TIME, DEFAULT_SCROLL_TIME, FixedSizeVirtualScrollStrategy, ScrollDispatcher, ScrollingModule, VIRTUAL_SCROLLABLE, VIRTUAL_SCROLL_STRATEGY, ViewportRuler, _fixedSizeVirtualScrollStrategyFactory };\n"],"names":["Subject","dateTimestampProvider","ReplaySubject","constructor","_bufferSize","Infinity","_windowTime","_timestampProvider","_buffer","_infiniteTimeWindow","Math","max","next","value","isStopped","push","now","_trimBuffer","_subscribe","subscriber","_throwIfClosed","subscription","_innerSubscribe","copy","slice","i","length","closed","_checkFinalizedStatuses","adjustedBufferSize","splice","last","innerFrom","Observable","mergeMap","isArrayLike","isFunction","mapOneOrManyArgs","nodeEventEmitterMethods","eventTargetMethods","jqueryMethods","fromEvent","target","eventName","options","resultSelector","undefined","pipe","add","remove","isEventTarget","map","methodName","handler","isNodeStyleEventEmitter","toCommonHandlerRegistry","isJQueryStyleEventEmitter","subTarget","TypeError","args","addListener","removeListener","on","off","addEventListener","removeEventListener","operate","createOperatorSubscriber","audit","durationSelector","source","hasValue","lastValue","durationSubscriber","isComplete","endDuration","unsubscribe","complete","cleanupDuration","subscribe","asyncScheduler","timer","auditTime","duration","scheduler","debounceTime","dueTime","activeTask","lastTime","emit","emitWhenIdle","targetTime","schedule","pairwise","prev","hasPrev","p","share","shareReplay","configOrBufferSize","windowTime","bufferSize","refCount","connector","resetOnError","resetOnComplete","resetOnRefCountZero","filter","skip","count","_","index","AsyncAction","animationFrameProvider","AnimationFrameAction","work","requestAsyncId","id","delay","actions","_scheduled","requestAnimationFrame","flush","recycleAsyncId","_a","cancelAnimationFrame","AsyncScheduler","AnimationFrameScheduler","action","_active","flushId","error","shift","execute","state","immediateProvider","AsapAction","setImmediate","bind","clearImmediate","AsapScheduler","animationFrameScheduler","animationFrame","Subscription","callback","request","cancel","delegate","handle","timestamp","asapScheduler","asap","Immediate","nextHandle","resolved","activeHandles","findAndClearHandle","cb","Promise","resolve","then","TestTools","pending","Object","keys","DOCUMENT","i0","inject","APP_ID","Injectable","Inject","QueryList","booleanAttribute","Directive","Input","InjectionToken","Optional","EventEmitter","Output","NgModule","i1","_getFocusedElementPierceShadowDom","normalizePassiveListenerOptions","_getEventTarget","_getShadowRoot","BehaviorSubject","of","hasModifierKey","A","Z","ZERO","NINE","PAGE_DOWN","PAGE_UP","END","HOME","LEFT_ARROW","RIGHT_ARROW","UP_ARROW","DOWN_ARROW","TAB","ALT","CONTROL","MAC_META","META","SHIFT","tap","take","distinctUntilChanged","takeUntil","i1$1","ObserversModule","coerceElement","BreakpointObserver","ID_DELIMITER","addAriaReferencedId","el","attr","ids","getAriaReferenceIds","some","existingId","trim","setAttribute","join","removeAriaReferencedId","filteredIds","val","removeAttribute","getAttribute","match","MESSAGES_CONTAINER_ID","CDK_DESCRIBEDBY_ID_PREFIX","CDK_DESCRIBEDBY_HOST_ATTRIBUTE","nextId","AriaDescriber","_document","_platform","_messageRegistry","Map","_messagesContainer","_id","describe","hostElement","message","role","_canBeDescribed","key","getKey","setMessageId","set","messageElement","referenceCount","has","_createMessageElement","_isElementDescribedByMessage","_addMessageReference","removeDescription","_isElementNode","_removeMessageReference","registeredMessage","get","_deleteMessageElement","childNodes","ngOnDestroy","describedElements","querySelectorAll","_removeCdkDescribedByReferenceIds","clear","createElement","textContent","_createMessagesContainer","appendChild","delete","containerClassName","serverContainers","messagesContainer","style","visibility","classList","isBrowser","body","element","originalReferenceIds","indexOf","referenceIds","messageId","trimmedMessage","ariaLabel","nodeType","ELEMENT_NODE","ɵfac","AriaDescriber_Factory","t","ɵɵinject","Platform","_2","ɵprov","ɵɵdefineInjectable","token","factory","providedIn","ngDevMode","ɵsetClassMetadata","type","decorators","serviceId","ListKeyManager","_items","_activeItemIndex","_activeItem","_wrap","_letterKeyStream","_typeaheadSubscription","EMPTY","_vertical","_allowedModifierKeys","_homeAndEnd","_pageUpAndDown","enabled","delta","_skipPredicateFn","item","disabled","_pressedLetters","tabOut","change","_itemChangesSubscription","changes","newItems","itemArray","toArray","newIndex","skipPredicate","predicate","withWrap","shouldWrap","withVerticalOrientation","withHorizontalOrientation","direction","_horizontal","withAllowedModifierKeys","withTypeAhead","debounceInterval","getLabel","Error","letter","inputString","items","_getItemsArray","toUpperCase","setActiveItem","cancelTypeahead","withHomeAndEnd","withPageUpDown","previousActiveItem","updateActiveItem","onKeydown","event","keyCode","modifiers","isModifierAllowed","every","modifier","setNextItemActive","setPreviousItemActive","setFirstItemActive","setLastItemActive","targetIndex","_setActiveItemByIndex","itemsLength","toLocaleUpperCase","String","fromCharCode","preventDefault","activeItemIndex","activeItem","isTyping","_setActiveItemByDelta","destroy","_setActiveInWrapMode","_setActiveInDefaultMode","fallbackDelta","ActiveDescendantKeyManager","setInactiveStyles","setActiveStyles","FocusKeyManager","arguments","_origin","setFocusOrigin","origin","focus","IsFocusableConfig","ignoreVisibility","InteractivityChecker","isDisabled","hasAttribute","isVisible","hasGeometry","getComputedStyle","isTabbable","frameElement","getFrameElement","getWindow","getTabIndexValue","nodeName","toLowerCase","tabIndexValue","WEBKIT","IOS","isPotentiallyTabbableIOS","FIREFOX","tabIndex","isFocusable","config","isPotentiallyFocusable","InteractivityChecker_Factory","window","offsetWidth","offsetHeight","getClientRects","isNativeFormElement","isHiddenInput","isInputElement","isAnchorWithHref","isAnchorElement","hasValidTabIndex","isNaN","parseInt","inputType","node","ownerDocument","defaultView","FocusTrap","_enabled","_startAnchor","_endAnchor","_toggleAnchorTabIndex","_element","_checker","_ngZone","deferAnchors","_hasAttached","startAnchorListener","focusLastTabbableElement","endAnchorListener","focusFirstTabbableElement","attachAnchors","startAnchor","endAnchor","runOutsideAngular","_createAnchor","parentNode","insertBefore","nextSibling","focusInitialElementWhenReady","_executeOnStable","focusInitialElement","focusFirstTabbableElementWhenReady","focusLastTabbableElementWhenReady","_getRegionBoundary","bound","markers","console","warn","_getFirstTabbableElement","_getLastTabbableElement","redirectToElement","querySelector","focusableChild","hasAttached","root","children","tabbableChild","anchor","isEnabled","toggleAnchors","fn","isStable","onStable","FocusTrapFactory","create","deferCaptureElements","FocusTrapFactory_Factory","NgZone","CdkTrapFocus","focusTrap","_elementRef","_focusTrapFactory","_previouslyFocusedElement","nativeElement","ngAfterContentInit","autoCapture","_captureFocus","ngDoCheck","ngOnChanges","autoCaptureChange","firstChange","CdkTrapFocus_Factory","ɵɵdirectiveInject","ElementRef","ɵdir","ɵɵdefineDirective","selectors","inputs","exportAs","features","ɵɵInputTransformsFeature","ɵɵNgOnChangesFeature","selector","alias","transform","ConfigurableFocusTrap","_focusTrapManager","register","deregister","_inertStrategy","defer","_enable","preventFocus","_disable","allowFocus","FOCUS_TRAP_INERT_STRATEGY","EventListenerFocusTrapInertStrategy","_listener","e","_trapFocus","focusTrapRoot","contains","closest","setTimeout","activeElement","FocusTrapManager","_focusTrapStack","ft","stack","FocusTrapManager_Factory","ConfigurableFocusTrapFactory","configObject","ConfigurableFocusTrapFactory_Factory","isFakeMousedownFromScreenReader","buttons","detail","isFakeTouchstartFromScreenReader","touch","touches","changedTouches","identifier","radiusX","radiusY","INPUT_MODALITY_DETECTOR_OPTIONS","INPUT_MODALITY_DETECTOR_DEFAULT_OPTIONS","ignoreKeys","TOUCH_BUFFER_MS","modalityEventListenerOptions","passive","capture","InputModalityDetector","mostRecentModality","_modality","ngZone","document","_mostRecentTarget","_lastTouchMs","_onKeydown","_options","_onMousedown","Date","_onTouchstart","modalityDetected","modalityChanged","InputModalityDetector_Factory","Document","LIVE_ANNOUNCER_ELEMENT_TOKEN","LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY","LIVE_ANNOUNCER_DEFAULT_OPTIONS","uniqueIds","LiveAnnouncer","elementToken","_defaultOptions","_liveElement","_createLiveElement","announce","defaultOptions","politeness","clearTimeout","_previousTimeout","_exposeAnnouncerToModals","_currentPromise","_currentResolve","elementClass","previousElements","getElementsByClassName","liveEl","modals","modal","ariaOwns","LiveAnnouncer_Factory","CdkAriaLive","_politeness","_subscription","_contentObserver","observe","elementText","_previousAnnouncedText","_liveAnnouncer","CdkAriaLive_Factory","ContentObserver","FOCUS_MONITOR_DEFAULT_OPTIONS","captureEventListenerOptions","FocusMonitor","_inputModalityDetector","_windowFocused","_originFromTouchInteraction","_elementInfo","_monitoredElementCount","_rootNodeFocusListenerCount","_windowFocusListener","_windowFocusTimeoutId","_stopInputModalityDetector","_rootNodeFocusAndBlurListener","parentElement","_onFocus","_onBlur","_detectionMode","detectionMode","monitor","checkChildren","rootNode","_getDocument","cachedInfo","subject","info","_registerGlobalListeners","stopMonitoring","elementInfo","_setClasses","_removeGlobalListeners","focusVia","focusedElement","_getClosestElementsInfo","forEach","currentElement","_originChanged","_setOrigin","_info","_getWindow","doc","_getFocusOrigin","focusEventTarget","_shouldBeAttributedToTouch","_lastFocusOrigin","_isLastInteractionFromInputLabel","toggle","isFromInteraction","_originTimeoutId","ms","relatedTarget","Node","_emitOrigin","observers","run","rootNodeFocusListeners","modality","results","mostRecentTarget","labels","FocusMonitor_Factory","CdkMonitorFocus","_focusMonitor","_focusOrigin","cdkFocusChange","focusOrigin","ngAfterViewInit","_monitorSubscription","CdkMonitorFocus_Factory","outputs","BLACK_ON_WHITE_CSS_CLASS","WHITE_ON_BLACK_CSS_CLASS","HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS","HighContrastModeDetector","_breakpointSubscription","_hasCheckedHighContrastMode","_applyBodyHighContrastModeCssClasses","getHighContrastMode","testElement","backgroundColor","position","documentWindow","computedStyle","computedColor","replace","bodyClasses","mode","HighContrastModeDetector_Factory","A11yModule","highContrastModeDetector","A11yModule_Factory","ɵmod","ɵɵdefineNgModule","_3","ɵinj","ɵɵdefineInjector","imports","declarations","exports","DIR_DOCUMENT","DIR_DOCUMENT_FACTORY","RTL_LOCALE_PATTERN","_resolveDirectionality","rawValue","navigator","language","test","Directionality","bodyDir","dir","htmlDir","documentElement","Directionality_Factory","Dir","_dir","_isInitialized","previousValue","_rawDir","Dir_Factory","hostVars","hostBindings","Dir_HostBindings","rf","ctx","ɵɵattribute","ɵɵProvidersFeature","provide","useExisting","providers","host","BidiModule","BidiModule_Factory","coerceBooleanProperty","coerceNumberProperty","fallbackValue","_isNumberValue","Number","parseFloat","coerceArray","Array","isArray","coerceCssPixelValue","elementOrRef","coerceStringArray","separator","result","sourceValues","split","sourceValue","trimmedString","ConnectableObservable","isObservable","DataSource","isDataSource","connect","ArrayDataSource","_data","disconnect","_DisposeViewRepeaterStrategy","applyChanges","viewContainerRef","itemContextFactory","itemValueResolver","itemViewChanged","forEachOperation","record","adjustedPreviousIndex","currentIndex","view","operation","previousIndex","insertContext","createEmbeddedView","templateRef","context","move","detach","_RecycleViewRepeaterStrategy","viewCacheSize","_viewCache","viewArgsFactory","_insertView","_detachAndCacheView","_moveView","cachedView","_insertViewFromCache","$implicit","viewArgs","detachedView","_maybeCacheView","pop","insert","SelectionModel","selected","_selected","from","_selection","values","_multiple","initiallySelectedValues","_emitChanges","compareWith","Set","_deselectedToEmit","_selectedToEmit","changed","_markSelected","select","_verifyValueAssignment","_hasQueuedChanges","_emitChangeEvent","deselect","_unmarkSelected","setSelection","oldValues","newSelectedSet","isSelected","flushEvent","_unmarkAll","_getConcreteValue","isEmpty","size","sort","isMultipleSelection","added","removed","getMultipleValuesInSingleSelectionError","inputValue","selectedValue","UniqueSelectionDispatcher","_listeners","notify","name","listener","listen","registered","UniqueSelectionDispatcher_Factory","_VIEW_REPEATER_STRATEGY","SkipSelf","Self","ContentChildren","ContentChild","CdkScrollableModule","interval","merge","startWith","switchMap","extendStyles","dest","importantProperties","hasOwnProperty","setProperty","removeProperty","toggleNativeDragInteractions","enable","userSelect","toggleVisibility","top","opacity","left","combineTransforms","initialTransform","parseCssTimeUnitsToMs","multiplier","getTransformTransitionDurationInMs","transitionedProperties","parseCssPropertyValue","property","find","prop","propertyIndex","rawDurations","rawDelays","getPropertyValue","part","getMutableClientRect","clientRect","getBoundingClientRect","right","bottom","width","height","x","y","isInsideClientRect","adjustClientRect","isPointerNearClientRect","rect","threshold","pointerX","pointerY","xThreshold","yThreshold","ParentPositionTracker","positions","cache","elements","scrollPosition","getViewportScrollPosition","scrollTop","scrollLeft","handleScroll","cachedPosition","newTop","newLeft","viewportScrollPosition","topDifference","leftDifference","scrollY","scrollX","deepCloneNode","clone","cloneNode","descendantsWithId","transferCanvasData","transferInputData","transferData","descendantElements","cloneElements","cloneUniqueId","getContext","drawImage","passiveEventListenerOptions","activeEventListenerOptions","MOUSE_EVENT_IGNORE_TIME","dragImportantProperties","DragRef","_disabled","_dropContainer","_toggleNativeDragInteractions","_handles","_config","_viewportRuler","_dragDropRegistry","_passiveTransform","_activeTransform","_hasStartedDragging","_moveEvents","_pointerMoveSubscription","_pointerUpSubscription","_scrollSubscription","_resizeSubscription","_boundaryElement","_nativeInteractionsEnabled","_disabledHandles","_direction","dragStartDelay","beforeStarted","started","released","ended","entered","exited","dropped","moved","_pointerDown","targetHandle","_getTargetHandle","_initializeDragSequence","_rootElement","_pointerMove","pointerPosition","_getPointerPositionOnPage","distanceX","abs","_pickupPositionOnPage","distanceY","isOverThreshold","dragStartThreshold","isDelayElapsed","_dragStartTime","_getDragStartDelay","container","_endDragSequence","isDragging","isReceiving","_startDragSequence","constrainedPointerPosition","_getConstrainedPointerPosition","_hasMoved","_lastKnownPointerPosition","_updatePointerDirectionDelta","_updateActiveDropContainer","offset","constrainPosition","_initialClientRect","activeTransform","_applyRootElementTransform","distance","_getDragDistance","_pointerDirectionDelta","_pointerUp","_nativeDragStart","withRootElement","withParent","parentDragRef","_parentPositions","registerDragItem","getPlaceholderElement","_placeholder","getRootElement","getVisibleElement","withHandles","handles","disabledHandles","withPreviewTemplate","template","_previewTemplate","withPlaceholderTemplate","_placeholderTemplate","rootElement","_removeRootElementListeners","_initialTransform","SVGElement","_ownerSVGElement","ownerSVGElement","withBoundaryElement","boundaryElement","_containInsideBoundaryOnResize","parent","_parentDragRef","dispose","_anchor","_destroyPreview","_destroyPlaceholder","removeDragItem","_removeSubscriptions","reset","disableHandle","enableHandle","withDirection","_withDropContainer","getFreeDragPosition","setFreeDragPosition","withPreviewContainer","_previewContainer","_sortFromLastPointerPosition","_preview","_previewRef","_placeholderRef","stopDragging","webkitTapHighlightColor","_rootElementTapHighlight","_stopScrolling","_animatePreviewToPlaceholder","_cleanupDragArtifacts","_cleanupCachedDimensions","dropPoint","isTouchEvent","_lastTouchEventTime","dropContainer","placeholder","_createPlaceholderElement","createComment","shadowRoot","_createPreviewElement","replaceChild","_getPreviewInsertionPoint","start","_initialContainer","_initialIndex","getItemIndex","getScrollableParents","referenceElement","stopPropagation","isTouchSequence","isAuxiliaryMouseButton","button","isSyntheticEvent","isFakeEvent","draggable","rootStyles","pointerMove","pointerUp","scrolled","scrollEvent","_updateOnScroll","_boundaryRect","previewTemplate","_pickupPositionInElement","matchSize","_getPointerPositionInElement","_pointerPositionAtLastDirectionChange","startDragging","_previewRect","isPointerOverContainer","_isOverContainer","previousContainer","drop","rawX","rawY","newContainer","_getSiblingContainerFromPosition","exit","enter","sortingDisabled","_startScrollingIfNecessary","_sortItem","_applyPreviewTransform","previewConfig","previewClass","preview","rootRect","viewRef","viewContainer","detectChanges","getRootNode","matchElementSize","getTransform","zIndex","className","placeholderRect","propertyName","timeout","placeholderConfig","placeholderTemplate","pointerEvents","elementRect","handleElement","referenceRect","point","targetTouches","_getViewportScrollPosition","pageX","pageY","svgMatrix","getScreenCTM","svgPoint","createSVGPoint","matrixTransform","inverse","dropContainerLock","lockAxis","pickupX","pickupY","boundaryRect","previewWidth","previewHeight","_getPreviewRect","minY","maxY","minX","maxX","clamp$1","pointerPositionOnPage","positionSinceLastChange","changeX","changeY","pointerDirectionChangeThreshold","shouldEnable","styles","currentPosition","pickupPosition","leftOverflow","rightOverflow","topOverflow","bottomOverflow","mouse","scrollDifference","_cachedShadowRoot","initialParent","previewContainer","documentRef","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","round","min","rootNodes","wrapper","sourceRect","moveItemInArray","array","fromIndex","toIndex","clamp","to","transferArrayItem","currentArray","targetArray","copyArrayItem","SingleAxisSortStrategy","_itemPositions","orientation","_previousSwap","drag","overlaps","withItems","pointerDelta","siblings","_getItemIndexFromPointerPosition","isHorizontal","findIndex","currentItem","siblingAtNewPosition","newPosition","itemOffset","_getItemOffsetPx","siblingOffset","_getSiblingOffsetPx","oldOrder","sibling","isDraggedItem","elementToOffset","activeDraggables","_activeDraggables","newPositionReference","_shouldEnterAsFirstChild","_cacheItemPositions","withSortPredicate","_sortPredicate","getActiveItemsSnapshot","reverse","updateOnScroll","elementToMeasure","a","b","immediateSibling","end","itemPositions","reversed","lastItemRect","firstItemRect","floor","DROP_PROXIMITY_THRESHOLD","SCROLL_PROXIMITY_THRESHOLD","DropListRef","autoScrollDisabled","autoScrollStep","enterPredicate","sortPredicate","sorted","receivingStarted","receivingStopped","_isDragging","_draggables","_siblings","_activeSiblings","_viewportScrollSubscription","_verticalScrollDirection","_horizontalScrollDirection","_stopScrollTimers","_startScrollInterval","_scrollNode","scrollStep","scrollBy","withScrollableParents","registerDropContainer","_sortStrategy","removeDropContainer","_draggingStarted","_notifyReceivingSiblings","_cacheParentPositions","_reset","previousItems","draggedItems","connectedTo","withOrientation","_scrollableElements","_clientRect","scrollNode","verticalScrollDirection","horizontalScrollDirection","getElementScrollDirections","getViewportSize","getVerticalScrollDirection","getHorizontalScrollDirection","_initialScrollSnap","msScrollSnapType","scrollSnapType","_listenToScrollEvents","_stopReceiving","_canReceive","elementFromPoint","_startReceiving","activeSiblings","initiator","receiver","computedVertical","computedHorizontal","scrollHeight","clientHeight","scrollWidth","clientWidth","activeCapturingEventOptions","DragDropRegistry","_dropInstances","_dragInstances","_activeDragInstances","_globalListeners","_draggingPredicate","scroll","_preventDefaultWhileDragging","_persistentTouchmoveListener","startsWith","_clearGlobalListeners","streams","observer","eventOptions","instance","DragDropRegistry_Factory","DEFAULT_CONFIG","DragDrop","createDrag","createDropList","DragDrop_Factory","ViewportRuler","CDK_DRAG_PARENT","assertElementNode","CDK_DRAG_HANDLE","CdkDragHandle","_stateChanges","parentDrag","_parentDrag","CdkDragHandle_Factory","hostAttrs","standalone","CDK_DRAG_PLACEHOLDER","CdkDragPlaceholder","CdkDragPlaceholder_Factory","TemplateRef","data","CDK_DRAG_PREVIEW","CdkDragPreview","CdkDragPreview_Factory","CDK_DRAG_CONFIG","DRAG_HOST_CLASS","CDK_DROP_LIST","CdkDrag","_dragRef","_viewContainerRef","dragDrop","_changeDetectorRef","_selfHandle","_destroyed","movedEvent","_assignDefaults","_dropListRef","addItem","_syncInputs","_handleEvents","_updateRootElement","_setupHandlesListener","freeDragPosition","rootSelectorChange","positionChange","removeItem","rootElementSelector","_getBoundaryElement","boundary","ref","startEvent","markForCheck","releaseEvent","endEvent","enterEvent","exitEvent","dropEvent","draggingDisabled","childHandleElements","handleInstance","dragRef","CdkDrag_Factory","ViewContainerRef","ChangeDetectorRef","contentQueries","CdkDrag_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","CdkDrag_HostBindings","ɵɵclassProp","descendants","CDK_DROP_LIST_GROUP","CdkDropListGroup","CdkDropListGroup_Factory","_uniqueIdCounter","CdkDropList","_dropLists","_group","_scrollDispatcher","_unsortedItems","_setupInputSyncSubscription","_syncItemsWithRef","getSortedItems","documentPosition","compareDocumentPosition","DOCUMENT_POSITION_FOLLOWING","correspondingDropList","list","_scrollableParentsResolved","scrollableParents","getAncestorScrollContainers","scrollable","getElementRef","listAutoScrollDisabled","listOrientation","CdkDropList_Factory","ScrollDispatcher","CdkDropList_HostBindings","useValue","DRAG_DROP_DIRECTIVES","DragDropModule","DragDropModule_Factory","MAC_ENTER","BACKSPACE","NUM_CENTER","ENTER","PAUSE","CAPS_LOCK","ESCAPE","SPACE","PLUS_SIGN","PRINT_SCREEN","INSERT","DELETE","ONE","TWO","THREE","FOUR","FIVE","SIX","SEVEN","EIGHT","FF_SEMICOLON","FF_EQUALS","QUESTION_MARK","AT_SIGN","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","MAC_WK_CMD_LEFT","MAC_WK_CMD_RIGHT","CONTEXT_MENU","NUMPAD_ZERO","NUMPAD_ONE","NUMPAD_TWO","NUMPAD_THREE","NUMPAD_FOUR","NUMPAD_FIVE","NUMPAD_SIX","NUMPAD_SEVEN","NUMPAD_EIGHT","NUMPAD_NINE","NUMPAD_MULTIPLY","NUMPAD_PLUS","NUMPAD_MINUS","NUMPAD_PERIOD","NUMPAD_DIVIDE","F1","F2","F3","F4","F5","F6","F7","F8","F9","F10","F11","F12","NUM_LOCK","SCROLL_LOCK","FIRST_MEDIA","FF_MINUS","MUTE","VOLUME_DOWN","VOLUME_UP","FF_MUTE","FF_VOLUME_DOWN","LAST_MEDIA","FF_VOLUME_UP","SEMICOLON","EQUALS","COMMA","DASH","PERIOD","SLASH","APOSTROPHE","TILDE","OPEN_SQUARE_BRACKET","BACKSLASH","CLOSE_SQUARE_BRACKET","SINGLE_QUOTE","altKey","shiftKey","ctrlKey","metaKey","CSP_NONCE","combineLatest","concat","LayoutModule","LayoutModule_Factory","mediaQueriesForWebkitCompatibility","mediaQueryStyleNode","MediaMatcher","_nonce","_matchMedia","matchMedia","noopMatchMedia","query","BLINK","createEmptyStyleRule","MediaMatcher_Factory","nonce","head","sheet","insertRule","matches","media","_mediaMatcher","_zone","_queries","_destroySubject","isMatched","queries","splitQueries","mediaQuery","_registerQuery","mql","observables","observable","stateObservable","breakpointStates","response","breakpoints","queryObservable","output","BreakpointObserver_Factory","reduce","a1","a2","Breakpoints","XSmall","Small","Medium","Large","XLarge","Handset","Tablet","Web","HandsetPortrait","TabletPortrait","WebPortrait","HandsetLandscape","TabletLandscape","WebLandscape","MutationObserverFactory","MutationObserver","MutationObserverFactory_Factory","_mutationObserverFactory","_observedElements","_cleanupObserver","stream","_observeElement","_unobserveElement","mutations","characterData","childList","subtree","ContentObserver_Factory","CdkObserveContent","_unsubscribe","debounce","_debounce","_currentSubscription","CdkObserveContent_Factory","ObserversModule_Factory","PLATFORM_ID","isPlatformBrowser","hasV8BreakIterator","Intl","v8BreakIterator","_platformId","EDGE","userAgent","TRIDENT","chrome","CSS","ANDROID","SAFARI","Platform_Factory","PlatformModule","PlatformModule_Factory","supportedInputTypes","candidateInputTypes","getSupportedInputTypes","featureTestInput","supportsPassiveEvents","supportsPassiveEventListeners","defineProperty","rtlScrollAxisType","scrollBehaviorSupported","supportsScrollBehavior","Element","scrollToFunction","prototype","scrollTo","toString","getRtlScrollAxisType","scrollContainer","containerStyle","overflow","content","contentStyle","shadowDomIsSupported","_supportsShadowDom","createShadowRoot","attachShadow","ShadowRoot","newActiveElement","composedPath","_isTestEnvironment","__karma__","jasmine","jest","Mocha","forwardRef","Component","ViewEncapsulation","ChangeDetectionStrategy","ViewChild","i2","i2$1","_c0","_c1","VIRTUAL_SCROLL_STRATEGY","FixedSizeVirtualScrollStrategy","itemSize","minBufferPx","maxBufferPx","_scrolledIndexChange","scrolledIndexChange","_viewport","_itemSize","_minBufferPx","_maxBufferPx","attach","viewport","_updateTotalContentSize","_updateRenderedRange","updateItemAndBufferSize","onContentScrolled","onDataLengthChanged","onContentRendered","onRenderedOffsetChanged","scrollToIndex","behavior","scrollToOffset","setTotalContentSize","getDataLength","renderedRange","getRenderedRange","newRange","viewportSize","dataLength","scrollOffset","measureScrollOffset","firstVisibleIndex","maxVisibleItems","ceil","newVisibleIndex","startBuffer","expandStart","endBuffer","expandEnd","setRenderedRange","setRenderedContentOffset","_fixedSizeVirtualScrollStrategyFactory","fixedSizeDir","_scrollStrategy","CdkFixedSizeVirtualScroll","CdkFixedSizeVirtualScroll_Factory","useFactory","deps","DEFAULT_SCROLL_TIME","_scrolled","_globalSubscription","_scrolledCount","scrollContainers","elementScrolled","scrollableReference","auditTimeInMs","_addGlobalListener","_removeGlobalListener","ancestorScrolled","elementOrElementRef","ancestors","scrollingContainers","_scrollableContainsElement","scrollableElement","ScrollDispatcher_Factory","CdkScrollable","elementRef","scrollDispatcher","_elementScrolled","ngOnInit","isRtl","_applyScrollToOptions","LEFT","RIGHT","CdkScrollable_Factory","DEFAULT_RESIZE_TIME","_change","_changeListener","_viewportSize","_updateViewportSize","getViewportRect","documentRect","throttleTime","innerWidth","innerHeight","ViewportRuler_Factory","VIRTUAL_SCROLLABLE","CdkVirtualScrollable","measureViewportSize","viewportEl","CdkVirtualScrollable_Factory","ɵɵInheritDefinitionFeature","rangesEqual","r1","r2","SCROLL_SCHEDULER","CdkVirtualScrollViewport","_orientation","_calculateSpacerSize","viewportRuler","_detachedSubject","_renderedRangeSubject","appendOnly","renderedRangeStream","_totalContentSize","_totalContentWidth","_totalContentHeight","_renderedRange","_dataLength","_renderedContentOffset","_renderedContentOffsetNeedsRewrite","_isChangeDetectionPending","_runAfterChangeDetection","_viewportChanges","checkViewportSize","_measureViewportSize","_markChangeDetectionNeeded","forOf","_forOf","dataStream","newLength","_doChangeDetection","measureBoundingClientRectWithScrollOffset","range","getOffsetToRenderedContentStart","axis","axisDirection","_renderedContentTransform","measureRenderedContentSize","_from","measureViewportOffset","fromRect","scrollerClientRect","viewportClientRect","contentEl","_contentWrapper","measureRangeSize","runAfter","runAfterChangeDetection","CdkVirtualScrollViewport_Factory","ɵcmp","ɵɵdefineComponent","viewQuery","CdkVirtualScrollViewport_Query","ɵɵviewQuery","CdkVirtualScrollViewport_HostBindings","virtualScrollable","ɵɵStandaloneFeature","ngContentSelectors","decls","vars","consts","CdkVirtualScrollViewport_Template","ɵɵprojectionDef","ɵɵelementStart","ɵɵprojection","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵstyleProp","encapsulation","changeDetection","None","OnPush","static","getOffset","CdkVirtualForOf","cdkVirtualForOf","_cdkVirtualForOf","_dataSourceChanges","cdkVirtualForTrackBy","_cdkVirtualForTrackBy","_needsUpdate","cdkVirtualForTemplate","_template","cdkVirtualForTemplateCacheSize","_viewRepeater","_differs","viewChange","cur","_changeDataSource","_differ","_onRenderedDataChange","renderedStartIndex","rangeLen","firstNode","lastNode","diff","_renderedItems","_updateContext","_applyChanges","oldDs","newDs","_updateComputedContextProperties","_adjustedPreviousIndex","_getEmbeddedViewArgs","forEachIdentityChange","even","odd","CdkVirtualForOf_Factory","IterableDiffers","useClass","CdkVirtualScrollableElement","CdkVirtualScrollableElement_Factory","CdkVirtualScrollableWindow","CdkVirtualScrollableWindow_Factory","CdkScrollableModule_Factory","ScrollingModule","ScrollingModule_Factory"],"sourceRoot":"webpack:///","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}