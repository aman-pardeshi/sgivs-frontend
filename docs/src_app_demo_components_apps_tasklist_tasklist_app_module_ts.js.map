{"version":3,"file":"src_app_demo_components_apps_tasklist_tasklist_app_module_ts.js","mappings":"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","sources":["./src/app/demo/components/apps/tasklist/create-task/create-task.component.ts","./src/app/demo/components/apps/tasklist/create-task/create-task.component.html","./src/app/demo/components/apps/tasklist/service/task.service.ts","./src/app/demo/components/apps/tasklist/task-list/task-list.component.ts","./src/app/demo/components/apps/tasklist/task-list/task-list.component.html","./src/app/demo/components/apps/tasklist/tasklist.app-routing.module.ts","./src/app/demo/components/apps/tasklist/tasklist.app.component.ts","./src/app/demo/components/apps/tasklist/tasklist.app.component.html","./src/app/demo/components/apps/tasklist/tasklist.app.module.ts"],"sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { MessageService } from 'primeng/api';\nimport { Member } from 'src/app/demo/api/member';\nimport { DialogConfig, Task } from 'src/app/demo/api/task';\nimport { TaskService } from '../service/task.service';\nimport { MemberService } from 'src/app/demo/service/member.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n    selector: 'app-create-task',\n    templateUrl: './create-task.component.html',\n    providers: [MessageService]\n})\nexport class CreateTaskComponent implements OnInit, OnDestroy {\n\n    task!: Task;\n\n    members: Member[] = [];\n\n    filteredMembers: Member[] = [];\n\n    dialogConfig: DialogConfig = {header: '', visible: false};\n\n    subscription: Subscription;\n\n    dialogSubscription: Subscription;\n\n    constructor(private memberService: MemberService, private messageService: MessageService, private taskService: TaskService) {\n        this.subscription = this.taskService.selectedTask$.subscribe(data => this.task = data);\n        this.dialogSubscription = this.taskService.dialogSource$.subscribe(data => {\n            this.dialogConfig = data;\n            \n            if(this.dialogConfig.newTask) {\n                this.resetTask();\n            }\n        });\n    }\n\n    ngOnInit(): void {\n        this.memberService.getMembers().then(members => this.members = members);\n        this.resetTask();\n    }\n\n    filterMembers(event: any) {\n        let filtered: Member[] = [];\n        let query = event.query;\n\n        for (let i = 0; i < this.members.length; i++) {\n            let member = this.members[i];\n            if (member.name?.toLowerCase().indexOf(query.toLowerCase()) == 0) {\n                filtered.push(member);\n            }\n        }\n\n        this.filteredMembers = filtered;\n    }\n\n    save() {\n        this.task.id = Math.floor(Math.random() * 1000);\n        this.messageService.add({ severity: 'success', summary: 'Success', detail: `Task \"${this.task.name}\" created successfully.` });\n        this.taskService.addTask(this.task);\n        this.taskService.closeDialog();\n    }\n\n    cancelTask(){\n        this.resetTask()\n        this.taskService.closeDialog();\n    }\n\n    resetTask() {\n        this.task = { id: this.task && this.task.id ? this.task.id : Math.floor(Math.random() * 1000), status: 'Waiting' };\n    }\n\n    ngOnDestroy() {\n        this.subscription.unsubscribe();\n    }\n    \n}\n","<p-toast></p-toast>\n<p-dialog [header]=\"dialogConfig.header || ''\" [(visible)]=\"dialogConfig.visible\" [modal]=\"true\" [dismissableMask]=\"true\" styleClass=\"mx-3 sm:mx-0 sm:w-full md:w-8 lg:w-6\" contentStyleClass=\"border-round-bottom border-top-1 surface-border p-0\">\n    <div class=\"p-4\">\n        <div class=\"grid p-fluid formgrid\">\n            <div class=\"col-12 field\">\n                <label for=\"name\" class=\"text-900 font-semibold\">Task Name</label>\n                <input id=\"name\" type=\"text\" placeholder=\"Title\" pInputText [(ngModel)]=\"task.name\" />\n            </div>\n            <div class=\"col-12 field\">\n                <label for=\"description\" class=\"text-900 font-semibold\">Description</label>\n                <p-editor [(ngModel)]=\"task.description\" [style]=\"{'height':'150px'}\"></p-editor>\n            </div>\n            <div class=\"col-6 field mt-0\">\n                <label for=\"start\" class=\"text-900 font-semibold\">Start Date</label>\n                <p-calendar appendTo=\"body\" dateFormat=\"yy-mm-dd\" [showTime]=\"false\" inputId=\"start\" placeholder=\"Start Date\" [(ngModel)]=\"task.startDate\"></p-calendar>\n            </div>\n            <div class=\"col-6 field mt-0\">\n                <label for=\"end\" class=\"text-900 font-semibold\">Due Date</label>\n                <p-calendar appendTo=\"body\" dateFormat=\"yy-mm-dd\" [showTime]=\"false\" inputId=\"end\" placeholder=\"Due Date\" [(ngModel)]=\"task.endDate\"></p-calendar>\n            </div>\n            <div class=\"col-12 field\">\n                <label for=\"members\" class=\"text-900 font-semibold\">Add Team Member</label>\n                <p-autoComplete appendTo=\"body\" inputId=\"members\" [(ngModel)]=\"task.members\" [suggestions]=\"filteredMembers\" (completeMethod)=\"filterMembers($event)\" field=\"name\" [multiple]=\"true\" placeholder=\"Choose team members\" [inputStyle]=\"{'height': '2.5rem'}\">\n                    <ng-template let-member pTemplate=\"selectedItem\">\n                        <div class=\"flex align-items-center\">\n                            <img src=\"assets/demo/images/avatar/{{member.image}}\" [alt]=\"member.name\" class=\"h-2rem w-2rem mr-2\">\n                            <span class=\"text-900 font-medium\">{{member.name}}</span>\n                        </div>\n                    </ng-template>\n                    <ng-template let-member pTemplate=\"item\">\n                        <div class=\"flex align-items-center border-round\">\n                            <img src=\"assets/demo/images/avatar/{{member.image}}\" [alt]=\"member.name\" class=\"h-2rem w-2rem mr-2\">\n                            <span class=\"text-900 font-medium\">{{member.name}}</span>\n                        </div>\n                    </ng-template>\n                </p-autoComplete>\n            </div>\n            <div class=\"col-12 flex justify-content-end mt-4\">\n                <button pButton pRipple class=\"p-button-outlined w-8rem mr-3\" icon=\"pi pi-times\" label=\"Cancel\" (click)=\"cancelTask()\"></button>\n                <button pButton pRipple class=\"p-button-primary w-8rem\" icon=\"pi pi-check\" label=\"Save\" (click)=\"save()\"></button>\n            </div>\n        </div>\n    </div>\n</p-dialog>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { DialogConfig, Task } from 'src/app/demo/api/task';\n\n@Injectable()\nexport class TaskService {\n\n    dialogConfig: DialogConfig = {\n        visible: false,\n        header: '',\n        newTask: false\n    };\n\n    tasks: Task[] = [];\n\n    private taskSource = new BehaviorSubject<Task[]>(this.tasks);\n\n    private selectedTask = new Subject<Task>();\n\n    private dialogSource = new BehaviorSubject<DialogConfig>(this.dialogConfig);\n\n    taskSource$ = this.taskSource.asObservable();\n\n    selectedTask$ = this.selectedTask.asObservable();\n\n    dialogSource$ = this.dialogSource.asObservable();\n\n    constructor(private http: HttpClient) {\n        this.http.get<any>('assets/demo/data/tasks.json')\n            .toPromise()\n            .then(res => res.data as Task[])\n            .then(data => {\n                this.tasks = data;\n                this.taskSource.next(data);\n            });\n    }\n\n    addTask(task: Task) {\n        if (this.tasks.includes(task)) {\n            this.tasks = this.tasks.map(t => t.id === task.id ? task : t);\n        }\n        else {\n            this.tasks = [...this.tasks, task];\n        }\n\n        this.taskSource.next(this.tasks);\n    }\n\n    removeTask(id: number) {\n        this.tasks = this.tasks.filter(t => t.id !== id);\n        this.taskSource.next(this.tasks);\n    }\n\n    onTaskSelect(task: Task) {\n        this.selectedTask.next(task);\n    }\n\n    markAsCompleted(task: Task) {\n        this.tasks = this.tasks.map(t => t.id === task.id ? task : t);\n        this.taskSource.next(this.tasks);\n    }\n\n    showDialog(header: string, newTask: boolean) {\n        this.dialogConfig = {\n            visible: true,\n            header: header,\n            newTask: newTask\n        };\n\n        this.dialogSource.next(this.dialogConfig);\n    }\n\n    closeDialog() {\n        this.dialogConfig = {\n            visible: false\n        }\n\n        this.dialogSource.next(this.dialogConfig);\n    }\n\n}","import { Component, OnInit, Input, ViewChild, ChangeDetectionStrategy } from '@angular/core';\nimport { MenuItem } from 'primeng/api';\nimport { Menu } from 'primeng/menu';\nimport { Task } from 'src/app/demo/api/task';\nimport { TaskService } from '../service/task.service';\n\n@Component({\n    selector: 'app-task-list',\n    templateUrl: './task-list.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TaskListComponent implements OnInit {\n\n    @Input() taskList!: Task[];\n\n    @Input() title!: string;\n\n    @ViewChild('menu') menu!: Menu;\n\n    menuItems: MenuItem[] = [];\n\n    clickedTask!: Task;\n\n    constructor(private taskService: TaskService) { }\n\n    ngOnInit(): void {\n        this.menuItems = [\n            { label: 'Edit', icon: 'pi pi-pencil', command: () => this.onEdit() },\n            { label: 'Delete', icon: 'pi pi-trash', command: () => this.handleDelete() }\n        ];\n    }\n\n    parseDate(date: Date) {\n        let d = new Date(date);\n        return d.toUTCString().split(' ').slice(1, 3).join(' ');\n    }\n\n    handleDelete() {\n        this.taskService.removeTask(this.clickedTask.id);\n    }\n\n    toggleMenu(event: Event, task: Task) {\n        this.clickedTask = task;\n        this.menu.toggle(event);\n    }\n\n    onEdit() {\n        this.taskService.onTaskSelect(this.clickedTask);\n        this.taskService.showDialog('Edit Task', false);\n    }\n\n    onCheckboxChange(event: any, task: Task) {\n        event.originalEvent.stopPropagation();\n        task.completed = event.checked;\n        this.taskService.markAsCompleted(task);\n    }\n}\n","<div>\n    <div class=\"text-900 font-semibold text-lg mt-5 mb-3 border-bottom-1 surface-border py-3\">{{title}}</div>\n    <ul class=\"list-none p-0 m-0\">\n        <li *ngFor=\"let task of taskList\" class=\"flex flex-column gap-3 md:flex-row md:align-items-center p-2 border-bottom-1 surface-border\">\n            <div class=\"flex align-items-center flex-1\">\n                <p-checkbox [binary]=\"true\" (onChange)=\"onCheckboxChange($event, task)\" [(ngModel)]=\"task.completed\" [inputId]=\"task.id.toString()\"></p-checkbox>\n                <label for=\"task.id\" style=\"word-break: break-word;\" class=\"font-medium ml-2\" [ngClass]=\"{'line-through': task.completed}\">{{task.name}}</label>\n            </div>\n            <div class=\"flex flex-1 gap-3 flex-column sm:flex-row sm:justify-content-between\">\n                <div class=\"flex align-items-center\">\n                    <span *ngIf=\"task.comments\" class=\"flex align-items-center font-semibold mr-3\"><i class=\"pi pi-comment mr-2\"></i>{{task.comments}}</span>\n                    <span *ngIf=\"task.attachments\" class=\"flex align-items-center font-semibold mr-3\"><i class=\"pi pi-paperclip mr-2\"></i>{{task.attachments}}</span>\n                    <span class=\"flex align-items-center font-semibold white-space-nowrap\" *ngIf=\"task.startDate\"><i class=\"pi pi-clock mr-2\"></i>{{parseDate(task.startDate)}}</span>\n                </div>\n                <div class=\"flex align-items-center sm:justify-content-end\">\n                    <p-avatarGroup styleClass=\"mr-3\">\n                        <p-avatar *ngFor=\"let member of task.members | slice:0:4\" image=\"assets/demo/images/avatar/{{member.image}}\" size=\"large\" shape=\"circle\"></p-avatar>\n                        <p-avatar *ngIf=\"task && task.members && task.members.length > 4\" label=\"+ {{task.members.length - 4}}\" shape=\"circle\" size=\"large\" [style]=\"{'background-color':'#ffffff', 'color': '#212121', 'border':'2px solid var(--surface-border)'}\"></p-avatar>\n                    </p-avatarGroup>\n                    <button pButton pRipple type=\"button\" icon=\"pi pi-ellipsis-v\" class=\"p-button-rounded p-button-text z-3 ml-auto sm:ml-0\" (click)=\"toggleMenu($event, task)\"></button>\n                    <p-menu #menu [popup]=\"true\" [model]=\"menuItems\" styleClass=\"w-8rem\"></p-menu>\n                </div>\n            </div>\n        </li>\n    </ul>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { TaskListAppComponent } from './tasklist.app.component';\n\n@NgModule({\n    imports: [RouterModule.forChild([\n        { path: '', component: TaskListAppComponent }\n    ])],\n    exports: [RouterModule]\n})\nexport class TaskListAppRoutingModule { }\n","import { Component, OnDestroy } from '@angular/core';\nimport { Task } from 'src/app/demo/api/task';\nimport { TaskService } from './service/task.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n    templateUrl: './tasklist.app.component.html'\n})\nexport class TaskListAppComponent implements OnDestroy {\n\n    subscription: Subscription;\n\n    todo: Task[] = [];\n\n    completed: Task[] = [];\n\n    constructor(private taskService: TaskService) {\n        this.subscription = this.taskService.taskSource$.subscribe(data => this.categorize(data));\n    }\n\n    categorize(tasks: Task[]) {\n        this.todo = tasks.filter(t => t.completed !== true);\n        this.completed = tasks.filter(t => t.completed);\n    }\n\n    ngOnDestroy() {\n        this.subscription.unsubscribe();\n    }\n\n    showDialog() {\n        this.taskService.showDialog('Create Task', true);\n    }\n}","<div class=\"card\">\n    <div class=\"flex justify-content-between align-items-center mb-5\">\n        <span class=\"text-900 text-xl font-semibold\">Task List</span>\n        <button pButton pRipple class=\"p-button-outlined font-semibold\" icon=\"pi pi-plus\" label=\"Create Task\" (click)=\"showDialog()\"></button>\n    </div>\n    <app-task-list [taskList]=\"todo\" title=\"ToDo\"></app-task-list>\n    <app-task-list [taskList]=\"completed\" title=\"Completed\"></app-task-list>\n</div>\n\n<app-create-task></app-create-task>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { TaskListAppRoutingModule } from './tasklist.app-routing.module';\nimport { TaskListAppComponent } from './tasklist.app.component';\nimport { CreateTaskComponent } from './create-task/create-task.component';\nimport { ButtonModule } from 'primeng/button';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { EditorModule } from 'primeng/editor'\nimport { CalendarModule } from 'primeng/calendar';\nimport { AutoCompleteModule } from 'primeng/autocomplete';\nimport { ToastModule } from 'primeng/toast';\nimport { AvatarModule } from 'primeng/avatar';\nimport { MenuModule } from 'primeng/menu';\nimport { AvatarGroupModule } from 'primeng/avatargroup';\nimport { CheckboxModule } from 'primeng/checkbox';\nimport { DialogModule } from 'primeng/dialog';\nimport { TaskListComponent } from './task-list/task-list.component'\nimport { TaskService } from './service/task.service';\nimport { RippleModule } from 'primeng/ripple';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        TaskListAppRoutingModule,\n        ButtonModule,\n        InputTextModule,\n        EditorModule,\n        CalendarModule,\n        ToastModule,\n        AutoCompleteModule,\n        AvatarModule,\n        AvatarGroupModule,\n        CheckboxModule,\n        MenuModule,\n        DialogModule,\n        RippleModule\n    ],\n    declarations: [TaskListAppComponent, CreateTaskComponent, TaskListComponent],\n    providers: [TaskService]\n})\nexport class TaskListAppModule { }\n"],"names":["MessageService","i0","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵpropertyInterpolate1","member_r2","image","ɵɵsanitizeUrl","ɵɵproperty","name","ɵɵtextInterpolate","member_r3","CreateTaskComponent","constructor","memberService","messageService","taskService","members","filteredMembers","dialogConfig","header","visible","subscription","selectedTask$","subscribe","data","task","dialogSubscription","dialogSource$","newTask","resetTask","ngOnInit","getMembers","then","filterMembers","event","filtered","query","i","length","member","toLowerCase","indexOf","push","save","id","Math","floor","random","add","severity","summary","detail","addTask","closeDialog","cancelTask","status","ngOnDestroy","unsubscribe","_","ɵɵdirectiveInject","i1","MemberService","i2","i3","TaskService","_2","selectors","features","ɵɵProvidersFeature","decls","vars","consts","template","CreateTaskComponent_Template","rf","ctx","ɵɵlistener","CreateTaskComponent_Template_p_dialog_visibleChange_1_listener","$event","CreateTaskComponent_Template_input_ngModelChange_7_listener","CreateTaskComponent_Template_p_editor_ngModelChange_11_listener","description","CreateTaskComponent_Template_p_calendar_ngModelChange_15_listener","startDate","CreateTaskComponent_Template_p_calendar_ngModelChange_19_listener","endDate","CreateTaskComponent_Template_p_autoComplete_ngModelChange_23_listener","CreateTaskComponent_Template_p_autoComplete_completeMethod_23_listener","ɵɵtemplate","CreateTaskComponent_ng_template_24_Template","CreateTaskComponent_ng_template_25_Template","CreateTaskComponent_Template_button_click_27_listener","CreateTaskComponent_Template_button_click_28_listener","ɵɵstyleMap","ɵɵpureFunction0","_c0","_c1","BehaviorSubject","Subject","http","tasks","taskSource","selectedTask","dialogSource","taskSource$","asObservable","get","toPromise","res","next","includes","map","t","removeTask","filter","onTaskSelect","markAsCompleted","showDialog","ɵɵinject","HttpClient","factory","ɵfac","task_r1","comments","attachments","ctx_r4","parseDate","member_r11","TaskListComponent_li_4_Template_p_checkbox_onChange_2_listener","restoredCtx","ɵɵrestoreView","_r14","$implicit","ctx_r13","ɵɵnextContext","ɵɵresetView","onCheckboxChange","TaskListComponent_li_4_Template_p_checkbox_ngModelChange_2_listener","completed","TaskListComponent_li_4_span_7_Template","TaskListComponent_li_4_span_8_Template","TaskListComponent_li_4_span_9_Template","TaskListComponent_li_4_p_avatar_12_Template","TaskListComponent_li_4_p_avatar_14_Template","TaskListComponent_li_4_Template_button_click_15_listener","ctx_r16","toggleMenu","toString","ɵɵpureFunction1","_c2","ɵɵpipeBind3","ctx_r0","menuItems","TaskListComponent","label","icon","command","onEdit","handleDelete","date","d","Date","toUTCString","split","slice","join","clickedTask","menu","toggle","originalEvent","stopPropagation","checked","viewQuery","TaskListComponent_Query","TaskListComponent_li_4_Template","title","taskList","RouterModule","TaskListAppComponent","TaskListAppRoutingModule","_3","forChild","path","component","imports","exports","todo","categorize","TaskListAppComponent_Template","TaskListAppComponent_Template_button_click_4_listener","CommonModule","FormsModule","ButtonModule","InputTextModule","EditorModule","CalendarModule","AutoCompleteModule","ToastModule","AvatarModule","MenuModule","AvatarGroupModule","CheckboxModule","DialogModule","RippleModule","TaskListAppModule","declarations"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}